{ "wcag20" : {
      "1" : { 
        "id"             : 1,
        "type"           : "p",
        "title"          : "Principle 1: Perceivable",
        "description"    : "Information and user interface components must be presentable to users in ways they can perceive.",
        "url"            : "http://www.w3.org/TR/WCAG20/#perceivable"
      },
      "1.1" : { 
        "id"             : 16,
        "type"           : "g",
        "title"          : "Guideline 1.1 Text Alternatives",
        "description"    : "Provide text alternatives for any non-text content so that it can be changed into other forms people need, such as large print, braille, speech, symbols or simpler language.",
        "url"            : "http://www.w3.org/TR/WCAG20/#text-equiv"
      },
      "1.1.1" : { 
        "id"             : 1101,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.1.1 Non-text Content",
        "description"    : "All non-text content that is presented to the user has a text alternative that serves the equivalent purpose, except for the situations listed below.",
        "url"            : "http://www.w3.org/TR/WCAG20/#text-equiv",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-text-equiv-all",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html"
      },
      "1.2" : { 
        "id"             : 32,
        "type"           : "g",
        "title"          : "Guideline 1.2 Time-based Media",
        "description"    : "Provide alternatives for time-based media.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv"
      },
      "1.2.1" : { 
        "id"             : 1201,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.2.1 Audio-only and Video-only (Prerecorded)",
        "description"    : "For prerecorded audio-only and prerecorded video-only media, the following are true, except when the audio or video is a media alternative for text and is clearly labeled as such: (1) Prerecorded Audio-only: An alternative for time-based media is provided that presents equivalent information for prerecorded audio-only content. (2) Prerecorded Video-only: Either an alternative for time-based media or an audio track is provided that presents equivalent information for prerecorded video-only content.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-av-only-alt",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-av-only-alt",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-av-only-alt.html"
      },
      "1.2.2" : { 
        "id"             : 1202,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.2.2 Captions (Prerecorded)",
        "description"    : "Captions are provided for all prerecorded audio content in synchronized media, except when the media is a media alternative for text and is clearly labeled as such.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-captions",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-captions",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-captions.html"
      },
      "1.2.3" : { 
        "id"             : 1203,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.2.3 Audio Description or Media Alternative (Prerecorded)",
        "description"    : "An alternative for time-based media or audio description of the prerecorded video content is provided for synchronized media, except when the media is a media alternative for text and is clearly labeled as such.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-audio-desc",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-audio-desc",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-audio-desc.html"
      },
      "1.2.4" : { 
        "id"             : 1204,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "1.2.4 Captions (Live)",
        "description"    : "Captions are provided for all live audio content in synchronized media. ",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-real-time-captions",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-real-time-captions",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-real-time-captions.html"
      },
      "1.2.5" : { 
        "id"             : 1205,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "1.2.5 Audio Description (Prerecorded)",
        "description"    : "Audio description is provided for all prerecorded video content in synchronized media.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-audio-desc-only",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-audio-desc-only",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-audio-desc-only.html"
      },
      "1.2.6" : { 
        "id"             : 1206,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.2.6 Sign Language (Prerecorded)",
        "description"    : "Sign language interpretation is provided for all prerecorded audio content in synchronized media.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-sign",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-sign",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-sign.html"
      },
      "1.2.7" : { 
        "id"             : 1207,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.2.7 Extended Audio Description (Prerecorded)",
        "description"    : "Where pauses in foreground audio are insufficient to allow audio descriptions to convey the sense of the video, extended audio description is provided for all prerecorded video content in synchronized media.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-extended-ad",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-extended-ad",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-extended-ad.html"
      },
      "1.2.8" : { 
        "id"             : 1208,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.2.8 Media Alternative (Prerecorded)",
        "description"    : "An alternative for time-based media is provided for all prerecorded synchronized media and for all prerecorded video-only media.",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-text-doc",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-text-doc",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-text-doc.html"
      },
      "1.2.9" : { 
        "id"             : 1209,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.2.9 Audio-only (Live)",
        "description"    : "An alternative for time-based media that presents equivalent information for live audio-only content is provided. ",
        "url"            : "http://www.w3.org/TR/WCAG20/#media-equiv-live-audio-only",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-media-equiv-live-audio-only",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/media-equiv-live-audio-only.html"
      },
      "1.3" : { 
        "id"             : 64,
        "type"           : "g",
        "title"          : "Guideline 1.3 Adaptable",
        "description"    : "Create content that can be presented in different ways (for example simpler layout) without losing information or structure.",
        "url"            : "http://www.w3.org/TR/WCAG20/#content-structure-separation"
      },
      "1.3.1" : { 
        "id"             : 1301,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.3.1 Info and Relationships",
        "description"    : "Information, structure, and relationships conveyed through presentation can be programmatically determined or are available in text.",
        "url"            : "http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-content-structure-separation-programmatic",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html"
      },
      "1.3.2" : { 
        "id"             : 1302,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.3.2 Meaningful Sequence",
        "description"    : "When the sequence in which content is presented affects its meaning, a correct reading sequence can be programmatically determined.",
        "url"            : "http://www.w3.org/TR/WCAG20/#content-structure-separation-sequence",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-content-structure-separation-sequence",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-sequence.html"
      },
      "1.3.3" : { 
        "id"             : 1303,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.3.3 Sensory Characteristics",
        "description"    : "Instructions provided for understanding and operating content do not rely solely on sensory characteristics of components such as shape, size, visual location, orientation, or sound.",
        "url"            : "http://www.w3.org/TR/WCAG20/#content-structure-separation-understanding",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-content-structure-separation-understanding",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-understanding.html"
      },
      "1.4" : { 
        "id"             : 128,
        "type"           : "g",
        "title"          : "Guideline 1.4 Distinguishable",
        "description"    : "Make it easier for users to see and hear content including separating foreground from background.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast"
      },
      "1.4.1" : { 
        "id"             : 1401,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.4.1 Use of Color",
        "description"    : "Color is not used as the only visual means of conveying information, indicating an action, prompting a response, or distinguishing a visual element.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-without-color",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-without-color",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-without-color.html"
      },
      "1.4.2" : { 
        "id"             : 1402,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "1.4.2 Audio Control",
        "description"    : "If any audio on a Web page plays automatically for more than 3 seconds, either a mechanism is available to pause or stop the audio, or a mechanism is available to control audio volume independently from the overall system volume level.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-dis-audio",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-dis-audio",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-dis-audio.html"
      },
      "1.4.3" : { 
        "id"             : 1403,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "1.4.3 Contrast (Minimum)",
        "description"    : "The visual presentation of text and images of text has a contrast ratio of at least 4.5:1, except for the following: \n(1) Large Text: Large-scale text and images of large-scale text have a contrast ratio of at least 3:1;\n(2) Incidental: Text or images of text that are part of an inactive user interface component, that are pure decoration, that are not visible to anyone, or that are part of a picture that contains significant other visual content, have no contrast requirement.\n(3) Logotypes: Text that is part of a logo or brand name has no minimum contrast requirement.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-contrast",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html"
      },
      "1.4.4" : { 
        "id"             : 1404,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "1.4.4 Resize text",
        "description"    : "Except for captions and images of text, text can be resized without assistive technology up to 200 percent without loss of content or functionality.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-scale",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-scale",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-scale.html"
      },
      "1.4.5" : { 
        "id"             : 1405,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "1.4.5 Images of Text",
        "description"    : "If the technologies being used can achieve the visual presentation, text is used to convey information rather than images of text except for the following: (1) Customizable: The image of text can be visually customized to the user's requirements; (2) Essential: A particular presentation of text is essential to the information being conveyed.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-text-presentation",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-text-presentation",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-text-presentation.html"
      },
      "1.4.6" : { 
        "id"             : 1406,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.4.6 Contrast (Enhanced)",
        "description"    : "The visual presentation of text and images of text has a contrast ratio of at least 7:1, except for the following: (1) Large Text: Large-scale text and images of large-scale text have a contrast ratio of at least 4.5:1; (2) Incidental: Text or images of text that are part of an inactive user interface component, that are pure decoration, that are not visible to anyone, or that are part of a picture that contains significant other visual content, have no contrast requirement. (3) Logotypes: Text that is part of a logo or brand name has no minimum contrast requirement.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast7",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast7",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html"
      },
      "1.4.7" : { 
        "id"             : 1407,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.4.7 Low or No Background Audio",
        "description"    : "For prerecorded audio-only content that (1) contains primarily speech in the foreground, (2) is not an audio CAPTCHA or audio logo, and (3) is not vocalization intended to be primarily musical expression such as singing or rapping, at least one of the following is true: (4a) No Background: The audio does not contain background sounds. (4b) Turn Off: The background sounds can be turned off. (4c) 20 dB: The background sounds are at least 20 decibels lower than the foreground speech content, with the exception of occasional sounds that last for only one or two seconds.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-noaudio",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-noaudio",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-noaudio.html"
      },
      "1.4.8" : { 
        "id"             : 1408,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.4.8 Visual Presentation",
        "description"    : "For the visual presentation of blocks of text, a mechanism is available to achieve the following: (1) Foreground and background colors can be selected by the user; (2) Width is no more than 80 characters or glyphs (40 if CJK); (3) Text is not justified (aligned to both the left and the right margins); (4) Line spacing (leading) is at least space-and-a-half within paragraphs, and paragraph spacing is at least 1.5 times larger than the line spacing; (5) Text can be resized without assistive technology up to 200 percent in a way that does not require the user to scroll horizontally to read a line of text on a full-screen window.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-visual-presentation",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-visual-presentation",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-visual-presentation.html"
      },
      "1.4.9" : { 
        "id"             : 1409,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "1.4.9 Images of Text (No Exception)",
        "description"    : "Images of text are only used for pure decoration or where a particular presentation of text is essential to the information being conveyed.",
        "url"            : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-text-images",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast-text-images",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-text-images.html"
      },
      "2" : { 
        "id"             : 2,
        "type"           : "p",
        "title"          : "Principle 2: Operable",
        "description"    : "User interface components and navigation must be operable.",
        "url"            : "http://www.w3.org/TR/WCAG20/#operable"
      },
      "2.1" : { 
        "id"             : 256,
        "type"           : "g",
        "title"          : "Guideline 2.1 Keyboard Accessible",
        "description"    : "Make all functionality available from a keyboard.",
        "url"            : "http://www.w3.org/TR/WCAG20/#keyboard-operation"
      },
      "2.1.1" : { 
        "id"             : 2101,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.1.1 Keyboard",
        "description"    : "All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the underlying function requires input that depends on the path of the user's movement and not just the endpoints.",
        "url"            : "http://www.w3.org/TR/WCAG20/#keyboard-operation-keyboard-operable",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-keyboard-operation-keyboard-operable",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/keyboard-operation-keyboard-operable.html"
      },
      "2.1.2" : { 
        "id"             : 2102,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.1.2 No Keyboard Trap",
        "description"    : "If keyboard focus can be moved to a component of the page using a keyboard interface, then focus can be moved away from that component using only a keyboard interface, and, if it requires more than unmodified arrow or tab keys or other standard exit methods, the user is advised of the method for moving focus away.",
        "url"            : "http://www.w3.org/TR/WCAG20/#keyboard-operation-trapping",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-keyboard-operation-trapping",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/keyboard-operation-trapping.html"
      },
      "2.1.3" : { 
        "id"             : 2103,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.1.3 Keyboard (No Exception)",
        "description"    : "All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes.",
        "url"            : "http://www.w3.org/TR/WCAG20/#keyboard-operation-all-funcs",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-keyboard-operation-all-funcs",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/keyboard-operation-all-funcs.html"
      },
      "2.2" : { 
        "id"             : 512,
        "type"           : "g",
        "title"          : "Guideline 2.2 Enough Time",
        "description"    : "Provide users enough time to read and use content.",
        "url"            : "http://www.w3.org/TR/WCAG20/#time-limits"
      },
      "2.2.1" : { 
        "id"             : 2201,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.2.1 Timing Adjustable",
        "description"    : "For each time limit that is set by the content, at least one of the following is true: (1) Turn off: The user is allowed to turn off the time limit before encountering it; or (2) Adjust: The user is allowed to adjust the time limit before encountering it over a wide range that is at least ten times the length of the default setting; or (3) Extend: The user is warned before time expires and given at least 20 seconds to extend the time limit with a simple action (for example, 'press the space bar'), and the user is allowed to extend the time limit at least ten times; or (4) Real-time Exception: The time limit is a required part of a real-time event (for example, an auction), and no alternative to the time limit is possible; or (5) Essential Exception: The time limit is essential and extending it would invalidate the activity; or (6) 20 Hour Exception: The time limit is longer than 20 hours.",
        "url"            : "http://www.w3.org/TR/WCAG20/#time-limits-required-behaviors",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-time-limits-required-behaviors",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-required-behaviors.html"
      },
      "2.2.2" : { 
        "id"             : 2202,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.2.2 Pause, Stop, Hide",
        "description"    : "For moving, blinking, scrolling, or auto-updating information, all of the following are true: Moving, blinking, scrolling: For any moving, blinking or scrolling information that (1) starts automatically, (2) lasts more than five seconds, and (3) is presented in parallel with other content, there is a mechanism for the user to pause, stop, or hide it unless the movement, blinking, or scrolling is part of an activity where it is essential; and Auto-updating: For any auto-updating information that (1) starts automatically and (2) is presented in parallel with other content, there is a mechanism for the user to pause, stop, or hide it or to control the frequency of the update unless the auto-updating is part of an activity where it is essential.",
        "url"            : "http://www.w3.org/TR/WCAG20/#time-limits-pause",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-time-limits-pause",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-pause.html"
      },
      "2.2.3" : { 
        "id"             : 2203,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.2.3 No Timing",
        "description"    : "Timing is not an essential part of the event or activity presented by the content, except for non-interactive synchronized media and real-time events.",
        "url"            : "http://www.w3.org/TR/WCAG20/#time-limits-no-exceptions",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-time-limits-no-exceptions",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-no-exceptions.html"
      },
      "2.2.4" : { 
        "id"             : 2204,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.2.4 Interruptions",
        "description"    : "Interruptions can be postponed or suppressed by the user, except interruptions involving an emergency.",
        "url"            : "http://www.w3.org/TR/WCAG20/#time-limits-postponed",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-time-limits-postponed",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-postponed.html"
      },
      "2.2.5" : { 
        "id"             : 2205,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.2.5 Re-authenticating",
        "description"    : "When an authenticated session expires, the user can continue the activity without loss of data after re-authenticating.",
        "url"            : "http://www.w3.org/TR/WCAG20/#time-limits-server-timeout",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-time-limits-server-timeout",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/time-limits-server-timeout.html"
      },
      "2.3" : { 
        "id"             : 1024,
        "type"           : "g",
        "title"          : "Guideline 2.3 Seizures",
        "description"    : "Do not design content in a way that is known to cause seizures.",
        "url"            : "http://www.w3.org/TR/WCAG20/#seizure"
      },
      "2.3.1" : { 
        "id"             : 2301,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.3.1 Three Flashes or Below Threshold",
        "description"    : "Web pages do not contain anything that flashes more than three times in any one second period, or the flash is below the general flash and red flash thresholds.",
        "url"            : "http://www.w3.org/TR/WCAG20/#seizure-does-not-violate",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-seizure-does-not-violate",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/seizure-does-not-violate.html"
      },
      "2.3.2" : { 
        "id"             : 2302,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.3.2 Three Flashes",
        "description"    : "Web pages do not contain anything that flashes more than three times in any one second period.",
        "url"            : "http://www.w3.org/TR/WCAG20/#seizure-three-times",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-seizure-three-times",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/seizure-three-times.html"
      },
      "2.4" : { 
        "id"             : 2048,
        "type"           : "g",
        "title"          : "Guideline 2.4 Navigable",
        "description"    : "Provide ways to help users navigate, find content, and determine where they are.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms"
      },
      "2.4.1" : { 
        "id"             : 2401,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.4.1 Bypass Blocks",
        "description"    : "A mechanism is available to bypass blocks of content that are repeated on multiple Web pages.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-skip",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-skip",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-skip.html"
      },
      "2.4.2" : { 
        "id"             : 2402,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.4.2 Page Titled",
        "description"    : "Web pages have titles that describe topic or purpose.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-title",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-title",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-title.html"
      },
      "2.4.3" : { 
        "id"             : 2403,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.4.3 Focus Order",
        "description"    : "If a Web page can be navigated sequentially and the navigation sequences affect meaning or operation, focusable components receive focus in an order that preserves meaning and operability.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-focus-order",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-focus-order",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-focus-order.html"
      },
      "2.4.4" : { 
        "id"             : 2404,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "2.4.4 Link Purpose (In Context)",
        "description"    : "The purpose of each link can be determined from the link text alone or from the link text together with its programmatically determined link context, except where the purpose of the link would be ambiguous to users in general.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-refs",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-refs",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-refs.html"
      },
      "2.4.5" : { 
        "id"             : 2405,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "2.4.5 Multiple Ways",
        "description"    : "More than one way is available to locate a Web page within a set of Web pages except where the Web Page is the result of, or a step in, a process.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-mult-loc",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-mult-loc",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-mult-loc.html"
      },
      "2.4.6" : { 
        "id"             : 2406,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "2.4.6 Headings and Labels",
        "description"    : "Headings and labels describe topic or purpose.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-descriptive",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-descriptive.html"
      },
      "2.4.7" : { 
        "id"             : 2407,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "2.4.7 Focus Visible",
        "description"    : "Any keyboard operable user interface has a mode of operation where the keyboard focus indicator is visible. ",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-focus-visible",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-focus-visible",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-focus-visible.html"
      },
      "2.4.8" : { 
        "id"             : 2408,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.4.8 Location",
        "description"    : "Information about the user's location within a set of Web pages is available.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-location",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-location",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-location.html"
      },
      "2.4.9" : { 
        "id"             : 2409,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.4.9 Link Purpose (Link Only)",
        "description"    : "A mechanism is available to allow the purpose of each link to be identified from link text alone, except where the purpose of the link would be ambiguous to users in general.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-link",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-link",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-link.html"
      },
      "2.4.10" : { 
        "id"             : 2410,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "2.4.10 Section Headings",
        "description"    : "Section headings are used to organize the content.",
        "url"            : "http://www.w3.org/TR/WCAG20/#navigation-mechanisms-headings",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-navigation-mechanisms-headings",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-headings.html"
      },
      "3" : { 
        "id"             : 4,
        "type"           : "p",
        "title"          : "Principle 3: Understandable",
        "description"    : "Information and the operation of user interface must be understandable.",
        "url"            : "http://www.w3.org/TR/WCAG20/#understandable"
      },
      "3.1" : { 
        "id"             : 4096,
        "type"           : "g",
        "title"          : "Guideline 3.1 Readable",
        "description"    : "Make text content readable and understandable.",
        "url"            : "http://www.w3.org/TR/WCAG20/#meaning"
      },
      "3.1.1" : { 
        "id"             : 3101,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "3.1.1 Language of Page",
        "description"    : "The default human language  of each Web page  can be programmatically determined. ",
        "url"            : "http://www.w3.org/TR/WCAG20/#meaning-doc-lang-id",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-meaning-doc-lang-id",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/meaning-doc-lang-id.html"
      },
      "3.1.2" : { 
        "id"             : 3102,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "3.1.2 Language of Parts",
        "description"    : "The human language of each passage or phrase in the content can be programmatically determined except for proper names, technical terms, words of indeterminate language, and words or phrases that have become part of the vernacular of the immediately surrounding text.",
        "url"            : "http://www.w3.org/TR/WCAG20/#meaning-other-lang-id",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-meaning-other-lang-id",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/meaning-other-lang-id.html"
      },
      "3.1.3" : { 
        "id"             : 3103,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "3.1.3 Unusual Words",
        "description"    : "A mechanism is available for identifying specific definitions of words or phrases used in an unusual or restricted way, including idioms and jargon.",
        "url"            : "http://www.w3.org/TR/WCAG20/#meaning-idioms",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-meaning-idioms",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/meaning-idioms.html"
      },
      "3.1.4" : { 
        "id"             : 3104,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "3.1.4 Abbreviations",
        "description"    : "A mechanism for identifying the expanded form or meaning of abbreviations is available. ",
        "url"            : "http://www.w3.org/TR/WCAG20/#meaning-located",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-meaning-located",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/meaning-located.html"
      },
      "3.1.5" : { 
        "id"             : 3105,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "3.1.5 Reading Level",
        "description"    : "When text requires reading ability more advanced than the lower secondary education level after removal of proper names and titles, supplemental content, or a version that does not require reading ability more advanced than the lower secondary education level, is available. ",
        "url"            : "http://www.w3.org/TR/WCAG20/#meaning-supplements",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-meaning-supplements",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/meaning-supplements.html"
      },
      "3.1.6" : { 
        "id"             : 3106,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "3.1.6 Pronunciation",
        "description"    : "A mechanism is available for identifying specific pronunciation of words where meaning of the words, in context, is ambiguous without knowing the pronunciation.",
        "url"            : "http://www.w3.org/TR/WCAG20/#meaning-pronunciation",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-meaning-pronunciation",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/meaning-pronunciation.html"
      },
      "3.2" : { 
        "id"             : 8192,
        "type"           : "g",
        "title"          : "Guideline 3.2 Predictable",
        "description"    : "Make Web pages appear and operate in predictable ways.",
        "url"            : "http://www.w3.org/TR/WCAG20/#consistent-behavior"
      },
      "3.2.1" : { 
        "id"             : 3201,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "3.2.1 On Focus",
        "description"    : "When any component receives focus, it does not initiate a change of context.",
        "url"            : "http://www.w3.org/TR/WCAG20/#consistent-behavior-receive-focus",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-consistent-behavior-receive-focus",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/consistent-behavior-receive-focus.html"
      },
      "3.2.2" : { 
        "id"             : 3202,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "3.2.2 On Input",
        "description"    : "Changing the setting of any user interface component  does not automatically cause a change of context  unless the user has been advised of the behavior before using the component.",
        "url"            : "http://www.w3.org/TR/WCAG20/#consistent-behavior-unpredictable-change",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-consistent-behavior-unpredictable-change",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/consistent-behavior-unpredictable-change.html"
      },
      "3.2.3" : { 
        "id"             : 3203,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "3.2.3 Consistent Navigation",
        "description"    : "Navigational mechanisms that are repeated on multiple Web pages within a set of Web pages  occur in the same relative order each time they are repeated, unless a change is initiated by the user.",
        "url"            : "http://www.w3.org/TR/WCAG20/#consistent-behavior-consistent-locations",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-consistent-behavior-consistent-locations",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/consistent-behavior-consistent-locations.html"
      },
      "3.2.4" : { 
        "id"             : 3204,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "3.2.4 Consistent Identification",
        "description"    : "Components that have the same functionality within a set of Web pages are identified consistently.",
        "url"            : "http://www.w3.org/TR/WCAG20/#consistent-behavior-consistent-functionality",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-consistent-behavior-consistent-functionality",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/consistent-behavior-consistent-functionality.html"
      },
      "3.2.5" : { 
        "id"             : 3205,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "3.2.5 Change on Request",
        "description"    : "Changes of context are initiated only by user request or a mechanism is available to turn off such changes.",
        "url"            : "http://www.w3.org/TR/WCAG20/#consistent-behavior-no-extreme-changes-context",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-consistent-behavior-no-extreme-changes-context",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/consistent-behavior-no-extreme-changes-context.html"
      },
      "3.3" : { 
        "id"             : 16384,
        "type"           : "g",
        "title"          : "Guideline 3.3 Input Assistance",
        "description"    : "Help users avoid and correct mistakes.",
        "url"            : "http://www.w3.org/TR/WCAG20/#minimize-error"
      },
      "3.3.1" : { 
        "id"             : 3301,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "3.3.1 Error Identification",
        "description"    : "If an input error is automatically detected, the item that is in error is identified and the error is described to the user in text.",
        "url"            : "http://www.w3.org/TR/WCAG20/#minimize-error-identified",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-minimize-error-identified",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-identified.html"
      },
      "3.3.2" : { 
        "id"             : 3302,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "3.3.2 Labels or Instructions",
        "description"    : "Labels or instructions are provided when content requires user input.",
        "url"            : "http://www.w3.org/TR/WCAG20/#minimize-error-cues",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-minimize-error-cues",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-cues.html"
      },
      "3.3.3" : { 
        "id"             : 3303,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "3.3.3 Error Suggestion",
        "description"    : "If an input error is automatically detected and suggestions for correction are known, then the suggestions are provided to the user, unless it would jeopardize the security or purpose of the content.",
        "url"            : "http://www.w3.org/TR/WCAG20/#minimize-error-suggestions",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-minimize-error-suggestions",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-suggestions.html"
      },
      "3.3.4" : { 
        "id"             : 3304,
        "type"           : "sc",
        "level"          : "AA",
        "title"          : "3.3.4 Error Prevention (Legal, Financial, Data)",
        "description"    : "For Web pages that cause legal commitments or financial transactions for the user to occur, that modify or delete user-controllable data in data storage systems, or that submit user test responses, at least one of the following is true:",
        "url"            : "http://www.w3.org/TR/WCAG20/#minimize-error-reversible",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-minimize-error-reversible",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-reversible.html"
      },
      "3.3.5" : { 
        "id"             : 3305,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "3.3.5 Help",
        "description"    : "Context-sensitive help is available.",
        "url"            : "http://www.w3.org/TR/WCAG20/#minimize-error-context-help",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-minimize-error-context-help",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-context-help.html"
      },
      "3.3.6" : { 
        "id"             : 3306,
        "type"           : "sc",
        "level"          : "AAA",
        "title"          : "3.3.6 Error Prevention (All)",
        "description"    : "For Web pages that require the user to submit information, at least one of the following is true",
        "url"            : "http://www.w3.org/TR/WCAG20/#minimize-error-reversible-all",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-minimize-error-reversible-all",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-reversible-all.html"
      },
      "4" : { 
        "id"             : 8,
        "type"           : "p",
        "title"          : "Principle 4: Robust",
        "description"    : "Content must be robust enough that it can be interpreted reliably by a wide variety of user agents, including assistive technologies.",
        "url"            : "http://www.w3.org/TR/WCAG20/#robust"
      },
      "4.1" : { 
        "id"             : 65536,
        "type"           : "g",
        "title"          : "Guideline 4.1 Compatible",
        "description"    : "Maximize compatibility with current and future user agents, including assistive technologies.",
        "url"            : "http://www.w3.org/TR/WCAG20/#ensure-compat"
      },
      "4.1.1" : { 
        "id"             : 4101,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "4.1.1 Parsing Content",
        "description"    : "In content implemented using markup languages, elements have complete start and end tags, elements are nested according to their specifications, elements do not contain duplicate attributes, and any IDs are unique, except where the specifications allow these features.",
        "url"            : "http://www.w3.org/TR/WCAG20/#ensure-compat-parses",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-ensure-compat-parses",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/ensure-compat-parses.html"
      },
      "4.1.2" : { 
        "id"             : 4102,
        "type"           : "sc",
        "level"          : "A",
        "title"          : "4.1.2 Name, Role, Value",
        "description"    : "For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies.",
        "url"            : "http://www.w3.org/TR/WCAG20/#ensure-compat-rsv",
        "url_meet"       : "http://www.w3.org/WAI/WCAG20/quickref/#qr-ensure-compat-rsv",
        "url_understand" : "http://www.w3.org/TR/UNDERSTANDING-WCAG20/ensure-compat-rsv.html"
      }
    },
  "rules" :     [
      {
        "rule_id" : "AUDIO_1",
        "scope" : 1,
        "wcag_primary" : "1.2.1",
        "wcag_related" : ["1.2.2","1.2.4","1.2.9"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["audio","track"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["controls","autoplay","name","type","src","label"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var audio_elements     = dom_cache.media_cache.audio_elements;\n    var audio_elements_len = audio_elements.length;\n\n    for (var i = 0; i < audio_elements_len; i++) {\n      var ae = audio_elements[i];\n      var de = ae.dom_element;\n      var cs = de.computed_style;\n\n      if ((cs.is_visible_to_at === VISIBILITY.VISIBLE) ||\n          (ae.has_autoplay)) {        \n        if (ae.getTextTracks().length) rule_result.addResult(TEST_RESULT.PASS, ae, 'ELEMENT_PASS_1', []);               \n        else if (de.has_aria_describedby) rule_result.addResult(TEST_RESULT.PASS, ae, 'ELEMENT_PASS_2', []);\n        else rule_result.addResult(TEST_RESULT.FAIL, ae, 'ELEMENT_FAIL_1', []);    \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ae, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Audio Rule 1",
        "definition" : "@audio@ elements %s have caption or text transcription of the audio content",
        "summary" : "@audio@ %s have alternative",
        "target_resource_desc" : "@audio@ elements",
        "purpose" : [
           "Captions and text transcripts provide a means for people cannot hear the audio to understand the audio content",
           "Some types of learning disabilities affect speech perception, captions and text transcripts provide an alternative way to understand the audio content",
          "When the language of the audio is different than the native language of the listener, captions and text transcripts support the listner in understanding the audio content"
        ],
        "techniques" : [
           "Use the @track@ element to add captioning to the audio content",
           "Use WebVTT to encode the timed stamped captioning information for the audio content",
          "Use @aria-describedby@ to reference a text transcript of the audio content"
        ],
        "manual_checks" : [
           "When captions are enabled on the media player, check to make sure the captions visible",
           "If there is a caption make sure the captions accurately represents the audio content",
          "If there is a text transcript make sure the transcript accurately represents the audio content"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The audio element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-audio-element"
          },
          { "type"  : 9,
            "title" : "HMTL 5: The track element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-track-element"
          },
          { "type"  : 9,
            "title" : "WebVTT: The Web Video Text Tracks Format",
            "url"   : "http://dev.w3.org/html5/webvtt/"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add caption or text transcript to @audio@ element",
           "FAIL_P": "Add a caption or text transcript to each of the %N_F the @audio@ elements with out captions or transcripts",
           "MANUAL_CHECK_S": "Verify the @audio@ element has either a caption or text transcript of the audio content",
           "MANUAL_CHECK_P": "Verify the %N_MC @audio@ elements are audio only have either a caption or text transcript of the audio",
           "HIDDEN_S": "The @audio@ element that is hidden was not analyzed for accessible audio",
           "HIDDEN_P": "The %N_H @audio@ elements that are hidden were not analyzed for accessible audio",
           "NOT_APPLICABLE": "No @audio@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@audio@ element has caption",
           "ELEMENT_PASS_2": "@audio@ element has a text transcript",
           "ELEMENT_FAIL_1": "Add caption or text transcript to @audio@ element",
           "ELEMENT_MC_1": "Verify the @audio@ element has captions or text transcript",
           "ELEMENT_HIDDEN_1": "The @audio@ element is hidden and cannot render content"    
        }
      },
      {
        "rule_id" : "AUDIO_2",
        "scope" : 1,
        "wcag_primary" : "1.2.1",
        "wcag_related" : ["1.2.2","1.2.4","1.2.9"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["object","param"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["data","type","name","value","valuetype"],
        "validate" : "function (dom_cache, rule_result) {\n    \n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var object_elements     = dom_cache.media_cache.object_elements;\n    var object_elements_len = object_elements.length;\n\n    for (var i = 0; i < object_elements_len; i++) {\n      var oe = object_elements[i];\n      var de = oe.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (de.has_aria_describedby) {\n          rule_result.addResult(TEST_RESULT.PASS, oe, 'ELEMENT_PASS_1', []);\n        }\n        else {\n          if ((typeof oe.type === 'string') && \n               (oe.type.indexOf('audio') >= 0)) { \n            rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_1', []);     \n          }  \n          else {\n            rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_2', []);   \n          }\n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, oe, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Audio Rule 2",
        "definition" : "@object@ elements used for audio only %s have caption or text transcription of the audio content",
        "summary" : "@object@ for audio %s have alternative",
        "target_resource_desc" : "@object@ elements",
        "purpose" : [
           "Captions and text transcripts provide a means for people cannot hear the audio to understand the audio content",
           "Some types of learning disabilities affect speech perception, captions and text transcripts provide an alternative way to understand the audio content",
          "When the language of the audio is different than the native language of the listener, captions and text transcripts support the listner in understanding the audio content"
        ],
        "techniques" : [
           "Use the @audio@ element instead of the @object@ element for audio only content, since the @audio@ element provides better support for captions and text transcripts",
          "Use @aria-describedby@ attribute to point to a text description of the audio only content"
        ],
        "manual_checks" : [
           "Check the web page for a link to a text transcript of the audio, or if the transcript is part of the page rendering the audio",
           "Check the media player for a button to turn on and off captions",
           "When captions are enabled on the media player, check to make sure the captions visible and represent the speech and sounds heard on the audio",
          "In some cases 'open' captions might be used, this means the captions are alway 'on' as part of the video"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The object element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-object-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add caption or text transcript to @object@ element",
           "FAIL_P": "Add a caption or text transcript to each of the %N_F the @object@ elements with out captions or transcripts",
           "MANUAL_CHECK_S": "Check if the @object@ element is audio only content.  If it is audio only make sure it has either a caption or text transcript of the audio content",
           "MANUAL_CHECK_P": "Check if any of the %N_MC @object@ elements are audio only. If any are audio only make sure they have either a caption or text transcript of the audio",
           "HIDDEN_S": "The @object@ element that is hidden was not analyzed for accessible audio",
           "HIDDEN_P": "The %N_H @object@ elements that are hidden were not analyzed for accessible audio",
           "NOT_APPLICABLE": "No @embed@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@object@ element references text transcript",
           "ELEMENT_FAIL_1": "Add captions or text transcript to @object@ element",
           "ELEMENT_MC_1": "Verify the @object@ element has synchronous captions",
           "ELEMENT_MC_2": "Verify the @object@ element only renders audio only, if it is audio only verify that it has captions or text transcript"    
        }
      },
      {
        "rule_id" : "AUDIO_3",
        "scope" : 1,
        "wcag_primary" : "1.2.1",
        "wcag_related" : ["1.2.2","1.2.4","1.2.9"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["embed"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["src","type"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var embed_elements     = dom_cache.media_cache.embed_elements;\n    var embed_elements_len = embed_elements.length;\n\n    for (var i = 0; i < embed_elements_len; i++) {\n      var ee = embed_elements[i];\n      var de = ee.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (de.has_aria_describedby) {\n          rule_result.addResult(TEST_RESULT.PASS, ee, 'ELEMENT_PASS_1', []);\n        }\n        else {\n          if ((typeof ee.type === 'string') && \n              (ee.type.indexOf('audio') >= 0)) {\n            rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_1', []);     \n          }  \n          else {\n            rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_2', []);   \n          }\n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ee, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Audio Rule 3",
        "definition" : "@embed@ elements used for audio only %s have caption or text transcription of the audio content",
        "summary" : "@embed@ for audio %s have alternative",
        "target_resource_desc" : "@embed@ elements",
        "purpose" : [
           "Captions and text transcripts provide a means for people cannot hear the audio to understand the audio content",
           "Some types of learning disabilities affect speech perception, captions and text transcripts provide an alternative way to understand the audio content",
          "When the language of the audio is different than the native language of the listener, captions and text transcripts support the listner in understanding the audio content"
        ],
        "techniques" : [
           "Use the @audio@ element instead of the @embed@ element for audio only content, since the @audio@ element provides better support for captions and text transcripts",
          "Use @aria-describedby@ attribute to point to a text description of the audio only content"
        ],
        "manual_checks" : [
           "Check the web page for a link to a text transcript of the audio, or if the transcript is part of the page rendering the audio",
           "Check the media player for a button to turn on and off captions",
           "When captions are enabled on the media player, check to make sure the captions visible and represent the speech and sounds heard on the audio",
          "In some cases 'open' captions might be used, this means the captions are alway 'on' as part of the video"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The embed element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-embed-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add caption or text transcript to @embed@ element",
           "FAIL_P": "Add a caption or text transcript to each of the %N_F @embed@ elements without captions or transcripts",
           "MANUAL_CHECK_S": "Check if the @embed@ element is audio only content.  If it is audio only make sure it has either a caption or text transcript of the audio content",
           "MANUAL_CHECK_P": "Check if any of the %N_MC @embed@ elements are audio only. If any are audio only make sure they have either a caption or text transcript of the audio",
           "HIDDEN_S": "The @embed@ element that is hidden was not analyzed for accessible audio",
           "HIDDEN_P": "The %N_H @embed@ elements that are hidden were not analyzed for accessibile audio",
           "NOT_APPLICABLE": "No @embed@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@embed@ element references text transcript",
           "ELEMENT_FAIL_1": "Add captions or text transcript to @embed@ element",
           "ELEMENT_MC_1": "Verify the @embed@ element has synchronous captions",
           "ELEMENT_MC_2": "Verify the @embed@ element only renders audio only, if it is audio only verify that it has captions or text transcript"    
        }
      },
      {
        "rule_id" : "COLOR_1",
        "scope" : 1,
        "wcag_primary" : "1.4.3",
        "wcag_related" : ["1.4.1","1.4.6"],
        "last_updated" : "2012-06-12",
        "target_resources" : ["textnodes"],
        "rule_category" : 256,
        "language_dependency" : "",
        "cache_dependency" : "text_cache",
        "resource_properties" : ["color_hex","background_color_hex","background_image","is_large_font","color_contrast_ratio"],
        "validate" : "function (dom_cache, rule_result) {\n  \n      var MIN_CCR_NORMAL_FONT = 4.5;\n      var MIN_CCR_LARGE_FONT  = 3.1;\n  \n      var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n   \n      var cc_items     = dom_cache.text_cache.text_nodes;\n      var cc_items_len = cc_items.length;\n     \n      for (var i = 0; i < cc_items_len; i++) {\n\n        var test_result = TEST_RESULT.PASS;\n        var message_id = '';\n        var args = [];\n\n        var cc_item = cc_items[i];\n        var pe = cc_item.parent_element;\n        var cs = pe.computed_style;\n\n        // if color contrast raio is undefined, skip this item\n        if (!cs.color_contrast_ratio) continue;\n\n        if (cs.is_visible_onscreen === VISIBILITY.VISIBLE) {\n\n          if ((cs.color_contrast_ratio >= MIN_CCR_NORMAL_FONT) ||\n            ((cs.color_contrast_ratio >= MIN_CCR_LARGE_FONT) && (cs.is_large_font))) {\n     \n            // Passes color contrast requirements\n            if (cs.background_image != 'none') {\n              rule_result.addResult(TEST_RESULT.MANUAL_CHECK, cc_item, 'ELEMENT_MC_1', [cs.color_contrast_ratio]);\n            }           \n            else {\n              rule_result.addResult(TEST_RESULT.PASS, cc_item, 'ELEMENT_PASS_1', [cs.color_contrast_ratio]);\n            }\n          }\n          else {\n          \n            // Fails color contrast requirements\n            if (cs.background_image === 'none') {\n              rule_result.addResult(TEST_RESULT.FAIL, cc_item, 'ELEMENT_FAIL_1', [cs.color_contrast_ratio]);\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.MANUAL_CHECK, cc_item, 'ELEMENT_MC_2', [cs.color_contrast_ratio]);\n            }     \n          }\n        }\n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, cc_item, 'ELEMENT_HIDDEN_1', []);        \n        }\n        \n      } // end loop  \n      \n    }",
        "nls_rule_id" : "Color Rule 1",
        "definition" : "Text content %s exceed Color Contrast Ratio (CCR) of 4.5 for any size text or 3.1 for large and/or bolded text",
        "summary" : "Text %s exceed CCR of 4.5",
        "target_resource_desc" : "All elements with text content",
        "purpose" : [
          "The higher the color contrast of text the more easy it is to read, especially for people with visual impairments"
        ],
        "techniques" : [
           "Change the foreground color to a more complementary color to the background color",
           "Change the background color to a more complementary color to the foreground color",
          "Remove background images or verify they do not compromise color contrast requirements"
        ],
        "manual_checks" : [
           "Use graphic editing tools to analyze the color(s) of the background image and then recacluate the CCR with the range of colors in the background image",
          "Verify the range of colors that could be part of the background of text is have a CCR > 4.5"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "WCAG 2.0 Success Criterion 1.4.3 Contrast (Minimum): The visual presentation of text and images of text has a contrast ratio of at least 4.5:1",
            "url"   : "http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast"
          },
          { "type"  : 11,
            "title" : "How to meet Success Criterion 1.4.3 Contrast (Minimum): The visual presentation of text and images of text has a contrast ratio of at least 4.5:1",
            "url"   : "http://www.w3.org/WAI/WCAG20/quickref/#qr-visual-audio-contrast"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the foreground and background colors of the text element to meet the CCR > 4.5 requirement",
           "FAIL_P": "Change the foreground and background colors of the %N_F text elements to meet the CCR > 4.5 requirement",
           "MANUAL_CHECK_S": "One element requires manual checking for CCR > 4.5 due to the use of a background image",
           "MANUAL_CHECK_P": "%N_MC elements require manual checking for CCR > 4.5 due to the use of background images",
           "HIDDEN_S": "The element with text content that is hidden was not analyzed for color contrast accessibility",
           "HIDDEN_P": "The %N_H elements with text content that are hidden were not analyzed for color contrast accessibility",
           "NOT_APPLICABLE": "No visible text content on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "CCR of %1 exceeds 4.5",
           "ELEMENT_FAIL_1": "CCR of %1, adjust foreground and background colors to exceed 4.5",
           "ELEMENT_MC_1": "CCR of %1 is greater than 4.5, but background image may reduce color contrast",
           "ELEMENT_MC_2": "CCR of %1 is less than or equal to 4.5, but background image may improve color contrast",
           "ELEMENT_HIDDEN_1": "CCR of 4.5 not tested since the text is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "FOCUS_1",
        "scope" : 2,
        "wcag_primary" : "2.4.3",
        "wcag_related" : ["2.1.1","2.1.2","2.4.7","3.2.1"],
        "last_updated" : "2013-07-03",
        "target_resources" : ["Page","a","applet","area","button","input","object","select","area","widgets"],
        "rule_category" : 16,
        "language_dependency" : "",
        "cache_dependency" : "keyboard_focus_cache",
        "resource_properties" : [],
        "validate" : "function (dom_cache, rule_result) {\n  \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var page_element = dom_cache.keyboard_focus_cache.page_element;  \n\n//     OpenAjax.a11y.logger.debug(' Page Element: ' + page_element + '  ' + page_element.dom_element);\n\n     var interactive_elements     = dom_cache.keyboard_focus_cache.interactive_elements;\n     var interactive_elements_len = interactive_elements.length;\n\n     var tab_count = 0;\n     var visible_count = 0;\n\n     for (var i = 0; i < interactive_elements_len; i++) {\n     \n       var ie = interactive_elements[i];\n       \n       var de = ie.dom_element;\n       if (!de) de =ie;\n       \n       var cs = de.computed_style;\n       \n       if ((cs.is_visible_to_at    === VISIBILITY.VISIBLE) ||\n           (cs.is_visible_onscreen === VISIBILITY.VISIBLE)) {\n           \n         visible_count++;\n         \n         if (de.tab_index >= 0) { \n           if (de.is_widget) {\n             // only include widgets that can be part of the tab order\n             if (de.is_tab_stoppable) {\n                tab_count++;\n               rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_1', [de.tag_name, de.role]);\n             }\n           }\n           else {\n             tab_count++;\n             rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_2', [de.tag_name]);\n           }\n         }\n         else {\n           if (de.is_widget) {\n             // only include widgets that can be part of the tab order\n             if (de.is_tab_stoppable) {\n               rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_3', [de.tag_name, de.role, de.tab_index]);\n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_4', [de.tag_name, de.tab_index]);\n           }         \n         }\n         \n       }     \n       else {\n       \n         if (de.is_widget) {\n           // only include widgets that can be part of the tab order\n           if (de.is_tab_stoppable) {\n             rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', [de.tag_name, de.role]);      \n           }\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_2', [de.tag_name]);                \n         }\n       }  \n     }  // endfor\n \n //    OpenAjax.a11y.logger.debug(' Visible count: ' + visible_count + '  Tab count: ' + tab_count);\n\n     if (visible_count > 1) { \n \n       if (tab_count === visible_count) {\n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_1', [tab_count]);\n       }\n       else {\n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_2', [tab_count, (visible_count-tab_count)]);             \n       }\n     \n     }\n\n\n   }",
        "nls_rule_id" : "Focus Rule 1",
        "definition" : "The sequential focus order of links, form controls, embedded apps and widgets %s be meaningful",
        "summary" : "Focus order %s be meaningful",
        "target_resource_desc" : "@a@, @area@, @input@, @textarea@ and @select@ elements and elements with widget roles with @tabindex@ values",
        "purpose" : [
           "The 'tab' key is the primary key many browsers use to navigate the interactive elements on a web page",
           "The sequential order of the elements receiving focus can help a user understand the features on a web page",
          "The usability of frequently used or important interactive features of a web page can be improved by moving them to the beginning of the focus sequence"
        ],
        "techniques" : [
           "Use document order to place related interactive items seuq",
           "The @tabindex@ atttribute value (i.e. values greater than 0) can be used to change the sequence of focusable elements in a web page or make non-interactive elements part of the 'tab' order of the page",
          "A @tabindex@ values of less than 0 remove redundent interactive elements from the sequential focus order"
        ],
        "manual_checks" : [
           "Use the 'tab' key to move focus through the links, form controls, embedded applications and widgets on the page",
          "Does the sequence of elements receiving focus make sense (i.e. related items on the page are navigated sequentially as a group)"
        ],
        "informational_links" : [
          { "type"  : 11,
            "title" : "G59: Placing the interactive elements in an order that follows sequences and relationships within the content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G59"
          },
          { "type"  : 11,
            "title" : "H4: Creating a logical tab order through links, form controls, and objects",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H4"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Check the 'tab' focus order of the page to make sure the sequence of focusable elements is meaningful",
           "MANUAL_CHECK_P": "Check the 'tab' focus order of the page to make sure the sequence of focusable elements is meaningful",
           "HIDDEN_S": "The link, form control, embedded app or widget element that is hidden does not need to be tested for focus order.",
           "HIDDEN_P": "The %N_H links, form controls, embedded apps and/or widgets that are hidden do not need to be tested for focus order.",
           "NOT_APPLICABLE": "No or only one focusable element on the page"    
        },
        "node_result_messages" : {
           "PAGE_MC_1": "Use the 'tab' key to check the focus order of the %1 interactive elements on the page (i.e. links, form controls, ...)",
           "PAGE_MC_2": "Use the 'tab' key to check the focus order of the %1 interactive elements on the page (i.e. links, form controls, ...); NOTE: %2 other interactive elements on the page have been removed from the tab order by setting the @tabindex@ value to less than 0",
           "ELEMENT_MC_1": "%1 element with @role@='%2' is part of the sequential focus order manual check",
           "ELEMENT_MC_2": "%1 element is part of the sequential focus order manual check",
           "ELEMENT_MC_3": "%1 element with @role@='%2' has a @tabindex@='%2', so it is NOT part of the sequential focus oarder of the page",
           "ELEMENT_MC_4": "%1 element has a @tabindex@='%2', so it is NOT part of the sequential focus order of the page",
           "ELEMENT_HIDDEN_1": "%1 element with @role@='%2' is hidden, so NOT a part of the sequential focus order of the page",
           "ELEMENT_HIDDEN_2": "%1 element is hidden, so NOT a part of the sequential focus order of the page"    
        }
      },
      {
        "rule_id" : "FOCUS_2",
        "scope" : 2,
        "wcag_primary" : "2.4.7",
        "wcag_related" : ["2.1.1","2.1.2","2.4.3","3.2.1"],
        "last_updated" : "2013-07-03",
        "target_resources" : ["Page","a","applet","area","button","input","object","select","area","widgets"],
        "rule_category" : 256,
        "language_dependency" : "",
        "cache_dependency" : "keyboard_focus_cache",
        "resource_properties" : ["tabindex"],
        "validate" : "function (dom_cache, rule_result) {\n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var page_element = dom_cache.keyboard_focus_cache.page_element;  \n\n//     OpenAjax.a11y.logger.debug(' Page Element: ' + page_element + '  ' + page_element.dom_element);\n\n     var interactive_elements     = dom_cache.keyboard_focus_cache.interactive_elements;\n     var interactive_elements_len = interactive_elements.length;\n\n     var visible_interactive_count = 0;\n\n     for (var i = 0; i < interactive_elements_len; i++) {\n     \n       var ie = interactive_elements[i];\n       \n       var de = ie.dom_element;\n       if (!de) de =ie;\n       \n       var cs = de.computed_style;\n       \n       if (cs.is_visible_onscreen === VISIBILITY.VISIBLE) {\n       \n         visible_interactive_count++;\n           \n         if (de.is_widget) {             \n           rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_1', [de.tag_name, de.role]);\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_2', [de.tag_name]);\n         }\n         \n       }\n       else {\n\n         if (de.is_widget) {             \n           rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', [de.tag_name, de.role]);\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_2', [de.tag_name]);\n         }\n\n       }  \n     }  // endfor\n \n//     OpenAjax.a11y.logger.debug(' Visible Interactive Count: ' + visible_interactive_count);\n\n     if (visible_interactive_count > 1) { \n \n       if (visible_interactive_count === interactive_elements_len) {\n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_1', [interactive_elements_len]);\n       }\n       else {\n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_2', [visible_interactive_count, (interactive_elements_len - visible_interactive_count)]);             \n       }\n     \n     }\n\n\n   }",
        "nls_rule_id" : "Focus Rule 2",
        "definition" : "The element with keyboard focus %s have a visible focus style that is different from the non-focus state",
        "summary" : "Focus %s be visible",
        "target_resource_desc" : "@a@, @area@, @input@, @textarea@ and @select@ elements and elements with widget roles with @tabindex@ values",
        "purpose" : [
           "Many browsers don't provide a prominent or consistent visible keyboard focus styling for interactive elements, making it difficult for users to identify and track the element with keyboard focus",
          "Author defined visible keyboard focus style makes it easier for users to know which interactive element has keyboard focus and provides more consistent user experience between browsers and operating systems."
        ],
        "techniques" : [
           "Use CSS psuedo element selector @:focus@ to change the styling of elements with keyboard focus",
           "Use @focus@ and @blur@ events on checkboxes and radio buttons to change the styling of not only the form control, but also its label text to make it easier to see",
           "Styling changes should include creating a border around the interactive element and its label, typically using the CSS @border@ or @outline@ properties",
          "For consistent look and feel to the website it is often useful for the focus and hover styles to be the same or similar"
        ],
        "manual_checks" : [
           "Use the the keyboard (i.e. typically he 'tab' key, but in the case of widgets other keys) to move focus through the links, form controls, embedded applications and widgets on the page",
           "Check if the element with keyboard focus is clearly visible for all focusable elements on the page as you move focus between elements, and that it changes more than just color (i.e. border/outline around element with focus)",
          "Test keyboard focus styling using more than one browser and operating system, since there is a wide varability of between operating systems and browsers for styling keyboard focus"
        ],
        "informational_links" : [
          { "type"  : 11,
            "title" : "C15: Using CSS to change the presentation of a user interface component when it receives focus ",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/C15"
          },
          { "type"  : 11,
            "title" : "G195: Using an author-supplied, highly visible focus indicator",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G195"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Use the 'tab' key to move focus between links, form controls, embedded apps and widgets and check the visibility of focus styling for each element as it receives focus",
           "MANUAL_CHECK_P": "Use the 'tab' key to move focus between links, form controls, embedded apps and widgets and check the visibility of focus styling for each element as it receives focus",
           "HIDDEN_S": "The link, form control, embedded app or widget element that is hidden does not need to be tested for focus order.",
           "HIDDEN_P": "The %N_H links, form controls, embedded apps and/or widgets that are hidden do not need to be tested for focus order.",
           "NOT_APPLICABLE": "No focusable elements on the page"    
        },
        "node_result_messages" : {
           "PAGE_MC_1": "Use keyboard commands to check the keyboard focus styling of the %1 interactive elements on the page (i.e. links, form controls, ...)",
           "PAGE_MC_2": "Use keyboard commands to check the keyboard focus styling of the %1 interactive elements on the page (i.e. links, form controls, ...); NOTE: %2 interactive elements are hidden",
           "ELEMENT_MC_1": "%1 element with @role@='%2' is part of the keyboard focus styling manual check",
           "ELEMENT_MC_2": "%1 element is part of the keyboard focus styling manual check",
           "ELEMENT_HIDDEN_1": "%1 element with @role@='%2' is hidden, so is not visible for changing the focus styling",
           "ELEMENT_HIDDEN_2": "%1 element is hidden, so is not visible for changing the focus styling"    
        }
      },
      {
        "rule_id" : "FOCUS_3",
        "scope" : 1,
        "wcag_primary" : "3.2.1",
        "wcag_related" : ["2.1.1","2.1.2","2.4.3","2.4.7"],
        "last_updated" : "2013-07-03",
        "target_resources" : ["a","area","select"],
        "rule_category" : 32,
        "language_dependency" : "",
        "cache_dependency" : "keyboard_focus_cache",
        "resource_properties" : ["tabindex"],
        "validate" : "function (dom_cache, rule_result) {\n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n//     OpenAjax.a11y.logger.debug(' Page Element: ' + page_element + '  ' + page_element.dom_element);\n\n     var link_elements     = dom_cache.links_cache.link_elements;\n     var link_elements_len = link_elements.length;\n\n     var visible_interactive_count = 0;\n\n     for (var i = 0; i < link_elements_len; i++) {\n     \n       var le = link_elements[i];\n       \n       var de = le.dom_element;\n       if (!de) de =le;\n       \n       var cs = de.computed_style;\n       \n       if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n       \n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_1', [de.tag_name]);\n         \n       }\n       else {\n         rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [de.tag_name, de.role]);\n       }  \n     }  // endfor\n \n   }",
        "nls_rule_id" : "Focus Rule 3",
        "definition" : "The target of a link %s result in focus the content the window if the target results in more than one window opening",
        "summary" : "Target focus %s be in content window",
        "target_resource_desc" : "@a@, @area@ and @role='link'@ elements",
        "purpose" : [
          "User's can become disoriented if the focus causes unpredicatable actions, including new URLs and popup windows for advertisements or promotions."
        ],
        "techniques" : [
          "Do not link to URLs that open multiple windows and do not manage the focus to be in the content windoow the user was expecting by following the link"
        ],
        "manual_checks" : [
          "After selecting a link and if it opens multiple windows, make sure the keyboard focus is in the content window"
        ],
        "informational_links" : [
          { "type"  : 11,
            "title" : "G200: Opening new windows and tabs from a link only when necessary",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G200"
          },
          { "type"  : 11,
            "title" : "G201: Giving users advanced warning when opening a new window",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G201"
          },
          { "type"  : 11,
            "title" : "F52: Failure of Success Criterion 3.2.1 and 3.2.5 due to opening a new window as soon as a new page is loaded",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F52"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Check the link to make sure that if the link opens more than one window that the focus is in the content window",
           "MANUAL_CHECK_P": "Check the %N_MC links to make sure that if any of the links opens more than one window that the focus is in the content window",
           "HIDDEN_S": "The link element that is hidden does not need to be tested for content focus.",
           "HIDDEN_P": "The %N_H link elements that are hidden do not need to be tested for content focus.",
           "NOT_APPLICABLE": "No link elements on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "If the target of the link opens multiple windows (i.e. typically advertisements or other promotional information) make sure keyboard focus is on the content window",
           "ELEMENT_HIDDEN_1": "%1 element is hidden, so cannot open any new windows"    
        }
      },
      {
        "rule_id" : "FOCUS_4",
        "scope" : 1,
        "wcag_primary" : "3.2.1",
        "wcag_related" : ["2.1.1","2.1.2","2.4.3","2.4.7"],
        "last_updated" : "2013-07-03",
        "target_resources" : ["a","area","select"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "keyboard_focus_cache",
        "resource_properties" : ["tabindex"],
        "validate" : "function (dom_cache, rule_result) {\n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n//     OpenAjax.a11y.logger.debug(' Page Element: ' + page_element + '  ' + page_element.dom_element);\n\n     var control_elements     = dom_cache.controls_cache.control_elements;\n     var control_elements_len = control_elements.length;\n\n     for (var i = 0; i < control_elements_len; i++) {\n     \n       var ce = control_elements[i];\n       \n       var de = ce.dom_element;\n       if (!de) de =ce;\n       \n       var cs = de.computed_style;\n       \n       if ((de.tag_name === 'select') &&\n            de.events.has_change) {\n       \n         if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {   \n           rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_1', [de.tag_name]);\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', [de.tag_name, de.role]);\n         }  \n       }  \n     }  // endfor\n \n   }",
        "nls_rule_id" : "Focus Rule 4",
        "definition" : "@select@ elements with @onchange@ event %s not automatically change the user's context when keyboard focus moves between options",
        "summary" : "@select@ %s not change context",
        "target_resource_desc" : "@a@, @area@ and @role='link'@ elements",
        "purpose" : [
           "User's can become disoriented if the focus changes cause unpredicatable actions.",
          "When the user is using the kyboard to explore @select@ box options, the focus must stay on the options, until the user selects one of the options"
        ],
        "techniques" : [
           "Do not use @onchange@ event handlers on @select@ elements",
          "Use selections should be made using the enter key"
        ],
        "manual_checks" : [
          "Move focus to the @selection@ box and use the keyboard to move the focus between options, check to make sure the focus changes are not causing the context to change (i.e. focus movig to a new window or focus moving from the current option in the select box)"
        ],
        "informational_links" : [
          { "type"  : 11,
            "title" : "G200: Opening new windows and tabs from a link only when necessary",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G200"
          },
          { "type"  : 11,
            "title" : "G201: Giving users advanced warning when opening a new window",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G201"
          },
          { "type"  : 11,
            "title" : "F52: Failure of Success Criterion 3.2.1 and 3.2.5 due to opening a new window as soon as a new page is loaded",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F52"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Check the @select@ element to make sure that when keyboard focus moves between options does not cause a change in context (e.g. moving to a new URL or focus being moved from the @select@ element)",
           "MANUAL_CHECK_P": "Check the %N_MC @select@ elements to make sure that when keyboard focus moves between options in each control does not cause a change in context (e.g. moving to a new URL or focus being moved from the @select@ element)",
           "HIDDEN_S": "The @select@ element that is hidden does not need to be tested for automatically changing user context.",
           "HIDDEN_P": "The %N_H @select@ elements that are hidden do not need to be tested for automatically changing user context.",
           "NOT_APPLICABLE": "No @select@ elements on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Check to make sure moving keyboard focus between options in the @select@ box does not move focus from the list of options",
           "ELEMENT_HIDDEN_1": "@select@ element is hidden"    
        }
      },
      {
        "rule_id" : "CONTROL_1",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input[type='checkbox']","input[type='date']","input[type='file']","input[type='radio']","input[type='number']","input[type='password']","input[type='tel']","input[type='text']","input[type='url']","select","textarea","meter","progress"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["computed_label","fieldset_element","computed_label_source","name_attribute"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n   \n     var tag_name;\n     var type;\n   \n     var control_elements   = dom_cache.controls_cache.control_elements;\n     var control_elements_len = control_elements.length;\n       \n     // Check to see if valid cache reference\n     if (control_elements && control_elements_len) {\n     \n       for (var i = 0; i < control_elements_len; i++) {\n         var ce = control_elements[i];\n  \n         var control_type = ce.control_type;\n\n         if (ce.needs_label) {\n             \n           if (ce.dom_element.computed_style.is_visible_to_at == OpenAjax.a11y.VISIBILITY.VISIBLE) {\n     \n             if (ce.computed_label && ce.computed_label.length) {\n               rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', [ce.toString()]);     \n             }\n             else {\n               rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', [ce.toString()]);     \n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', [ce.toString()]);     \n           }\n         }  \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Form Control 1",
        "definition" : "@textarea@, @select@, @progress@, @meter@, @output@ and @input@ elements %s have an accessible label",
        "summary" : "Controls %s have labels",
        "target_resource_desc" : "User interface form controls",
        "purpose" : [
          "A label associated with a form control insures that information about the form control is spoken by screen readers when it receives focus"
        ],
        "techniques" : [
           "The preferred technique for labeling for controls is using the @label@ element and referencing the @id@ attribute value of the form control element",
           "Use the @label@ element to encapsulate the form control element",
           "In special cases, use @aria-labelledby@ attribute to reference the id(s) of the elements on the page that describe the purpose of the form control element",
           "In special cases, use @aria-label@ attribute to provide a explicit text description of the purpose of the form control element",
          "In special cases, use @title@ attribute can be used to provide a explicit text description of the purpose of the form control element"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-LABEL"
          },
          { "type"  : 11,
            "title" : "H44: Using label elements to associate text labels with form controls",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H44"
          },
          { "type"  : 11,
            "title" : "H65: Using the title attribute to identify form controls when the label element cannot be used",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H65"
          },
          { "type"  : 11,
            "title" : "H71: Providing a description for groups of form controls using fieldset and legend elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H71"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Labels for Form Controls Overview",
            "url"   : "http://html.cita.illinois.edu/nav/form/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add label to form control missing a label.",
           "FAIL_P": "Add labels to %N_F form controls missing a label.",
           "NOT_APPLICABLE": "No @textarea@, @select@, @progress@, @meter@, @output@ and @input@ elements on this page.",
           "HIDDEN_S": "The input element that is hidden was not analyzed for an accessible label.",
           "HIDDEN_P": "The %N_H input elements that are hidden were not analyzed for an accessible labels."    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "%1 control has label",
           "ELEMENT_FAIL_1": "Add label to %1 control",
           "ELEMENT_HIDDEN_1": "%1 control was not tested since it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "CONTROL_2",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input[type='image']"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["alt","aria_label","aria_labelledby","title"],
        "validate" : "function (dom_cache, rule_result) {\n  \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n   \n     var tag_name;\n   \n     var control_elements   = dom_cache.controls_cache.control_elements;\n     var control_elements_len = control_elements.length;\n       \n     // Check to see if valid cache reference\n     if (control_elements && control_elements_len) {\n     \n       for (var i = 0; i < control_elements_len; i++) {\n         var ce = control_elements[i];\n         var de = ce.dom_element;\n  \n         var type = control_elements[i].type;\n     \n         if (type === 'image') {\n      \n           if (de.computed_style.is_visible_to_at == OpenAjax.a11y.VISIBILITY.VISIBLE) {\n     \n             if (ce.computed_label) {\n               if (ce.computed_label.length) {\n                 rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', []);\n               }\n               else {\n                 rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_2', []);                    \n               }\n             }\n             else {\n               rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', []);     \n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', []);     \n           }\n         }\n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Form Control 2",
        "definition" : "Every @input@ type @image@ %s have an @alt@ or @title@ attribute with content",
        "summary" : "Image button %s have alt content",
        "target_resource_desc" : "input elements of type image",
        "purpose" : [
          "A label associated with a form control insures that information about the form control is spoken by screen readers when it receives focus"
        ],
        "techniques" : [
           "The preferred technique for labeling for controls is using the @label@ element and referencing the @id@ attribute value of the form control element",
           "Use the @label@ element to encapsulate the form control element",
           "In special cases, use @aria-labelledby@ attributes to reference the id(s) of the elements on the page that describe the purpose of the form control element",
          "In special cases, use @aria-label@ attributes to provide a explicit text description of the purpose of the form control element"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-LABEL"
          },
          { "type"  : 11,
            "title" : "H36: Using alt attributes on images used as submit buttons",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H36"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Labels for Form Controls Overview",
            "url"   : "http://html.cita.illinois.edu/nav/form/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add @alt@ attribute to label the @input[type='image']@ element missing a missing a label",
           "FAIL_P": "Add @alt@ attribute to label the %N_F @input[type='image']@ elements missing labels",
           "HIDDEN_S": "The @input@ type @image@ that is hidden was not analyzed for an accessible label.",
           "HIDDEN_P": "The %N_H @input@ type @image@ elements that are hidden were not analyzed for an accessible labels.",
           "NOT_APPLICABLE": "No @input[type='image']@ elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Image button has label",
           "ELEMENT_FAIL_1": "Add @alt@ attribute with text content",
           "ELEMENT_FAIL_2": "Add text content to the @alt@ attribute",
           "ELEMENT_HIDDEN_1": "Image button was not tested for @alt@ attribute because button is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "CONTROL_3",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input[type='radio']"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["fieldset_element","aria_label","aria_labelledby"],
        "validate" : "function (dom_cache, rule_result) {\n  \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n   \n     var control_elements   = dom_cache.controls_cache.control_elements;\n     var control_elements_len = control_elements.length;\n       \n     // Check to see if valid cache reference\n     if (control_elements && control_elements_len) {\n     \n       for (var i = 0; i < control_elements_len; i++) {\n         var ce = control_elements[i];\n         var de = ce.dom_element;\n  \n         var type = control_elements[i].control_type;\n     \n         if (type == OpenAjax.a11y.CONTROL_TYPE.RADIO) {\n      \n           if (de.computed_style.is_visible_to_at == VISIBILITY.VISIBLE) {\n     \n             if (ce.fieldset_element) {\n               if (ce.fieldset_element.legend_element && \n                   ce.fieldset_element.legend_element.computed_label &&\n                   ce.fieldset_element.legend_element.computed_label.length) {\n                 rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', []);\n               }\n               else {\n                 rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', []);               \n               }\n             }\n             else {  \n               if (de.aria_labelledby && de.aria_labelledby.length) {\n                   rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_1', []);     \n               }\n               else {\n                 if (de.aria_label && de.aria_label.length) {\n                   rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_2', []);     \n                 }\n                 else {\n                   rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_2', []);\n                 }    \n               }\n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', []);     \n           }\n         }\n       } // end loop\n     }   \n  }",
        "nls_rule_id" : "Form Control 3",
        "definition" : "Every input type radio %s be contained in a @fieldset@ and @legend@ elements to provide grouping information for radio button groups",
        "summary" : "Radio button %s use @fieldset/legend@",
        "target_resource_desc" : "input elements of type radio",
        "purpose" : [
          "Radio buttons need a common grouping label to provide a context for each radio button option"
        ],
        "techniques" : [
           "@fieldset@/@legend@ element combination is the preferred technique to provide a grouping label for each group of radio buttons",
           "@aria-labelledby@ attribute can provide a grouping label for radio buttons",
          "@aria-label@ attributes can provide a grouping label for radio buttons"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @fieldset@ and @legend@ elements",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-FIELDSET"
          },
          { "type"  : 11,
            "title" : "H71: Providing a description for groups of form controls using fieldset and legend elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H71"
          },
          { "type"  : 11,
            "title" : "H90: Indicating required form controls using label or legend",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H90"
          },
          { "type"  : 2,
            "title" : "iCITA: Example 7: Fieldset/Legend for grouping radio buttons",
            "url"   : "http://html.cita.illinois.edu/nav/form/radio/index.php?example=6"
          },
          { "type"  : 2,
            "title" : "IBM Web checklist: HTML example 6",
            "url"   : "http://www-03.ibm.com/able/guidelines/web/webstructure.html"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add @filedset/legend@ labeling container for the @input[type='radio']@ element NOT in a grouping container",
           "FAIL_P": "Add @filedset/legend@ labeling container for each group of the %N_F @input[type='radio']@ elements NOT in a grouping container",
           "HIDDEN_S": "The @input[type='radio']@ that is hidden was not analyzed for grouping container.",
           "HIDDEN_P": "The %N_H @input[type='radio']@ elements that are hidden were not analyzed for grouping container.",
           "NOT_APPLICABLE": "No @input[type='radio']@ elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Radio button uses @fieldset@ and @legend@ elements, and the @legend@ element has text content",
           "ELEMENT_MC_1": "Radio button uses aria-labelledby, verify the label text content includes group information",
           "ELEMENT_MC_2": "Radio button uses aria-label, verify the label text content includes group information",
           "ELEMENT_FAIL_1": "Add a @legend@ element to with text content to the @fieldset@ element to provide grouping label information for the radio buttons",
           "ELEMENT_FAIL_2": "Add a @fieldset@ and @legend@ elements to provide grouping label information for the radio buttons",
           "ELEMENT_HIDDEN_1": "@fieldset/legend@ for radio button was not tested because radio button is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "CONTROL_4",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["button"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["computed_label"],
        "validate" : "function (dom_cache, rule_result) {\n\n     var TEST_RESULT  = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY   = OpenAjax.a11y.VISIBILITY;\n     var CONTROL_TYPE = OpenAjax.a11y.CONTROL_TYPE;\n      \n     var control_elements     = dom_cache.controls_cache.control_elements;\n     var control_elements_len = control_elements.length;\n       \n     // Check to see if valid cache reference\n     if (control_elements && control_elements_len) {\n     \n       for (var i = 0; i < control_elements_len; i++) {\n         var ce = control_elements[i];\n         var de = ce.dom_element;\n         var cs = de.computed_style;\n         \n         \n         if (ce.control_type === CONTROL_TYPE.BUTTON_ELEMENT) {\n      \n           if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n     \n             if (ce.computed_label_for_comparison.length > 0) {\n               rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', []);     \n             }\n             else {\n               rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', []);     \n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', []);     \n           }\n           \n         }\n         else {\n         \n           if (ce.control_type === CONTROL_TYPE.BUTTON_INPUT) {\n      \n             if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n     \n               if (ce.value && (ce.value.length > 0)) {\n                 rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', []);     \n               }\n               else {\n                 rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', []);     \n               }\n             }\n             else {\n               rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', []);     \n             }\n           }\n         }\n         \n       } // end loop\n     }   \n\n  }",
        "nls_rule_id" : "Form Control 4",
        "definition" : "@button@ elements %s have text content",
        "summary" : "@button@s %s have content",
        "target_resource_desc" : "@button@ elements",
        "purpose" : [
          "The text content of a @button@ element is used as a label to insure that the purpose of the button is spoken by screen readers when the button receives focus"
        ],
        "techniques" : [
          "The text content of the @button@ element and the @alt@ attribute content of images inside the button is used as the text content"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @button@ elements",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-BUTTON"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add text content to @button@ element that describe the purpose of the button",
           "FAIL_P": "Add text content to %N_F @button@ elements that describe the purpose of each button",
           "HIDDEN_S": "The @button@ that is hidden was not analyzed for an accessible label.",
           "HIDDEN_P": "The %N_H @button@ elements that are hidden were not analyzed for an accessible labels.",
           "NOT_APPLICABLE": "No @button@ elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@button@ element has text content",
           "ELEMENT_FAIL_1": "Add text content to @button@ element",
           "ELEMENT_HIDDEN_1": "Content for  @button@ element was not tested because @button@ element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "CONTROL_5",
        "scope" : 1,
        "wcag_primary" : "4.1.1",
        "wcag_related" : ["3.3.2","1.3.1","2.4.6"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input[type='checkbox']","input[type='radio']","input[type='text']","input[type='password']","input[type='file']","select","textarea"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["id"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var ID          = OpenAjax.a11y.ID;\n   \n    var control_elements      = dom_cache.controls_cache.control_elements;\n    var control_elements_len  = control_elements.length;\n       \n    // Check to see if valid cache reference\n    if (control_elements && control_elements_len) {\n     \n      for (var i = 0; i < control_elements_len; i++) {\n        var ce = control_elements[i];\n        var de = ce.dom_element;\n        \n        \n        if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n        \n          switch (de.id_unique) { \n        \n          case ID.NOT_UNIQUE:\n            rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', [de.id]);\n            break;          \n          \n          case ID.UNIQUE:\n            rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', [de.id]);               \n            break;\n          \n          default:\n            break;       \n            \n          } // end switch\n          \n        }\n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', [de.tag_name]);             \n        }\n      } // end loop\n    }     \n  }",
        "nls_rule_id" : "Form Control 5",
        "definition" : "@id@ attributes %s have unique values on the web page",
        "summary" : "@id@ %s be unique",
        "target_resource_desc" : "Form control elements with @id@ attributes",
        "purpose" : [
           "@id@ attribute values can be used as references by @label@ elements, if @id@ attribute values are not unique it can result incorrect labeling of form controls",
          "@aria-labelledby@ and @aria-describedby@ atributes also depend on unique @id@ values for labeling and adding descriptions to form controls."
        ],
        "techniques" : [
          "If a form control defines an @id@ attribute, make sure the value is unique on the page"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: @id@ attribute",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#adef-id"
          },
          { "type"  : 11,
            "title" : "F77: Failure of Success Criterion 4.1.1 due to duplicate values of type ID",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F77"
          },
          { "type"  : 11,
            "title" : "H88: Using HTML according to spec",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H88"
          }
        ],
        "rule_result_messages" : {
           "FAIL_P": "Update elements with @id@ attributes so the id values are all unique",
           "HIDDEN_S": "The element with an @id@ attribute that is hidden was not analyzed for being unique.",
           "HIDDEN_P": "The %N_H elements with @id@ attributes that are hidden were not analyzed for being unique.",
           "NOT_APPLICABLE": "No elements or only one element with an @id@ attribute on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "'%1' @id@ attribute value is unique",
           "ELEMENT_FAIL_1": "Update elements that share the '%1' @id@ value to have unique @id@ values",
           "ELEMENT_HIDDEN_1": "@id@ was not tested for uniquness because %1 control element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "CONTROL_6",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["label"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["for"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY = OpenAjax.a11y.VISIBILITY;\n   \n    var label_elements      = dom_cache.controls_cache.label_elements;\n    var label_elements_len  = label_elements.length;\n       \n    // Check to see if valid cache reference\n    if (label_elements && label_elements_len) {\n     \n      for (var i = 0; i < label_elements_len; i++) {\n        var le = label_elements[i];\n        var de = le.dom_element;\n        var cs = de.computed_style;\n\n        if (le.for_id && le.for_id.length) {\n\n          if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n            if (le.unused_label) rule_result.addResult(TEST_RESULT.FAIL, le, 'ELEMENT_FAIL_1', [le.for_id]);\n            else rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_1', [le.for_id]);\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', []);        \n          }\n       }   \n      } // end loop\n    }     \n  }",
        "nls_rule_id" : "Form Control 6",
        "definition" : "@label@ element using the @for@ attribute %s reference a form control on the page",
        "summary" : "@label@ %s reference control",
        "target_resource_desc" : "@label@ elements",
        "purpose" : [
          "@label@ elements only are useful for accessibility when they reference or encapsulate form controls"
        ],
        "techniques" : [
          "@label@ elements using the FOR attribute need to reference a form control with the corresponding @id@ attribute value"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element FOR attribute",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#adef-for"
          },
          { "type"  : 11,
            "title" : "H44: Using label elements to associate text labels with form controls",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H44"
          },
          { "type"  : 10,
            "title" : "iCITA: Using @label@ Element for Labeling Form Controls",
            "url"   : "http://html.cita.illinois.edu/nav/form/form-label-markup.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the @label@ element to use the @for@ attribute to label its form control",
           "FAIL_P": "Change the %N_F @label@ elements to use the @for@ attribute to label their form control",
           "HIDDEN_S": "The @label@ element that is hidden was not analyzed for an referencing a form control.",
           "HIDDEN_P": "The %N_H @label@ elementsthat are hidden were not analyzed for referencing a form control.",
           "NOT_APPLICABLE": "No visible @label@ elements with invalid @for@ references on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@label@ element with @for@ attribute '%1' references a form control",
           "ELEMENT_FAIL_1": "Change the @label@ element @for@ attribute '%1' to reference a form control",
           "ELEMENT_HIDDEN_1": "The @label@ element is hidden"    
        }
      },
      {
        "rule_id" : "CONTROL_7",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["label","legend"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["computed_label"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY = OpenAjax.a11y.VISIBILITY;\n   \n    var label_elements      = dom_cache.controls_cache.label_elements;\n    var label_elements_len  = label_elements.length;\n    \n    // Check to see if valid cache reference\n    if (label_elements && label_elements_len) {\n     \n      for (var i = 0; i < label_elements_len; i++) {\n        var le = label_elements[i];\n        var de = le.dom_element;\n        var cs = de.computed_style;\n        \n        if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        \n          if (le.computed_label_for_comparison.length === 0) {\n            rule_result.addResult(TEST_RESULT.FAIL, le, 'ELEMENT_FAIL_1', [le.tag_name]);\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_1', [le.tag_name]);        \n          }\n        }\n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [le.tag_name]);                \n        }\n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Form Control 7",
        "definition" : "@label@ element or @legend@ element %s contain text content",
        "summary" : "@label@ %s have content",
        "target_resource_desc" : "@label@ and @legend@ elements",
        "purpose" : [
          "For @label@ and @legend@ elements are only useful for accessibility when they contain content to label associated form controls and widgets"
        ],
        "techniques" : [
          "Add text content to @label@ and @legend@ elements that help describe the purpose of the form control"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element @for@ attribute",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#adef-for"
          },
          { "type"  : 11,
            "title" : "H44: Using @label@ elements to associate text labels with form controls",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H44"
          },
          { "type"  : 11,
            "title" : "H88: Using HTML according to spec",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H88"
          },
          { "type"  : 10,
            "title" : "iCITA: Using @label@ element for Labeling Form Controls",
            "url"   : "http://html.cita.illinois.edu/nav/form/form-label-markup.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add text content to the @label@ or @legend@ element that describes the purpose of a form control or groupings of form controls, or remove the element if it is not needed for labeling",
           "FAIL_P": "Add text content to the %N_F @label@ or @legend@ elements to describes the purpose of each form control or groupings of form controls, or remove element(s) if they are not needed for labeling",
           "HIDDEN_S": "The @label@ element that is hidden was not analyzed for text content.",
           "HIDDEN_P": "The %N_H @label@ elementsthat are hidden were not analyzed for text content.",
           "NOT_APPLICABLE": "No @label@ or @legend@ elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ has text content",
           "ELEMENT_FAIL_1": "Add text content to the @%1@ element or if not needed remove from page",
           "ELEMENT_HIDDEN_1": "Content in labels is not tested because @%1@ element is hidden from assistive technologies"    
        }
      },
      {
        "rule_id" : "CONTROL_8",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["1.3.1","2.4.6","4.1.1"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["fieldset"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["legend_count"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY = OpenAjax.a11y.VISIBILITY;\n   \n    var fieldset_elements      = dom_cache.controls_cache.fieldset_elements;\n    var fieldset_elements_len  = fieldset_elements.length;\n       \n    // Check to see if valid cache reference\n    if (fieldset_elements && fieldset_elements_len) {\n     \n      for (var i = 0; i < fieldset_elements_len; i++) {\n        var fe = fieldset_elements[i];\n        var de = fe.dom_element;\n\n        if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n\n          if (fe.legend_count === 0 || !fe.legend_element ) {\n            rule_result.addResult(TEST_RESULT.FAIL, fe, 'ELEMENT_FAIL_1', []);        \n          }\n          else {\n            if (fe.legend_count > 1) {\n              rule_result.addResult(TEST_RESULT.FAIL, fe, 'ELEMENT_FAIL_2', [(fe.legend_count-1)]);        \n            }\n            else {\n              de = fe.legend_element.dom_element;\n              \n              if (de.computed_style.is_visible_to_at == VISIBILITY.VISIBLE) {\n                rule_result.addResult(TEST_RESULT.PASS, fe, 'ELEMENT_PASS_1', []);                \n              }\n              else {\n                rule_result.addResult(TEST_RESULT.FAIL, fe, 'ELEMENT_FAIL_3', []);                                  \n              }\n            }\n          }\n        }\n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, fe, 'ELEMENT_HIDDEN_1', []);                          \n        }\n      } // end loop\n    } \n\n  }",
        "nls_rule_id" : "Form Control 8",
        "definition" : "@fieldset@ element %s contain exactly one legend element",
        "summary" : "@fieldset@ %s have one legend",
        "target_resource_desc" : "@fieldset@ and @legend@ elements",
        "purpose" : [
          "Multiple legend elements contained in the same fieldset may result in the improper calculation of labels for assistive technologies."
        ],
        "techniques" : [
          "@fieldset@ element should have one and only one @legend@ elements to help describe the purpose of the form controls contained in the @fieldset@ element"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Adding structure to forms: the @fieldset@ and @legend@ elements",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-FIELDSET"
          },
          { "type"  : 11,
            "title" : "H71: Providing a description for groups of form controls using fieldset and legend elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H71"
          },
          { "type"  : 11,
            "title" : "H88: Using HTML according to spec",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H88"
          },
          { "type"  : 10,
            "title" : "iCITA: Using @label@ element for Labeling Form Controls",
            "url"   : "http://html.cita.illinois.edu/nav/form/form-label-markup.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Update @fieldset@ element to contain only one @legend@ element",
           "FAIL_P": "Update %N_F @fieldset@ elements to contain only one @legend@ element",
           "HIDDEN_S": "The @fieldset@ element that is hidden was not analyzed for having one @legend@ element.",
           "HIDDEN_P": "The %N_H @fieldset@ elementsthat are hidden were not analyzed for having one @legend@ element.",
           "NOT_APPLICABLE": "No @fieldset@ elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@fieldset@ has one @legend@ element",
           "ELEMENT_FAIL_1": "Add @legend@ element",
           "ELEMENT_FAIL_2": "Remove %1 @legend@ elements",
           "ELEMENT_FAIL_3": "@legend@ element is hidden from asssitive technology, use CSS off screen positioning instead of CSS display or visibility properties to remove legend from graphical rendering",
           "ELEMENT_HIDDEN_1": "Only one @legend@ in @fieldset@ element is not tested because the @fieldset@ is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "CONTROL_9",
        "scope" : 1,
        "wcag_primary" : "3.3.2",
        "wcag_related" : ["4.1.1"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input","select","textarea"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["title"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY = OpenAjax.a11y.VISIBILITY;\n\n    var control_elements      = dom_cache.controls_cache.control_elements;\n    var control_elements_len  = control_elements.length;\n       \n    // Check to see if valid cache reference\n    if (control_elements && control_elements_len) {\n     \n      for (var i = 0; i < control_elements_len; i++) {\n        var ce = control_elements[i];\n        var de = ce.dom_element;\n        \n        if (ce.computed_label_source === OpenAjax.a11y.SOURCE.TITLE_ATTRIBUTE) {\n           if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n            rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_1', [de.tag_name]);        \n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', [de.tag_name]);                        \n          }  \n        }\n      } // end loop\n    } \n\n  }",
        "nls_rule_id" : "Form Control 9",
        "definition" : "Verify the @title@ attribute is the label for form control",
        "summary" : "Verify @title@ is label",
        "target_resource_desc" : "@textarea@, @select@ and @input@ elements",
        "purpose" : [
           "When the @title@ attribute is used for tooltips it is often uses more words than needed to label a form control for users of assistive technologies",
          "use @aria-label@ to provide a shorter label to users of assistive technologies if the @title@ attribute content is determined to not be an optimal label"
        ],
        "techniques" : [
           "The preferred technique for labeling for controls is using the @label@ element and referencing the @id@ attribute value of the form control element",
           "Use the @label@ element to encapsulate the form control element",
           "In special cases, use @aria-labelledby@ attributes to reference the id(s) of the elements on the page that describe the purpose of the form control element",
          "In special cases, use @aria-label@ attributes to provide a explicit text description of the purpose of the form control element"
        ],
        "manual_checks" : [
           "If the @title@ attribute is the labeling technique of last resort, use other labeling form labeling techniques",
          "Reserve the @title@ attribute for tooltips if they are needed for your form"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Adding structure to forms: the @fieldset@ and @legend@ elements",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-FIELDSET"
          },
          { "type"  : 11,
            "title" : "H88: Using HTML according to spec",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H88"
          },
          { "type"  : 10,
            "title" : "iCITA: Using @label@ element for Labeling Form Controls",
            "url"   : "http://html.cita.illinois.edu/nav/form/form-label-markup.php"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @title@ attribute is is a good label for the form control, and not as a tooltip",
           "MANUAL_CHECK_P": "Verify the @title@ attribute is is a good label for %N_F form controls, and that they are not being used as a only a tooltip",
           "HIDDEN_S": "The form control element that is hidden was not analyzed for using the @title@ atttribute as a label.",
           "HIDDEN_P": "The %N_H form control elements that are hidden were not analyzed for using the @title@ atttribute as a label.",
           "NOT_APPLICABLE": "No form controls on this page with a @title@ attribute"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@title@ is not used as label",
           "ELEMENT_MC_1": "Use @label@ element or ARIA technique to label %1 form control instrad of the @title@ attribute",
           "ELEMENT_HIDDEN_1": "@title@ not a good label was not tested because %1 control element is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "CONTROL_10",
        "scope" : 1,
        "wcag_primary" : "2.4.6",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input[type='checkbox']","input[type='radio']","input[type='text']","input[type='password']","input[type='file']","select","textarea"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["computed_label","fieldset_element","computed_label_source","name_attribute"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY = OpenAjax.a11y.VISIBILITY;\n   \n    var control_elements   = dom_cache.controls_cache.control_elements;\n    var control_elements_len = control_elements.length;\n    var ces   = [];\n\n    // Check to see if valid cache reference\n    if (control_elements && control_elements_len) {\n     \n      // collect all the visible controls \n      for (var i = 0; i < control_elements_len; i++) {\n        var ce = control_elements[i];\n        var de = ce.dom_element;\n  \n        if (ce.needs_label) {\n\n          var control_type = ce.toString();\n\n          if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {  \n            if (ce.computed_label && ce.computed_label.length) {\n              ces.push(ce);\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', [control_type]);                        \n            }\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', [control_type]);                                    \n          }\n        }\n      } // end loop    \n      \n      // sort labels\n\n      ces = dom_cache.sortArrayOfObjects(ces,'computed_label_for_comparison', true); \n\n      for (i = 0; i < ces.length; i++) {\n        ce = ces[i];\n\n        if (ce.duplicate) {\n          rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_2', []);                \n        }\n        else {\n          rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', []);        \n        }\n      }\n      \n    } \n  }",
        "nls_rule_id" : "Form Control 10",
        "definition" : "Labels %s be unique for every textarea, select and input element of type text, password, radio, and checkbox on a page",
        "summary" : "Labels %s be unique",
        "target_resource_desc" : "@textarea@, @select@ and @input@ elements of type @text@, @password@, @checkbox@, @radio@ and @file@",
        "purpose" : [
          "Labels that are unique make it possible for people to understand the different purposes of form controls on the same page"
        ],
        "techniques" : [
           "The preferred technique for labeling for controls is using the @label@ element and referencing the @id@ attribute value of the form control element",
           "Use the @label@ element to encapsulate the form control element",
           "In special cases, use @aria-labelledby@ attribute to reference the id(s) of the elements on the page that describe the purpose of the form control element",
          "In special cases, use @aria-label@ attribute to provide a explicit text description of the purpose of the form control element"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-LABEL"
          },
          { "type"  : 11,
            "title" : "H44: Using label elements to associate text labels with form controls",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H44"
          },
          { "type"  : 11,
            "title" : "H65: Using the title attribute to identify form controls when the label element cannot be used",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H65"
          },
          { "type"  : 11,
            "title" : "H71: Providing a description for groups of form controls using fieldset and legend elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H71"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Labels for Form Controls Overview",
            "url"   : "http://html.cita.illinois.edu/nav/form/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_P": "Update the labels for the %N_F form controls with duplicate labels to uniquely identify the purpose of each form control on the page",
           "HIDDEN_S": "The form control element that is hidden was not analyzed for having a unique label.",
           "HIDDEN_P": "The %N_H form control elements that are hidden were not analyzed for having a unique label.",
           "NOT_APPLICABLE": "No form controls or only one form control on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Label is unique",
           "ELEMENT_FAIL_1": "Add label to %1 control",
           "ELEMENT_FAIL_2": "Change the @label@ element content, use @fieldset@/@legend@ elements or ARIA technique to make label text content unique on the page",
           "ELEMENT_HIDDEN_1": "Unique form control label was not test because the %1 control element is hidden from assistive technology."    
        }
      },
      {
        "rule_id" : "CONTROL_11",
        "scope" : 1,
        "wcag_primary" : "2.4.6",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input[type='submit']","input[type='reset']"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["computed_label","value"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n   \n    var i;\n    var ce;\n    var tag_name;\n    var type;\n   \n    var control_elements   = dom_cache.controls_cache.control_elements;\n    var control_elements_len = control_elements.length;\n    var current_controls   = [];\n       \n  }",
        "nls_rule_id" : "Form Control 11",
        "definition" : "If there is more than one form on a page, @input@ element of type @submit@ and @reset@ %s have unique labels using the value attribute",
        "summary" : "@submit@ and @reset@ buttons %s be unique",
        "target_resource_desc" : "@submit@ and @reset@ buttons",
        "purpose" : [
           "Labels that are unique make it possible for people to understand the different purposes of form controls on the same page",
          "@submit@ and @reset@ form controls have default labels and if there is more than one form on a page the user may not understand which form they are submitting"
        ],
        "techniques" : [
           "The preferred technique for changing the default label for @submit@ and @reset@ controls is the @value@ attribute",
           "In special cases, use @aria-labelledby@ attribute to reference the id(s) of the elements on the page that describe the purpose of the form control element",
          "In special cases, use @aria-label@ attribute to provide a explicit text description of the purpose of the form control element"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-LABEL"
          },
          { "type"  : 11,
            "title" : "H44: Using label elements to associate text labels with form controls",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H44"
          },
          { "type"  : 11,
            "title" : "H65: Using the title attribute to identify form controls when the label element cannot be used",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H65"
          },
          { "type"  : 11,
            "title" : "H71: Providing a description for groups of form controls using fieldset and legend elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H71"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Labels for Form Controls Overview",
            "url"   : "http://html.cita.illinois.edu/nav/form/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_P": "Change the labeling of %N_F @submit@ or @reset@ buttons to uniquely identify the purpose of each @submit@ or @reset@ buttons on the page",
           "HIDDEN_S": "The @submit@ or @reset@ control element that is hidden was not analyzed for having a unique label.",
           "HIDDEN_P": "The %N_H @submit@ and/or @reset@ control elements that are hidden were not analyzed for having a unique label.",
           "NOT_APPLICABLE": "No forms or only one form on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Label is unique",
           "ELEMENT_FAIL_1": "Add label to %1 control",
           "ELEMENT_FAIL_2": "Change the @value@ attribute content, use @fieldset@/@legend@ elements or ARIA technique to make @submit@ and @reset@ labels unique on the page",
           "ELEMENT_HIDDEN_1": "@submit@ and @reset@ button labels being unique was not tested because %1 control element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "CONTROL_12",
        "scope" : 1,
        "wcag_primary" : "2.4.6",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2011-09-16",
        "target_resources" : ["button","input[type='checkbox']","input[type='radio']","input[type='text']","input[type='password']","input[type='file']","input[type='submit']","input[type='reset']","select","textarea"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["computed_label","computed_label_source"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY = OpenAjax.a11y.VISIBILITY;\n   \n    var control_elements   = dom_cache.controls_cache.control_elements;\n    var control_elements_len = control_elements.length;\n    var ces   = [];\n\n    // Check to see if valid cache reference\n    if (control_elements && control_elements_len) {\n     \n      // collect all the visible controls \n      for (var i = 0; i < control_elements_len; i++) {\n        var ce = control_elements[i];\n        var de = ce.dom_element;\n        var cs = de.computed_style;\n  \n        var control_type = ce.control_type;\n\n        if (control_type === OpenAjax.a11y.CONTROL_TYPE.BUTTON_ELEMENT ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.BUTTON_INPUT   ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.CHECKBOX       ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.FILE           ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.PASSWORD       ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.RADIO          ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.SELECT         ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.TEXT           ||\n            control_type === OpenAjax.a11y.CONTROL_TYPE.TEXTAREA ) {\n\n          if (cs.is_visible_to_at === VISIBILITY.VISIBLE) { \n          \n            if (ce.computed_label_for_comparison !== '') {\n              rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_1', [de.tag_name]);                \n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', [de.tag_name]);        \n            }             \n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', [de.tag_name]);                                    \n          }          \n        }\n      } // end loop          \n    }        \n  }",
        "nls_rule_id" : "Form Control 12",
        "definition" : "Labels %s be must describe the purpose of every button, textarea, select and input element of type text, password, radio, and checkbox on a page",
        "summary" : "Labels %s be descriptive",
        "target_resource_desc" : "@textarea@, @select@ and @input@ elements of type @text@, @password@, @checkbox@, @radio@ and @file@",
        "purpose" : [
          "Labels that are unique make it possible for people to understand the different purposes of form controls on the same page"
        ],
        "techniques" : [
           "The preferred technique for labeling for controls is using the @label@ element and referencing the @id@ attribute value of the form control element",
           "Use the @label@ element to encapsulate the form control element",
           "In special cases, use @aria-labelledby@ attribute to reference the id(s) of the elements on the page that describe the purpose of the form control element",
           "In special cases, use @aria-label@ attribute to provide a explicit text description of the purpose of the form control element",
          "Use @aria-describedby@ to provide references to instructions or error information"
        ],
        "manual_checks" : [
           "Good labels are both concise and descriptive of the form control purpose",
           "If form controls are arranged in groups, use @filedset/Legend@ or ARIA labeling techniuqes to include grouping information",
          "Consider using @aria-describedby@ to provide references to instructions or error information"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-LABEL"
          },
          { "type"  : 11,
            "title" : "H44: Using label elements to associate text labels with form controls",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H44"
          },
          { "type"  : 11,
            "title" : "H65: Using the title attribute to identify form controls when the label element cannot be used",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H65"
          },
          { "type"  : 11,
            "title" : "H71: Providing a description for groups of form controls using fieldset and legend elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H71"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Labels for Form Controls Overview",
            "url"   : "http://html.cita.illinois.edu/nav/form/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add label to the form control that describes the from controls purpose",
           "FAIL_P": "Add labels, to the %N_F form controls missing labels, that uniquely describe purpose of each from control",
           "MANUAL_CHECK_S": "Verify the label uniquely describes the purpose of the control",
           "MANUAL_CHECK_P": "Verify the labels for the %N_MC form controls uniquely describe the purpose of the control",
           "HIDDEN_S": "The control element that is hidden does not need to be tested for a descriptive label.",
           "HIDDEN_P": "The %N_H control elements that are hidden do not need to be tested for a descriptive label.",
           "NOT_APPLICABLE": "No form controls on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the label describes the purpose and input required for @%1@ form control",
           "ELEMENT_FAIL_1": "Add a @label@ element, use @fieldset@/@legend@ elements or ARIA technique to provide a label for @%1@ form control",
           "ELEMENT_HIDDEN_1": "Form control label is descriptive was not tested because %1 control element is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "CONTROL_13",
        "scope" : 1,
        "wcag_primary" : "3.3.1",
        "wcag_related" : [],
        "last_updated" : "2011-09-16",
        "target_resources" : ["input[type='checkbox']","input[type='date']","input[type='file']","input[type='radio']","input[type='number']","input[type='password']","input[type='tel']","input[type='text']","input[type='url']","select","textarea","meter","progress"],
        "rule_category" : 4,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["validity","validation_message","pattern"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY = OpenAjax.a11y.VISIBILITY;\n   \n    var control_elements   = dom_cache.controls_cache.control_elements;\n    var control_elements_len = control_elements.length;\n    var ces   = [];\n\n    // Check to see if valid cache reference\n    if (control_elements && control_elements_len) {\n     \n      // collect all the visible controls \n      for (var i = 0; i < control_elements_len; i++) {\n        var ce = control_elements[i];\n        var de = ce.dom_element;\n        var cs = de.computed_style;\n  \n        if (ce.has_validity) {\n          if (cs.is_visible_to_at === VISIBILITY.VISIBLE) { \n            if (!ce.is_valid) {\n              if (de.has_aria_invalid) {\n                if (de.aria_invalid) rule_result.addResult(TEST_RESULT.PASS, ce, 'ELEMENT_PASS_1', [ce.toString()]);\n                else rule_result.addResult(TEST_RESULT.FAIL, ce, 'ELEMENT_FAIL_1', [ce.toString()]);\n              }  \n              else {\n                rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_1', [ce.toString()]);               \n              }  \n            }\n            else {\n              if (ce.has_pattern) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_2', [ce.toString()]);\n              else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ce, 'ELEMENT_MC_3', [ce.toString()]);                \n            }             \n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, ce, 'ELEMENT_HIDDEN_1', [ce].toString());                                    \n          }          \n        }\n      } // end loop          \n    }        \n  }",
        "nls_rule_id" : "Form Control 13",
        "definition" : "Form controls with invalid values %s must provide information to assitive technologies that the values are invalid",
        "summary" : "Information on invalid values",
        "target_resource_desc" : "@textarea@, @select@ and @input@ elements",
        "purpose" : [
          "Users must be able to identify form control values which are invalid in order to successfully correct the values and submit the form."
        ],
        "techniques" : [
           "Add the text 'invalid' to the label of the form control, the text can be placed off screen using CSS",
           "Add the image to the label.  The image should be visible indicating an invalid value with the alt text 'invalid'",
          "Use @aira-invalid@ attribute to indicate the form control is invalid"
        ],
        "manual_checks" : [
           "Enter invalid values into form controls that are validated and activate the validation event (i.e. form submission, change of focus...).",
          "For the form controls with invalid values check to make sure the technique for indicating the invalid value is present."
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @label@ element",
            "url"   : "http://www.w3.org/TR/html4/interact/forms.html#edef-LABEL"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0: aria-invalid",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-invalid"
          },
          { "type"  : 11,
            "title" : "H44: Using label elements to associate text labels with form controls",
            "url"   : "http://www.w3.org/TR/2010/NOTE-WCAG20-TECHS-20101014/H44"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the value of @aria-invalid@ property to @true@, on form control that is invalid and @aria-invalid='false'@.",
           "FAIL_P": "Change the value of @aria-invalid@ property to @true@, on %N_F form controls that are invalid and @aria-invalid='false'@.",
           "MANUAL_CHECK_S": "If the form control can be validated make sure it indicates invalid values when invalid",
           "MANUAL_CHECK_P": "If the %N_MC form controls can be validated make sure they indicates invalid values when invalid",
           "HIDDEN_S": "The control element that is hidden does not need to be tested for indicating invalid values.",
           "HIDDEN_P": "The %N_H control elements that are hidden do not need to be tested for indicating invalid values.",
           "NOT_APPLICABLE": "No form controls on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_FAIL_1": "@%1@ is invalid (i.e. validity.valid property of the control is 'false') change the value of '@aria-invalid@ attribute from @false@ to @true@",
           "ELEMENT_MC_1": "@%1@ is invalid (i.e. validity.valid property of the control is 'false'), verify the label contains information on the value being invalid or add the @aria-invalid='true'@ attribute to the control.",
           "ELEMENT_MC_2": "@%1@ is being tested for validity (i.e. @pattern@ attribute is present), verify the label contains information on the validity or add the @aria-invalid@ attribute to inidcate the state of validity of the control.",
           "ELEMENT_MC_3": "Verify if the @%1@ is being validated, if it is being validated verify it implements a technique to indicate the state of validity.",
           "ELEMENT_PASS_1": "@%1@ is invalid (i.e. validity.valid property of the control is 'false') and the '@aria-invalid=true@' has been set.",
           "ELEMENT_HIDDEN_1": "%1 form control was not tested for indicating invalid values because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "IMAGE_1",
        "scope" : 1,
        "wcag_primary" : "1.1.1",
        "wcag_related" : [],
        "last_updated" : "2012-04-12",
        "target_resources" : ["img","area","[role='img']"],
        "rule_category" : 8,
        "language_dependency" : "",
        "cache_dependency" : "images_cache",
        "resource_properties" : ["accessible_name","alt","aria_label","aria_labelledby","title","is_visible_to_at","role"],
        "validate" : "function (dom_cache, rule_result) {\n \n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n\n    var image_elements   = dom_cache.images_cache.image_elements;\n    var image_elements_len = image_elements.length;\n       \n    // Check to see if valid cache reference\n    if (image_elements && image_elements_len) {\n     \n      for (var i = 0; i < image_elements_len; i++) {\n        var ie = image_elements[i];\n        var de = ie.dom_element;\n        \n//        OpenAjax.a11y.logger.debug('Image is visibile to AT: ' + de.computed_style.is_visible_to_at);\n\n        if ((de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE ) &&\n            (!de.has_role || (de.role !== 'presentation'))){\n          \n          if (ie.accessible_name_source !== SOURCE.NONE) {\n            if (ie.accessible_name_source === SOURCE.ALT_ATTRIBUTE) {\n              if ((de.tag_name === 'img') || (de.tag_name === 'area')) rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_1', [de.tag_name]);\n              else rule_result.addResult(TEST_RESULT.FAIL, ie, 'ELEMENT_FAIL_2', [de.tag_name]); \n            } else if (ie.accessible_name_source === SOURCE.ARIA_LABELLEDBY) rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_2', [de.tag_name]);\n            else if (ie.accessible_name_source === SOURCE.ARIA_LABEL)      rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_3', [de.tag_name]);\n            else rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_4', [de.tag_name]);\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.FAIL, ie, 'ELEMENT_FAIL_1', [de.tag_name]);     \n          }\n        }\n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', [de.tag_name]);     \n        }\n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Image Rule 1",
        "definition" : "Each image %s have an text alternative",
        "summary" : "Image %s have alternative",
        "target_resource_desc" : "@img@, @area@ and [role='img']",
        "purpose" : [
           "Accessible name provides a description of an image for people who cannot see the image, usually the accessible name comes from an alt attribute",
          "Accessible name that is an empty string is ignored by assistive technologies and indicates an image is being used for styling rather than meaningful content"
        ],
        "techniques" : [
           "Text alternatives should describe the purpose of images as succinctly as possible (e.g. usually less than ~100 characters)",
           "The @alt@ attribute is the preferred and most commonly used way to provide a text alternative for @img@ and @area@ elements",
           "The @aria-labelledby@ attribute can be used to provide a text alternative when images can be described using text associated with the image, or for elements using @role='img'@",
           "The @aria-label@ attribute should only be used to provide a text alternative in special cases when an element has @role='img'@ attribute",
           "The @title@ attribute will be used to provide a text alternative if no other techniques is found",
          "If an image is purely stylistic or decorative set the text alternative must result in an empty string (i.e. @alt=''@) or use @role='presentation'@"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 13.8 How to specify alternate text",
            "url"   : "http://www.w3.org/TR/html4/struct/objects.html#adef-alt"
          },
          { "type"  : 11,
            "title" : "G94: Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G94"
          },
          { "type"  : 11,
            "title" : "G95: Providing short text alternatives that provide a brief description of the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G95"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Text Equivalents for Images and other Non-Text Objects Best Practices",
            "url"   : "http://html.cita.illinois.edu/text/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add @alt@ attribute to image element that describes the purpose of the image",
           "FAIL_P": "Add @alt@ attribute to each of the %N_F out of %N_T image elements that describes the content and/or purpose of each image",
           "NOT_APPLICABLE": "No @img@, @area@ or @[role=img]@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ element has @alt@ attribute",
           "ELEMENT_PASS_2": "@%1@ element has @aria-labelledby@ attribute",
           "ELEMENT_PASS_3": "@%1@ element has @aria-label@ attribute",
           "ELEMENT_PASS_4": "@%1@ element has @title@ attribute",
           "ELEMENT_FAIL_1": "Add a @alt@, @aria-labelledby@ or @aria-label@ attribute to the @%1@ element",
           "ELEMENT_FAIL_2": "Use @aria-labelledby@ or @aria-label@ attribute instead of @alt@ attribute for the accessible name for @%1@ element with @role='img'@",
           "ELEMENT_HIDDEN_1": "Image has text alternative was not tested becasue the @%1@ element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "IMAGE_2",
        "scope" : 1,
        "wcag_primary" : "1.1.1",
        "wcag_related" : [],
        "last_updated" : "2011-09-16",
        "target_resources" : ["img","[role='img']"],
        "rule_category" : 8,
        "language_dependency" : "",
        "cache_dependency" : "images_cache",
        "resource_properties" : ["longdesc","longdesc_is_broken","is_visible_to_at"],
        "validate" : "function (dom_cache, rule_result) {\n\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var URL_RESULT = OpenAjax.a11y.URL_RESULT;\n\n    var image_elements   = dom_cache.images_cache.image_elements;\n    var image_elements_len = image_elements.length;\n       \n    // Check to see if valid cache reference\n    if (image_elements && image_elements_len) {\n     \n      for (var i = 0; i < image_elements_len; i++) {\n        var ie = image_elements[i];\n        var de = ie.dom_element;\n        \n        if (ie.longdesc) {\n        \n          if ((de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) &&\n              (!de.has_role || (de.role !== 'presentation'))) {  \n\n          \n              switch (ie.longdesc_is_broken) {\n         \n              case URL_RESULT.VALID:\n                rule_result.addResult(OpenAjax.a11y.TEST_RESULT.PASS, ie, 'ELEMENT_PASS_1', []);     \n                break;\n          \n              case URL_RESULT.INVALID:\n                rule_result.addResult(TEST_RESULT.FAIL, ie, 'ELEMENT_FAIL_1', []);     \n                break;\n          \n              case URL_RESULT.NOT_TESTED:\n                rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_1', []);     \n                break;\n         \n              default:\n                rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_1', []);\n                break;\n              } \n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', []);     \n          }\n        }      \n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Image Rule 2",
        "definition" : "A @longdesc@ attribute on an @img@ element %s  reference a valid URL.",
        "summary" : "@longdesc@ %s be valid",
        "target_resource_desc" : "@img@",
        "purpose" : [
          "Some images (i.e charts, bar graphs, organizational charts, complex pictures and images) need a longer text equivalent than can be provided with the alt text content"
        ],
        "techniques" : [
          "@longdesc@ can be used to provide an internal link or external link to information that provides a extended and more detailed text equivalent of the image"
        ],
        "manual_checks" : [
          "Use browser inspection features to identify the value of the longdesc @attribute@, try using the value to open a web page in the browser"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: longdesc attribute",
            "url"   : "http://www.w3.org/TR/html4/struct/objects.html#adef-longdesc-IMG"
          },
          { "type"  : 11,
            "title" : "H45: Using longdesc",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H45"
          },
          { "type"  : 11,
            "title" : "G92: Providing long description for non-text content that serves the same purpose and presents ",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G92"
          },
          { "type"  : 11,
            "title" : "G74: Providing a long description in text near the non-text content, with a reference to the location of the long description in the short description",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G74"
          },
          { "type"  : 11,
            "title" : "G73: Providing a long description in another location with a link to it that is immediately adjacent to the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G73"
          },
          { "type"  : 11,
            "title" : "H45: Using longdesc",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H45"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Text Equivalents for Images and other Non-Text Objects Best Practices",
            "url"   : "http://html.cita.illinois.edu/text/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change @img@ with @longdesc@ attribute to a valid URL",
           "FAIL_P": "Change the %N_F out of %N_T @img@ elements with invalid @longdesc@ references to valid URLs",
           "MANUAL_CHECK_S": "Verify @img@ with @longdesc@ attribute is a valid URL",
           "MANUAL_CHECK_P": "Verify the %N_F @img@ elements with @longdesc@ attributes reference valid URLs",
           "NOT_APPLICABLE": "No @img@ elements with a @longdesc@ attribute found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@longdesc@ attribute is a valid URI",
           "ELEMENT_FAIL_1": "Change @longdesc@ attribute to a valid URI",
           "ELEMENT_MC_1": "Use a browser to test if the @longdesc@ attribute is a valid URL",
           "ELEMENT_HIDDEN_1": "@longdesc@ has valid url was not tested becasue @img@ element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "IMAGE_3",
        "scope" : 1,
        "wcag_primary" : "1.1.1",
        "wcag_related" : [],
        "last_updated" : "2011-09-16",
        "target_resources" : ["img","[role='img']"],
        "rule_category" : 8,
        "language_dependency" : "",
        "cache_dependency" : "images_cache",
        "resource_properties" : ["accessible_name","file_name","is_visible_to_at"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n\n    var image_elements   = dom_cache.images_cache.image_elements;\n    var image_elements_len = image_elements.length;\n       \n    // Check to see if valid cache reference\n    if (image_elements && image_elements_len) {\n     \n      for (var i = 0; i < image_elements_len; i++) {\n        var ie = image_elements[i];\n        var de = ie.dom_element;\n\n        if (ie.accessible_name_for_comparison && ie.accessible_name_for_comparison.length) {\n          \n          if ((de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) &&\n              (!de.has_role || (de.role !== 'presentation'))){\n          \n            // make sure it has a file extension, will assume extension is for an image\n            if (ie.file_name.indexOf('.') >= 0) {\n         \n              if (ie.accessible_name_for_comparison.indexOf(ie.file_name) >= 0 ) {\n                rule_result.addResult(TEST_RESULT.FAIL, ie, 'FAIL_MC', []);                 \n              }\n              else {\n                rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_1', []);                 \n              }\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_1', []);                              \n            }\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', [de.tag_name]);     \n          }\n        }      \n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Image Rule 3",
        "definition" : "The file name of the image %s not be part of the text alternative",
        "summary" : "Don't use filename",
        "target_resource_desc" : "@img@, @area@ and @[role='img']@",
        "purpose" : [
           "Text alternatives provide a description of images for people who cannot see the image and the file name is not useful information",
          "Empty text alternatives are ignored by assistive technologies and indicates an image is being used for styling rather than meaningful content"
        ],
        "techniques" : [
           "Text alternatives should describe the purpose of images as succinctly as possible (e.g. usually less than ~100 characters) and do not include the file name as part of the text alternative",
           "The @alt@ attribute is the preferred and most commonly used way to provide a text alternative for @img@ and @area@ elements",
           "The @aria-labelledby@ attribute can be used to provide a text alternative when images can be described using visible captions associated with the image",
           "The @aria-label@ attribute should only be used to provide a text alternative in special cases when an element has @role='img'@ attribute",
           "The @title@ attribute will be used to provide a text alternative if none of the other techniques is found",
          "If an image is purely stylistic or decorative set the text alternative must result in an empty string (i.e. @alt=''@) or use @role='presentation'@"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 13.8 How to specify alternate text",
            "url"   : "http://www.w3.org/TR/html4/struct/objects.html#adef-alt"
          },
          { "type"  : 11,
            "title" : "G94: Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G94"
          },
          { "type"  : 11,
            "title" : "G95: Providing short text alternatives that provide a brief description of the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G95"
          },
          { "type"  : 11,
            "title" : "F30: Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not alternatives (e.g., filenames or placeholder text)",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F30"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the value of the @alt@ attribute of the image element to describe the image and not use the image file name",
           "FAIL_P": "Change the value of the @alt@ attribute of the %N_F out of %N_T images to NOT use the image and not use the image file name",
           "NOT_APPLICABLE": "No @img@ elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "text alternative does not contain the filename",
           "ELEMENT_FAIL_1": "Change text alternative to succinctly describe the purpose and/or content of the image",
           "ELEMENT_HIDDEN_1": "The file name must not be part of the text alternative was not tested because the @img@ element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "IMAGE_4_EN",
        "scope" : 1,
        "wcag_primary" : "1.1.1",
        "wcag_related" : [],
        "last_updated" : "2011-09-16",
        "target_resources" : ["img","area"],
        "rule_category" : 8,
        "language_dependency" : "",
        "cache_dependency" : "images_cache",
        "resource_properties" : ["accessible_name","accessible_name_length","is_visible_to_at"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var MAX_ACCESSIBLE_NAME_LENGTH = 100;\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n\n    var image_elements   = dom_cache.images_cache.image_elements;\n    var image_elements_len = image_elements.length;\n       \n    // Check to see if valid cache reference\n    if (image_elements && image_elements_len) {\n     \n      for (var i = 0; i < image_elements_len; i++) {\n        var ie = image_elements[i];\n        var de = ie.dom_element;\n\n        if (ie.accessible_name_source !== SOURCE.NONE) {\n\n          if ((de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) &&\n              (!de.has_role || (de.role !== 'presentation'))){\n\n            if (ie.accessible_name_length > MAX_ACCESSIBLE_NAME_LENGTH) {\n              rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_1', [MAX_ACCESSIBLE_NAME_LENGTH]);     \n            }\n            else {     \n              rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_1', [MAX_ACCESSIBLE_NAME_LENGTH]);     \n            }\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', [de.tag_name]);     \n          }\n        }\n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Image Rule 4 (English)",
        "definition" : "Text alternatives %s less than 100 characters",
        "summary" : "Text alternative length",
        "target_resource_desc" : "@img@, @area@ and @[role='img']@",
        "purpose" : [
           "Text alternatives provides a description of the image for people who cannot see the image",
           "Long text alternatives can reduce usability by increasing the time it takes to read a web page and understand the purpose of an image in the web site",
          "Alt text that is an empty string is ignored by assistive technologies and indicates an image is being used for styling rather than meaningful content"
        ],
        "techniques" : [
           "Text alternatives should describe the purpose of images as succinctly as possible (e.g. usually less than ~100 characters) and do not include the file name as part of the text alternative",
           "The @alt@ attribute is the preferred and most commonly used way to provide a text alternative for @img@ and @area@ elements",
           "The @aria-labelledby@ attribute can be used to provide a text alternative when images can be described using visible captions associated with the image",
           "The @aria-label@ attribute should only be used to provide a text alternative in special cases when an element has @role='img'@ attribute",
           "The @title@ attribute will be used to provide a text alternative if none of the other techniques is found",
          "If an image is purely stylistic or decorative set the text alternative must result in an empty string (i.e. @alt=''@) or use @role='presentation'@"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 13.8 How to specify alternate text",
            "url"   : "http://www.w3.org/TR/html4/struct/objects.html#adef-alt"
          },
          { "type"  : 11,
            "title" : "G94: Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G94"
          },
          { "type"  : 11,
            "title" : "G95: Providing short text alternatives that provide a brief description of the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G95"
          },
          { "type"  : 11,
            "title" : "F30: Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not alternatives (e.g., filenames or placeholder text)",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F30"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "image element text alternative is GREATER than 100 characters",
           "MANUAL_CHECK_P": "All %N_F image elements have text alternatives GREATER than 100 characters",
           "NOT_APPLICABLE": "No @img@, @area@ or @[role='img']@ elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Text alternative (e.g. typically @alt@ attribute) is less than 100 characters",
           "ELEMENT_FAIL_1": "Add text alternative (e.g. typically @alt@ attribute) to the image",
           "ELEMENT_MC_1": "Check the text alternative (e.g. typically @alt@ attribute) to see if it can be reworded to be less less than 100 characters, also consider using a long description texhnique (i.e. @longdesc@ or @aria-describedby@) to provide a longer description and allow the text alternative to be shorter",
           "ELEMENT_HIDDEN_1": "Length of text alternative eas not tested because the @img@ element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "IMAGE_5",
        "scope" : 1,
        "wcag_primary" : "1.1.1",
        "wcag_related" : [],
        "last_updated" : "2011-09-16",
        "target_resources" : ["img","[role='img']"],
        "rule_category" : 8,
        "language_dependency" : "",
        "cache_dependency" : "images_cache",
        "resource_properties" : ["accessible_name_length","role","height","width","is_visible_to_at"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var MAX_IMAGE_HEIGHT = 6;\n    var MAX_IMAGE_WIDTH  = 6;\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n\n    var image_elements   = dom_cache.images_cache.image_elements;\n    var image_elements_len = image_elements.length;\n       \n    // Check to see if valid cache reference\n    if (image_elements && image_elements_len) {\n     \n      for (var i = 0; i < image_elements_len; i++) {\n        var ie = image_elements[i];\n        var de = ie.dom_element;\n\n        if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          \n          if ((ie.height <= MAX_IMAGE_HEIGHT) || (ie.width <= MAX_IMAGE_WIDTH)) {\n            if (de.has_role && (de.role === 'presentation')) rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_1', []);\n            else if (ie.accessible_name_length === 0) rule_result.addResult(TEST_RESULT.PASS, ie, 'ELEMENT_PASS_2', []);\n            else rule_result.addResult(TEST_RESULT.FAIL, ie, 'ELEMENT_FAIL_1', []);\n          } \n        }\n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', [de.tag_name]);     \n        }\n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Image Rule 5",
        "definition" : "If an image element has a height or width less than 6 pixels or its alt text set to empty, the image %s set its role attribute to 'presentation' or the image %s be removed and CSS %s should be used for positioning.",
        "summary" : "Small/decorative images set to presentation",
        "target_resource_desc" : "@img@",
        "purpose" : [
           "Small and decorative images (i.e. less than 6 pixels high or wide) can be ignored by assistive technologies",
          "Images with the @alt=''@ attribute should be set to the empty string"
        ],
        "techniques" : [
          "Small images are usually purely stylistic or decorative and the @alt@ text content should be the empty string (i.e. @alt=''@)"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 13.8 How to specify alternate text",
            "url"   : "http://www.w3.org/TR/html4/struct/objects.html#adef-alt"
          },
          { "type"  : 11,
            "title" : "F30: Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not alternatives (e.g., filenames or placeholder text)",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F30"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "For the one small image in the page, add a @role=presentation@ or change text alternative to an empty string (e.g. @alt=''@)",
           "FAIL_P": "For the %N_F small images on the page, add a @role=presentation@ or change text alternative to an empty string (e.g. @alt=''@)",
           "NOT_APPLICABLE": "No small or decorative images (i.e. less than 6 pixels high or wide) on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Image element has @role='presentation'@",
           "ELEMENT_PASS_2": "Image element has @alt=''@",
           "ELEMENT_FAIL_1": "Add @role='presentation'@ or change text alternative to empty string (i.e. @alt=''@)",
           "ELEMENT_HIDDEN_1": "Small images set to @role='presentation'@ was not tested becasue the @img@ element is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "IMAGE_6",
        "scope" : 1,
        "wcag_primary" : "1.1.1",
        "wcag_related" : [],
        "last_updated" : "2011-09-16",
        "target_resources" : ["img","[role='img']"],
        "rule_category" : 8,
        "language_dependency" : "",
        "cache_dependency" : "images_cache",
        "resource_properties" : ["accessible_name","role","is_visible_to_at"],
        "validate" : "function (dom_cache, rule_result) {\n    \n    var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY    = OpenAjax.a11y.VISIBILITY;\n\n    var image_elements   = dom_cache.images_cache.image_elements;\n    var image_elements_len = image_elements.length;\n\n    // Check to see if valid cache reference\n    if (image_elements && image_elements_len) {\n     \n      for (var i = 0; i < image_elements_len; i++) {\n        var ie = image_elements[i];\n        var de = ie.dom_element;\n\n        if ((de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) &&\n            (!de.has_role || (de.role !== 'presentation'))) {\n            \n          if (ie.accessible_name_length === 0 || ie.is_presentation) {     \n            rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_1', []);\n          }\n          \n        }    \n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_1', []);     \n        }\n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Image Rule 6",
        "definition" : "Verify image element is be used for styling or decoration",
        "summary" : "Verify decorative image",
        "target_resource_desc" : "@img@",
        "purpose" : [
           "If an image is purely decoration or used for styling users of screen readers do not need to know the image exists",
          "If an image does not have alt text content and contains information, users of assistive technology will not have access to the information"
        ],
        "techniques" : [
          "Use the attributes @alt=''@ or @role='presentation'@ to indicate an image is used purely for stylistic or decorative purposes"
        ],
        "manual_checks" : [
          "Find each image on the page and check to make sure is only being used decoratively or is redudent with other information on the page"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 13.8 How to specify alternate text",
            "url"   : "http://www.w3.org/TR/html4/struct/objects.html#adef-alt"
          },
          { "type"  : 11,
            "title" : "G94: Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G94"
          },
          { "type"  : 11,
            "title" : "G95: Providing short text alternatives that provide a brief description of the non-text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G95"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Text Equivalents for Images and other Non-Text Objects Best Practices",
            "url"   : "http://html.cita.illinois.edu/text/"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify @img@ element with @alt=''@ or @role='presentation'@ is purely decorative",
           "MANUAL_CHECK_P": "Verify %N_MC out of %N_T @img@ elements with @alt=''@ or @role='presentation'@ are purely decorative",
           "NOT_APPLICABLE": "No @img@ elements identified as decorative (i.e. @alt=''@ or @role='presentation'@) on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the image is only used for styling or decoration",
           "ELEMENT_HIDDEN_1": "Verify decorative image was not tested because @img@ element is hidden from assistive technologies using CSS"    
        }
      },
      {
        "rule_id" : "HEADING_1",
        "scope" : 2,
        "wcag_primary" : "2.4.1",
        "wcag_related" : ["1.3.1","2.4.2","2.4.6","2.4.10"],
        "last_updated" : "2012-06-31",
        "target_resources" : ["Page","h1"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name","name_length"],
        "validate" : "function (dom_cache, rule_result) {\n \n      var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n  \n      var h1_elements     = dom_cache.headings_landmarks_cache.h1_elements;\n      var h1_elements_len = h1_elements.length;\n      \n      var page_element = dom_cache.headings_landmarks_cache.page_element;\n      \n      var h1_count = 0;\n      \n      if (h1_elements && h1_elements_len) {\n      \n        for (var i = 0; i < h1_elements_len; i++ ) {\n          var he = h1_elements[i];\n\n          if (he.dom_element.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n            rule_result.addResult(TEST_RESULT.HIDDEN, he, 'ELEMENT_HIDDEN_1', []);                      \n          }\n          else {\n            if (he.name && he.name.length) {\n              rule_result.addResult(TEST_RESULT.PASS, he, 'ELEMENT_PASS_1', []);\n              h1_count++;\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', []);\n            }\n          }  \n        }\n      }\n\n     if (page_element) {\n       // Test if no h1s\n       if (h1_count === 0) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_1', []);\n       else rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_1', []);\n     } \n  }",
        "nls_rule_id" : "Heading Rule 1",
        "definition" : "The page %s contain at least one @h1@ element and each must have an accessible name.",
        "summary" : "Page %s have @h1@ element",
        "target_resource_desc" : "@h1@ and @body@ elements",
        "purpose" : [
          "An @h1@ heading provides an important navigation point for users of assistive technologies, allowing them to easily find the main content of the page."
        ],
        "techniques" : [
           "Include an @h1@ element at the beginning of the main content.",
           "The accessible name of the @h1@ element should describe the main content of the page.",
          "The @h1@ element should be visible graphically and to assistive technologies. It should not be hidden using CSS techniques."
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @h1@ element",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H1"
          },
          { "type"  : 11,
            "title" : "G130: Providing descriptive headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G130"
          },
          { "type"  : 11,
            "title" : "G141: Organizing a page using headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G141"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Unique Title",
            "url"   : "http://html.cita.illinois.edu/nav/title/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add a descriptive @h1@ element at the beginning of the main content of the page.",
           "FAIL_P": "Add a descriptive @h1@ element at the beginning of the main content of the page.",
           "HIDDEN_S": "One @h1@ element that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H @h1@ elements that are hidden were not evaluated."    
        },
        "node_result_messages" : {
           "PAGE_PASS_1": "Page has @h1@ element.",
           "PAGE_FAIL_1": "Add an @h1@ element at the beginning of the main content of the page.",
           "ELEMENT_PASS_1": "@h1@ element contributes to passing this rule.",
           "ELEMENT_FAIL_1": "Add an accessible name to the @h1@ element that describes the main content of the page.",
           "ELEMENT_HIDDEN_1": "The @h1@ element was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "HEADING_2",
        "scope" : 1,
        "wcag_primary" : "2.4.6",
        "wcag_related" : ["1.3.1","2.4.1","2.4.2","2.4.10"],
        "last_updated" : "2012-06-31",
        "target_resources" : ["h1"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","id","name","main_landmark"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var h1_elements     = dom_cache.headings_landmarks_cache.h1_elements;\n    var h1_elements_len = h1_elements.length;\n\n    var main_elements     = dom_cache.headings_landmarks_cache.main_elements;\n    var main_elements_len = main_elements.length;\n\n    if (main_elements && h1_elements && main_elements_len && h1_elements_len) {\n      \n      for (var i = 0; i < h1_elements_len; i++) {\n        var he = h1_elements[i];\n        var de = he.dom_element;\n        \n        if (de.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n          rule_result.addResult(TEST_RESULT.HIDDEN, he, 'ELEMENT_HIDDEN_1', []);                      \n        }\n        else {\n          if (he.is_child_of_main) rule_result.addResult(TEST_RESULT.PASS, he, 'ELEMENT_PASS_1', []);\n          else rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', []);\n        }\n        \n      }\n    }\n  }",
        "nls_rule_id" : "Heading Rule 2",
        "definition" : "If the page contains both a @main@ landmark and an @h1@ element, the @h1@ element %s be a child of the main landmark.",
        "summary" : "@h1@ %s be in @main@ landmark",
        "target_resource_desc" : "@h1@ elements and elements with ARIA attribute @role='main'@",
        "purpose" : [
           "An @h1@ heading provides an important navigation point for users of assistive technologies, allowing them to easily find the main content of the page.",
          "Including both a @main@ landmark and an @h1@ element provides a redundant way for users of assistive technologies to find the main content of a web page."
        ],
        "techniques" : [
           "This rule supports the coding practice of reserving the @h1@ element for titling the main content area of a web page.",
           "Include an @h1@ element at the beginning of each @main@ landmark.",
           "The @h1@ element should describe the main content or purpose of the page.",
          "If there is more than one @main@ landmark, use the @aria-labelledby@ attribute on each to reference an @h1@ element that provides its accessible name."
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: The @h1@ element",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H1"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: @main@ role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#main"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Move the @h1@ element inside (and preferably at the beginning) of the @main@ landmark element, or change the @h1@ element to another heading level.",
           "FAIL_P": "Move the %N_F @h1@ elements inside (and preferably at the beginning) of @main@ landmark elements, or change the @h1@ elements to other heading levels.",
           "HIDDEN_S": "One @h1@ element that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H @h1@ elements that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No @main@ landmark and/or @h1@ elements on this page."    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @h1@ is a child element of a @main@ landmark.",
           "ELEMENT_FAIL_1": "Position the @h1@ element as one of the first child elements of a @main@ landmark.",
           "ELEMENT_HIDDEN_1": "The @h1@ element was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "HEADING_3",
        "scope" : 1,
        "wcag_primary" : "2.4.6",
        "wcag_related" : ["1.3.1","2.4.10"],
        "last_updated" : "2012-06-31",
        "target_resources" : ["h1","h2","h3","h4","h5","h6"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    function getSiblingHeadings(index, heading_element) {\n   \n      var list = [];\n      var flag = true; \n      \n      tested_list.push(heading_element);\n                  \n      for (var i = (index+1); i < heading_elements_len; i++) {\n        \n        var he = heading_elements[i];\n        \n        if (he.dom_element.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n          tested_list.push(he);\n          continue;\n        }\n        \n        if (heading_element.level > he.level) return list;\n        \n        if (heading_element.level === he.level) {\n          if (flag) list.push(heading_element);\n          flag = false;\n          \n          list.push(he);\n          tested_list.push(he);\n        }  \n\n      }\n        \n      if (list.length > 1) return list;\n      else return[];\n   \n    }\n\n    function notInTestedList(he) {\n    \n      for (var i = 0; i < tested_list.length; i++) {\n        if (tested_list[i] === he) return false;\n      }\n    \n      return true;\n    }\n\n    function notInDoneList(he) {\n    \n      for (var i = 0; i < done_list.length; i++) {\n        if (done_list[i] === he) return false;\n      }\n    \n      return true;\n    }\n\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var heading_elements     = dom_cache.headings_landmarks_cache.heading_elements;\n    var heading_elements_len = heading_elements.length;\n\n    var main_elements     = dom_cache.headings_landmarks_cache.main_elements;\n    var main_elements_len = main_elements.length;\n    \n    var tested_list = [];\n    var done_list   = [];\n    var i, j, k;\n    var sibling_headings = [];\n    var sibling_headings_len = 0;\n\n//    if (main_elements_len === 0 && heading_elements_len > 1) {\n    if (heading_elements_len > 1) {\n    \n      for (i = 0; i < (heading_elements_len-1); i++) {\n      \n        var he = heading_elements[i];\n        \n        if (notInTestedList(he)) sibling_headings = getSiblingHeadings(i, he);\n        \n        sibling_headings_len = sibling_headings.length;\n      \n        if (sibling_headings_len > 1) {\n        \n          for (j = 0; j < (sibling_headings_len-1); j++) {\n          \n            var sh1 = sibling_headings[j];\n            var first_flag = true;\n            \n            if (notInDoneList(sh1) && sh1.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n            \n              for (k = j+1; k < sibling_headings_len; k++) {\n                var sh2 = sibling_headings[k];\n                \n                if (sh1.name_for_comparison === sh2.name_for_comparison) {\n                  if (first_flag) { \n                    rule_result.addResult(TEST_RESULT.FAIL, sh1, 'ELEMENT_FAIL_1', [sh1.dom_element.tag_name]); \n                    done_list.push(sh1);\n                  }  \n                  rule_result.addResult(TEST_RESULT.FAIL, sh2, 'ELEMENT_FAIL_1', [sh2.dom_element.tag_name]);\n                  done_list.push(sh2);\n                  first_flag = false;\n                }\n              }      \n            }  \n          }\n          \n          for (j = 0; j < sibling_headings_len; j++) {\n            var sh = sibling_headings[j];\n            if (notInDoneList(sh)) { \n              if (sh.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n                rule_result.addResult(TEST_RESULT.PASS, sh, 'ELEMENT_PASS_1', [sh.dom_element.tag_name]);\n              }\n              done_list.push(sh);\n            }  \n          }\n        }\n      }\n    }\n  }",
        "nls_rule_id" : "Heading Rule 3",
        "definition" : "The accessible names of sibling heading elements of the same level %s be unique.",
        "summary" : "Sibling headings %s be unique",
        "target_resource_desc" : "Heading elements",
        "purpose" : [
          "If section headings that share the same parent heading are NOT unique, users of assistive technologies will not be able to discern the differences among sibling sections of the web page."
        ],
        "techniques" : [
          "Make sure the accessible names of sibling headings that share the same parent heading help users understand the unique content of each section they describe."
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Headings: The H1, H2, H3, H4, H5, H6 elements",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H1"
          },
          { "type"  : 11,
            "title" : "G130: Providing descriptive headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G130"
          },
          { "type"  : 11,
            "title" : "G141: Organizing a page using headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G141"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Unique Title",
            "url"   : "http://html.cita.illinois.edu/nav/title/"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Sub Headings",
            "url"   : "http://html.cita.illinois.edu/nav/heading/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_P": "Update the accessible names of the %N_F sibling heading elements of the same level to be unique.",
           "HIDDEN_S": "One heading element that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H heading elements that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No sibling heading elements of the same level were found on the page."    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The %1 heading content is unique among its sibling headings.",
           "ELEMENT_FAIL_1": "Change the accessible name of %1 heading to make it unique among its sibling headings.",
           "ELEMENT_HIDDEN_1": "The %1 element was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "HEADING_4",
        "scope" : 1,
        "wcag_primary" : "2.4.6",
        "wcag_related" : ["1.3.1","2.4.10"],
        "last_updated" : "2012-06-31",
        "target_resources" : ["h1","h2","h3","h4","h5","h6"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var heading_elements     = dom_cache.headings_landmarks_cache.heading_elements;\n    var heading_elements_len = heading_elements.length;\n\n    for (var i = 0; i < heading_elements_len; i++ ) {\n      var he = heading_elements[i];\n      var de = he.dom_element;\n      if (de.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n        rule_result.addResult(TEST_RESULT.HIDDEN, he, 'ELEMENT_HIDDEN_1', [de.tag_name]);                      \n      }\n      else {\n        if (he.name.length) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, he, 'ELEMENT_MC_1', [de.tag_name]);\n        else rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', [de.tag_name]);\n      }  \n    }\n  }",
        "nls_rule_id" : "Heading Rule 4",
        "definition" : "Heading elements %s describe the sections they label.",
        "summary" : "Headings %s be descriptive",
        "target_resource_desc" : "Heading elements",
        "purpose" : [
           "If headings are NOT descriptive or unique they will confuse users of assistive technologies.",
          "There is a balance needed between having too few headings and too many headings on a web page. Make sure that the heading structure provides a good 'outline' of the sections and subsections of the page."
        ],
        "techniques" : [
           "Use the @h1@ element to indicate the start of the main content, by putting it just before the main content.",
           "Use the @h1@ element to provide a title for the web page.",
           "Include heading elements at the proper level for each section of a web page.",
           "Use @aria-describedby@ to provide context for a heading in a web page.",
           "Use headings as labels for ARIA landmarks to provide redundant page navigation capabilities for users of assistive technologies.",
           "Use the CSS @position@ property to remove headings from the graphical rendering, while keeping them accessible to users of assistive technologies.",
          "Do NOT use CSS @display: none@, @visibility: hidden@ or the @hidden@ attribute to hide headings when they are being used to provide section labeling information to users of assistive technologies. Instead use the CSS @position@ property to move the headings off-screen."
        ],
        "manual_checks" : [
           "Check the heading structure to make sure the headings represent the sections and subsections of the web page.",
           "Check the headings against other headings on the page to make sure they uniquely describe the content of each section of the web page.",
          "If headings are too similar to each other, users of assistive technologies will not understand the differences between different sections of the web page."
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Headings: The H1, H2, H3, H4, H5, H6 elements",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H1"
          },
          { "type"  : 11,
            "title" : "G130: Providing descriptive headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G130"
          },
          { "type"  : 11,
            "title" : "G141: Organizing a page using headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G141"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Unique Title",
            "url"   : "http://html.cita.illinois.edu/nav/title/"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Sub Headings",
            "url"   : "http://html.cita.illinois.edu/nav/heading/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add an accessible name to the empty heading element, or remove it if it is not needed.",
           "FAIL_P": "Add accessible names to the %N_F empty heading elements, or remove them if they are not needed.",
           "MANUAL_CHECK_S": "Verify that the heading element describes the section that it labels.",
           "MANUAL_CHECK_P": "Verify that each of the %N_MC heading elements describes the section that it labels.",
           "HIDDEN_S": "One heading element that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H heading elements that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No heading elements on this page."    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Check %1 element to make sure it describes the section it labels.",
           "ELEMENT_FAIL_1": "Add an accessible name to the %1 element that describes the section it labels, or remove it from the page if it is not needed.",
           "ELEMENT_HIDDEN_1": "The %1 element was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "HEADING_5",
        "scope" : 1,
        "wcag_primary" : "2.4.6",
        "wcag_related" : ["1.3.1","2.4.10"],
        "last_updated" : "2012-11-01",
        "target_resources" : ["h1","h2","h3","h4","h5","h6"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name"],
        "validate" : "function (dom_cache, rule_result) {\n  \n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var heading_elements     = dom_cache.headings_landmarks_cache.heading_elements;\n    var heading_elements_len = heading_elements.length;\n\n    for (var i = 0; i < heading_elements_len; i++) {\n    \n      var he = heading_elements[i];\n      var tag_name = he.dom_element.tag_name;\n   \n      if (he.is_visible) {\n        if (he.has_content) {\n          if ((he.nesting_parent_heading === he.last_parent_heading)) {\n            if (!he.nesting_parent_heading ||\n                (he.nesting_parent_heading &&\n                he.nesting_parent_heading.global_properly_nested)) {\n              rule_result.addResult(TEST_RESULT.PASS, he, 'ELEMENT_PASS_1', [tag_name]);\n              he.global_properly_nested = true;\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', [tag_name]);                     \n              he.global_properly_nested = false;\n            }\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', [tag_name]);                     \n            he.global_properly_nested = false;\n          }\n        }\n        else {\n          rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_2', [tag_name]);             \n        }\n      }\n      else {\n        rule_result.addResult(TEST_RESULT.HIDDEN, he, 'ELEMENT_HIDDEN_1', [tag_name]);       \n      }    \n    }\n\n//    var page_element = dom_cache.headings_landmarks_cache.page_element;\n//\n//      if (heading_fail === 0) rule_result.addResult(TEST_RESULT.PASS, page_element, 'ELEMENT_PASS_2', []);\n//      else if (heading_fail === 1) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'ELEMENT_FAIL_3', []);\n//      else rule_result.addResult(TEST_RESULT.FAIL, page_element, 'ELEMENT_FAIL_4', [heading_fail]);\n  }",
        "nls_rule_id" : "Heading Rule 5",
        "definition" : "Heading elements %s be properly nested on the page.",
        "summary" : "Headings %s be properly nested",
        "target_resource_desc" : "Heading elements",
        "purpose" : [
          "Heading elements that are properly nested help users of assistive technologies understand the structure of the information on the web page."
        ],
        "techniques" : [
           "Include headings elements at the proper level for each section of a web page.",
           "Use headings as labels for ARIA landmarks to provide a redundant way for users of assistive technologies to navigate the page (i.e. header or landmark navigation).",
           "Check headings against other headings in the document to make sure they uniquely describe the content of each section of the web page.",
          "If headings are too similar to each other, users of assistive technologies will not be able to use them to understand the differences between sections of the web page."
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Headings: The H1, H2, H3, H4, H5, H6 elements",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H1"
          },
          { "type"  : 11,
            "title" : "G130: Providing descriptive headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G130"
          },
          { "type"  : 11,
            "title" : "G141: Organizing a page using headings",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G141"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Unique Title",
            "url"   : "http://html.cita.illinois.edu/nav/title/"
          },
          { "type"  : 10,
            "title" : "iCITA Best Practices: Sub Headings",
            "url"   : "http://html.cita.illinois.edu/nav/heading/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Review the entire heading structure and update the heading levels so that the heading element is properly nested in relation to the %N_T headings on the page.",
           "FAIL_P": "Review the entire heading structure and update the heading levels so that the %N_F heading elements are properly nested in relation to the %N_T headings on the page.",
           "HIDDEN_S": "One heading element that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H heading elements that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No heading elements or only one heading element on this page."    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The %1 element is properly nested.",
           "ELEMENT_PASS_2": "All heading elements are properly nested",
           "ELEMENT_FAIL_1": "Adjust the level of the %1 element or other heading elements so that the headings are properly nested on the page.",
           "ELEMENT_FAIL_2": "Add text content to %1 element that describes the section it labels, or remove it from the page if it is not needed.",
           "ELEMENT_FAIL_3": "Adjust the heading levels of the parent %1 element or this %2 element so that the headings are properly nested on the page.",
           "ELEMENT_HIDDEN_1": "The %1 element was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "HEADING_6",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.6","2.4.10"],
        "last_updated" : "2012-06-31",
        "target_resources" : ["h1","h2","h3","h4","h5","h6"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var heading_elements     = dom_cache.headings_landmarks_cache.heading_elements;\n    var heading_elements_len = heading_elements.length;\n\n    for (var i = 0; i < heading_elements_len; i++ ) {\n      var  he = heading_elements[i];\n      var de = he.dom_element;\n      var cs = de.computed_style;\n      \n      if (cs.is_visible_to_at === VISIBILITY.HIDDEN) {\n        rule_result.addResult(TEST_RESULT.HIDDEN, he, 'ELEMENT_HIDDEN_1', [de.tag_name]);                      \n      }\n      else {\n        if (he.name.length) {\n          if (he.text_only_from_image) rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', [de.tag_name]);\n          else rule_result.addResult(TEST_RESULT.PASS, he, 'ELEMENT_PASS_1', [de.tag_name]);\n        }\n        else {\n          rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_2', [de.tag_name]);        \n        }\n      }  \n    }\n  }",
        "nls_rule_id" : "Heading Rule 6",
        "definition" : "Heading elements %s have visible text content.",
        "summary" : "Headings %s have text content",
        "target_resource_desc" : "Heading elements",
        "purpose" : [
          "Heading elements that consist only of image content are not easily restyled for readabilty by people with low vision."
        ],
        "techniques" : [
          "Use CSS instead of images to style heading text content."
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Headings: The H1, H2, H3, H4, H5, H6 elements",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H1"
          },
          { "type"  : 11,
            "title" : "C22: Using CSS to control visual presentation of text",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/C22"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "For the heading element with only image content, replace the image with text content styled using CSS.",
           "FAIL_P": "For the %N_F heading elements with only image content, replace the images with text content styled using CSS.",
           "HIDDEN_S": "One heading element that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H heading elements that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No headings with only image content."    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The %1 element contains visible text content.",
           "ELEMENT_FAIL_1": "Add visible text content to the %1 element.",
           "ELEMENT_FAIL_2": "The %1 element does not have an accessible name.  Either remove the heading from the page or add visible text content to describe the section.",
           "ELEMENT_HIDDEN_1": "The %1 element was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "HEADING_7",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.1","2.4.6","2.4.10"],
        "last_updated" : "2013-10-30",
        "target_resources" : ["h2","[role='banner']","[role='contentinfo']","[role='complementary']","[role='form']","[role='navigation']","[role='search']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name","parent_landmark"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n    \n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var cs = le.dom_element.computed_style;\n\n      if ((le.role === 'banner') ||\n          (le.role === 'contentinfo') ||\n          (le.role === 'complementary') ||\n          (le.role === 'form') ||\n          (le.role === 'navigation') ||\n          (le.role === 'search')) {\n          \n        if (cs.is_visible_to_at) {\n      \n          var heading_elements = le.getHeadings();\n          var heading_elements_len = heading_elements.length;\n          \n          if (heading_elements.length) {\n            var he = heading_elements[0];\n            if (he.level === 2) { \n              rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_1', [le.role]);\n              rule_result.addResult(TEST_RESULT.PASS, he, 'ELEMENT_PASS_1', [le.role]);\n            } \n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, le, 'ELEMENT_FAIL_1', [le.role, he.level]);\n              rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', [le.role, he.level]);            \n            }\n          }  \n        }\n      }  \n    }  \n  }",
        "nls_rule_id" : "Heading Rule 7",
        "definition" : "If a @banner@, @contentinfo@, @complementary@, @form@, @navigation@ or @search@ landmark contains a heading element, the first heading should be an @h2@ element.",
        "summary" : "First landmark heading @h2@",
        "target_resource_desc" : "@banner@, @contentinfo@, @complementary@, @form@, @navigation@ or @search@ landmarks elements",
        "purpose" : [
           "Headings provide a redundant way for people to navigate and orient themselves to content on a web page.",
          "The use of an @h2@ element as the first heading in a landmark (except the @main@ landmark) supports a consistent use of headings for finding the main sections in a web page."
        ],
        "techniques" : [
           "Include a @role='contentinfo'@ attribute on an element that contains @ol@ and @ul@ elements that contain li elements with links",
          "Use the @aria-labelledby@ or @aria-label@ to describe the purpose of the links (e.g. table of contents of a page, site map, ...)"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: landmark roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark"
          },
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Headings: The H2 elements",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H2"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Adjust the heading structure within the landmark so that the first heading is an @h2@ element.",
           "FAIL_P": "Adjust the heading structures of the %N_F landmarks with headings so that the first heading of each is an @h2@ element.",
           "HIDDEN_S": "One @h2@ element that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H @h2@ elements that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No headings in landmarks, or no landmarks on the page."    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @h2@ element is the first heading in the landmark.",
           "ELEMENT_FAIL_1": "Adjust the headings in the %1 landmark to ensure that the first heading is an @h2@ element instead of an @%2@.",
           "ELEMENT_HIDDEN_1": "The @h2@ element was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "HTML_1",
        "scope" : 1,
        "wcag_primary" : "4.1.1",
        "wcag_related" : [],
        "last_updated" : "2013-11-13",
        "target_resources" : ["b","i"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "dom_cache",
        "resource_properties" : ["tag_name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT    = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY     = OpenAjax.a11y.VISIBILITY;\n    \n    var dom_elements     = dom_cache.element_cache.dom_elements;\n    var dom_elements_len = dom_elements.length;\n\n    for (var i = 0; i < dom_elements_len; i++) {\n      var de = dom_elements[i];\n\n      if (de.tag_name === 'b') {\n        if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE ) {      \n           rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.tag_name, de.lang]);    \n        }   \n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.tag_name, de.lang]);\n        }\n      }\n      else {\n        if (de.tag_name === 'i') {\n          if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE ) {      \n             rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_2', [de.tag_name, de.lang]);    \n          }   \n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_2', [de.tag_name, de.lang]);\n          }\n        }  \n      }  \n    } \n    \n  }",
        "nls_rule_id" : "HTML Rule 1",
        "definition" : "@strong@, @em@ or @h1-h6@ heading elements %s be used instead of @b@ and @i@ elements.",
        "summary" : "Replace @b@ and @i@ elements",
        "target_resource_desc" : "@b@ and @i@ elements",
        "purpose" : [
           "In line formatting use, the @b@ and @i@ elements do not convery the semantics of the text content.",
          "The @b@ and @i@ elements are often misused for emphasizing words in a sentence, or to change the styling of content being used as a section header in the page."
        ],
        "techniques" : [
           "If a @b@ element is being used in a sentence for emphasizing a word or phrase, replace it with the @strong@ element.",
           "If a @b@ element is being used to style a section heading, replace it with an @h1-h6@ heading element, depending on the level of heading needed in accordance with the structure of the page.",
           "If a @i@ element is being used in a sentence for emphasizing a word or phrase, replace it with the @em@ element.",
          "If a @i@ element is being used styling a section heading, replace it with an @h1-h6@ heading element, depending on the level of heading needed in accordance with the structure of the page."
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Headings: The em and strong elements",
            "url"   : "http://www.w3.org/TR/html4/struct/text.html#edef-EM"
          },
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: Headings: The H1-H6 elements",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-H2"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the @b@ or @i@ element to a @strong@, @em@ or @h1-h6@ element.",
           "FAIL_P": "Change the @b@ or @i@ elements to @strong@, @em@ or @h1-h6@ elements.",
           "HIDDEN_S": "If the hidden @b@ or @i@ element becomes visible, it should be changed to a @strong@, @em@ or @h1-h6@ element.",
           "HIDDEN_P": "If any of the %N_H hidden @b@ or @i@ elements become visible, they should be changed to @strong@, @em@ or @h1-h6@ elements.",
           "NOT_APPLICABLE": "No @b@ or @i@ elements found on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_FAIL_1": "Change the @b@ element to a @strong@ element or to a heading element (i.e. @h1-h6@) depending on its purpose in the page.",
           "ELEMENT_HIDDEN_1": "@b@ element is hidden, but should be changed to a @strong@ element or to a heading element (i.e. @h1-h6@) depending on its purpose in the page, in case it becomes visible.",
           "ELEMENT_FAIL_2": "Change the @i@ element to an @em@ element or to a heading element (i.e. @h1-h6@) depending on its purpose in the page.",
           "ELEMENT_HIDDEN_2": "@i@ element is hidden, but should be changed to an @em@ element or to a heading element (i.e. @h1-h6@) depending on its purpose in the page, in case it becomes visible."    
        }
      },
      {
        "rule_id" : "HTML_2",
        "scope" : 1,
        "wcag_primary" : "2.3.1",
        "wcag_related" : ["2.2.2","4.1.1"],
        "last_updated" : "2013-11-13",
        "target_resources" : ["blink"],
        "rule_category" : 256,
        "language_dependency" : "",
        "cache_dependency" : "dom_cache",
        "resource_properties" : ["tag_name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT    = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY     = OpenAjax.a11y.VISIBILITY;\n    \n    var dom_elements     = dom_cache.element_cache.dom_elements;\n    var dom_elements_len = dom_elements.length;\n\n    for (var i = 0; i < dom_elements_len; i++) {\n      var de = dom_elements[i];\n\n      if (de.tag_name === 'marquee') {\n        if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE ) {      \n           rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.tag_name, de.lang]);    \n        }   \n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.tag_name, de.lang]);\n        }\n      }\n    } \n    \n  }",
        "nls_rule_id" : "HTML Rule 2",
        "definition" : "@marquee@ elements %s be removed to improve readability of content.",
        "summary" : "Replace @marquee@ elements",
        "target_resource_desc" : "@marquee@ element",
        "purpose" : [
          "Automatically moving text cannot be read by many people with visual impairments and people with learning disabilities that affect reading."
        ],
        "techniques" : [
           "Replace the @marquee@ element with a standard element and use CSS techniques to style the content.",
           "By default when the page loads the marquee should be paused.",
           "Use Javascript to provide buttons to start and stop the scrolling of content in the marquee.",
          "Provide means to see all of the content in the marquee at one time."
        ],
        "manual_checks" : [
           "Verify when the page loads the content is not scrolling",
          "Verify the start and pause buttons start and stop the scrolling of content"
        ],
        "informational_links" : [
        ],
        "rule_result_messages" : {
           "FAIL_S": "Replace the @marquee@ element with a standard html element and use CSS techniques to style the content and using Javascript provide controls to stop and start the scrolling.",
           "FAIL_P": "Replace the %N_F @marquee@ elements with a standard html element and use CSS techniques to style the content and using Javascript provide controls to stop and start the scrolling.",
           "HIDDEN_S": "If the hidden @marquee@ element becomes visible, it must be changed to a standard html element  and use CSS techniques to style the content and using Javascript provide controls to stop and start the scrolling.",
           "HIDDEN_P": "If any of the %N_H hidden @marquee@ elements become visible, they must be changed to a standard html elements and use CSS techniques to style the content and using Javascript provide controls to stop and start the scrolling.",
           "NOT_APPLICABLE": "No @marquee@ elements found on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_FAIL_1": "Change the @marquee@ element a standard html element and use CSS techniques to style the content and using Javascript provide controls to stop and start the scrolling.",
           "ELEMENT_HIDDEN_1": "@marquee@ element is hidden, but should be changed to a standard html element and use CSS techniques to style the content and using Javascript provide controls to stop and start the scrolling, in case it becomes visible."    
        }
      },
      {
        "rule_id" : "KEYBOARD_1",
        "scope" : 1,
        "wcag_primary" : "2.1.1",
        "wcag_related" : ["4.1.2"],
        "last_updated" : "2012-12-04",
        "target_resources" : ["widgets"],
        "rule_category" : 16,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["role","tab_index","is_owned","has_key_down","has_key_press","has_key_up","ancestor_has_key_down","ancestor_has_key_press","ancestor_has_key_up"],
        "validate" : "function (dom_cache, rule_result) {\n  \n     function checkForKeyboardOwner(we) {\n\n       if (we.is_owned && (we.owner_controls.length === 1)) {\n       \n         var owner = we.owner_controls[0];\n         var de = owner.dom_element;\n         \n         if (de.has_aria_activedescendant) {\n           var has_keyboard_support = de.events.has_key_down;\n           has_keyboard_support = has_keyboard_support || de.events.has_key_press;\n           has_keyboard_support = has_keyboard_support || de.events.has_key_up;\n           return has_keyboard_support;\n         }\n       }\n     \n       return false;\n     }\n  \n     function checkForKeyboardOnRequiredChildren(widget) {\n\n       function checkChildren(children) {\n       \n         if (typeof children !== 'object' || !children.length) return false;\n       \n         var flag = false;\n         var children_len = children.length;\n         \n         for (var i = 0; (i < children_len) && !flag; i++) {\n         \n           var we = children[i];\n           var de = we.dom_element;\n\n//           OpenAjax.a11y.logger.debug('  KEYBOARD RULE 1 CHID: ' + de.role + ' ('+ we.toString() + ')');\n\n           flag = de.events.has_key_down || de.events.has_key_press || de.events.has_key_up;\n\n           if (!flag && de.role_info && de.role_info.reqChildren && de.role_info.reqChildren.length) { \n             flag = checkChildren(we.child_cache_elements); \n           }\n         }\n         return flag;\n       }\n\n       return checkChildren(widget.child_cache_elements);\n       \n     }  \n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widget_elements     = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len = widget_elements.length;\n     \n     if (widget_elements && widget_elements) {\n     \n       for (var i = 0; i < widget_elements_len; i++) {\n         var we = widget_elements[i];\n         var de = we.dom_element;\n         var style = de.computed_style;\n\n//         OpenAjax.a11y.logger.debug('  KEYBOARD RULE 1: ' + de.role + ' ('+ we.toString() + ')');\n\n         if (de.role_info.roleType === 'widget') {\n\n           if (style.is_visible_to_at === VISIBILITY.VISIBLE) {\n           \n             var has_keyboard_support = de.events.has_key_down;\n             has_keyboard_support = has_keyboard_support || de.events.has_key_press;\n             has_keyboard_support = has_keyboard_support || de.events.has_key_up;\n             \n             if (de.role_info.supportOnClick) {\n               has_keyboard_support = has_keyboard_support || de.events.has_click;\n               has_keyboard_support = has_keyboard_support || de.events.has_double_click;\n             }  \n\n             if (has_keyboard_support) {\n               rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_1', [we]);     \n             }\n             else {\n      \n               has_keyboard_support = de.events.ancestor_has_key_down;\n               has_keyboard_support = has_keyboard_support || de.events.ancestor_has_key_press;\n               has_keyboard_support = has_keyboard_support || de.events.ancestor_has_key_up;\n               \n               if (de.role_info.supportOnClick) {\n                 has_keyboard_support = has_keyboard_support || de.events.ancestor_has_click;\n                 has_keyboard_support = has_keyboard_support || de.events.ancestor_has_double_click;\n               }  \n               \n               if (has_keyboard_support) { \n                 rule_result.addResult(TEST_RESULT.MANUAL_CHECK, we, 'ELEMENT_MC_1', [de.role]);\n               }  \n               else {\n                 \n                 if (checkForKeyboardOwner(we)) {\n                   rule_result.addResult(TEST_RESULT.MANUAL_CHECK, we, 'ELEMENT_MC_2', [de.role, we.owner_controls[0].toString()]);\n                 }\n                 else {\n                   if (checkForKeyboardOnRequiredChildren(we)) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, we, 'ELEMENT_MC_3', [de.role]);\n                   else rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_1', [de.role]);\n                 }\n               }  \n             }             \n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, we, 'ELEMENT_HIDDEN_1', [we.toString()]);     \n           }\n         }  \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Keyboard Rule 1",
        "definition" : "Widget elements %s have keyboard event handlers",
        "summary" : "Widgets %s support keyboard",
        "target_resource_desc" : "Widget elements",
        "purpose" : [
          "Keyboard support is required by people who cannot use the mouse to interact with a widget"
        ],
        "techniques" : [
          "Use the @keyup@, @keydown@ and @keypress@ events to support keyboard interaction with widgets"
        ],
        "manual_checks" : [
           "Try using the web application with only the keyboard, and verify that all functionalities can be performed with the keyboard alone",
          "For widgets check the keyboard behavior with the recommendations in the ARIA Authoring Practices guide to make sure that keyboard operation is predictable to the user"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the widget element has keyboard event handlers through is parent elements, owner widget (i.e. aria-activedescendant) or required child widgets",
           "MANUAL_CHECK_P": "Verify the %N_MC out %N_T widgets have keyboard event handlers through is parent elements, owner widget (i.e. aria-activedescendant) or required child widgets",
           "FAIL_S": "Add event handlers to the widget to support keyboard operation of the widget",
           "FAIL_P": "Add event handlers to the %N_F out of %N_T widgets to support keyboard operation of each widget",
           "NOT_APPLICABLE": "No widgets on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ widget has keyboard support through event handlers on the widget element",
           "ELEMENT_MC_1": "Verify the @%1@ widget has keyboard support through keyboard event handlers on a parent widget element",
           "ELEMENT_MC_2": "Verify the @%1@ widget has keyboard support through keyboard event handlers through @aria-activedescendant@ support on its @%2@ owner widget",
           "ELEMENT_MC_3": "Verify the @%1@ widget has keyboard support through keyboard event handlers on a required child widgets",
           "ELEMENT_FAIL_1": "Add keyboard event handlers to the @%1@ widget to support keyboard interaction with the widget",
           "ELEMENT_HIDDEN_1": "Widgets must support keyboard interaction was not tested because @%1@ widget is hidden from assistive technologies"    
        }
      },
      {
        "rule_id" : "KEYBOARD_2",
        "scope" : 1,
        "wcag_primary" : "2.1.1",
        "wcag_related" : ["4.1.2"],
        "last_updated" : "2012-12-04",
        "target_resources" : ["widgets"],
        "rule_category" : 16,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["role","tab_index","aria_activedescendant","ancestor_has_aria_activedescendant"],
        "validate" : "function (dom_cache, rule_result) {\n\n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widget_elements     = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len = widget_elements.length;\n     \n     if (widget_elements && widget_elements) {\n     \n       for (var i = 0; i < widget_elements_len; i++) {\n         var we = widget_elements[i];\n         var de = we.dom_element;\n         var style = de.computed_style;\n\n//         OpenAjax.a11y.logger.debug('  KEYBOARD RULE 2: ' + de.role + ' ('+ we.toString() + ')');\n\n         if (de.role_info.roleType === 'widget') {\n\n           if (style.is_visible_to_at === VISIBILITY.VISIBLE) {\n\n             if (de.is_interactive_element) {\n               rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_1', [de.role, de.tag_name]);     \n             }\n             else {\n               if (!isNaN(de.tab_index)) { \n                 rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_2', [we]);     \n               }  \n               else {\n                 if (de.ancestor_has_aria_activedescendant) {\n                   if (de.id_unique === OpenAjax.a11y.ID.UNIQUE ) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, we, 'ELEMENT_MC_1', [de.tag_name, de.id]);\n                   else rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_1', [de.tag_name]);               \n                 }\n                 else { \n                   rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_2', [de.tag_name]);               \n                 }\n               }  \n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, we, 'ELEMENT_HIDDEN_1', [we.role]);     \n           }\n         }  \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Keyboard Rule 2",
        "definition" : "Widget elements %s use tabindex to add keyboard focus support on non-interactive elements",
        "summary" : "Tabindex for focus",
        "target_resource_desc" : "Widget elements",
        "purpose" : [
          "Keyboard support is required by people who cannot use the mouse to interact with a widget"
        ],
        "techniques" : [
           "The @tabindex@ enables non-interactive elements (i.e. @div@, @li@, @span@ ...) to receive and process focus ",
          "The @tabindex@ enables non-interactive elements (i.e. @div@, @li@, @span@ ...) to receive and process focus "
        ],
        "manual_checks" : [
          "Using only the keyboard verify all features of a widget can be identified by assistive technology by changing the keyboard focus"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add @tabindex@ value to the widget or add @aria-activedescendant@ support to an ancestor widget to provide keyboard focus support to the widget",
           "FAIL_P": "Add @tabindex@ value to the widget or add @aria-activedescendant@ support to an ancestor widget to provide keyboard focus support to the %N_F out of %N_T widgets",
           "MANUAL_CHECK_S": "Verify that the @aria-activedescendant@ provides keyboard focus support to the widget that is a child of a widget with an @aria-activedescendent@ property",
           "MANUAL_CHECK_P": "Verify that the @aria-activedescendant@ provides keyboard focus support to the %N_MC out of %N_T widgets that are children of a widget with an @aria-activedescendent@ property",
           "NOT_APPLICABLE": "No widgets on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ widget is on a @%2@ element that can receive keyboard focus",
           "ELEMENT_PASS_2": "@%1@ widget has a @tabindex@ value that supports receiving keyboard focus",
           "ELEMENT_MC_1": "@%1@ widget is the child of a widget that has an @aria-activedescendant@ attribute, verify the @aria-activedescendant@ supports references to the @id=%2@ of this widget",
           "ELEMENT_MC_2": "Verify the child widgets of the @%1@ element with an onClick event of accurately represent the interactive features of this section of the web page",
           "ELEMENT_FAIL_1": "Add @tabindex@ value to the widget or add @aria-activedescendant@ support to an ancestor widget to provide keyboard focus support",
           "ELEMENT_HIDDEN_1": "@tabindex@ to support focus events was not tested becayse @%1@ widget is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "KEYBOARD_3",
        "scope" : 2,
        "wcag_primary" : "2.1.1",
        "wcag_related" : ["2.1.2","2.4.3","2.4.7","3.2.1"],
        "last_updated" : "2013-07-03",
        "target_resources" : ["Page","applet","object","widgets"],
        "rule_category" : 16,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["tabindex"],
        "validate" : "function (dom_cache, rule_result) {\n  \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var page_element = dom_cache.keyboard_focus_cache.page_element;  \n\n//     OpenAjax.a11y.logger.debug(' Page Element: ' + page_element + '  ' + page_element.dom_element);\n\n     var widget_elements      = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len  = widget_elements.length;\n     \n     var object_elements      = dom_cache.media_cache.object_elements;\n     var object_elements_len  = object_elements.length;\n\n     var widget_count = 0;\n\n     for (var i = 0; i < widget_elements_len; i++) {\n     \n       var ie = widget_elements[i];\n       \n       var de = ie.dom_element;\n       if (!de) de =ie;\n       \n       var cs = de.computed_style;\n       \n       if ((cs.is_visible_to_at    === VISIBILITY.VISIBLE) ||\n           (cs.is_visible_onscreen === VISIBILITY.VISIBLE)) {\n           \n         widget_count++;\n         \n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ie, 'ELEMENT_MC_1', [de.tag_name, de.role]);\n         \n       }     \n       else {\n         rule_result.addResult(TEST_RESULT.HIDDEN, ie, 'ELEMENT_HIDDEN_2', [de.tag_name]);                \n       }\n     }  // endfor\n     \n     var object_count = 0;\n\n     for (i = 0; i < object_elements_len; i++) {\n     \n       var oe = object_elements[i];\n       \n       de = oe.dom_element;\n       if (!de) de =ie;\n       \n       cs = de.computed_style;\n       \n       if ((cs.is_visible_to_at    === VISIBILITY.VISIBLE) ||\n           (cs.is_visible_onscreen === VISIBILITY.VISIBLE)) {\n           \n         object_count++;\n         \n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_2', [oe.tag_name]);\n         \n       }     \n       else {\n         rule_result.addResult(TEST_RESULT.HIDDEN, oe, 'ELEMENT_HIDDEN_2', [oe.tag_name]);                \n       }\n     }  // endfor\n\n //    OpenAjax.a11y.logger.debug(' Visible count: ' + visible_count + '  Tab count: ' + tab_count);\n \n     if ((widget_count > 1) | (object_count > 1)) { \n \n       if (object_count === 0) {\n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_1', [widget_count]);\n       }\n       else {\n         if (widget_count === 0) {\n           rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_2', [object_count]);\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_3', [widget_count, object_count]);\n         }\n       }  \n     }\n\n\n   }",
        "nls_rule_id" : "Keyboard Rule 3",
        "definition" : "All functionality %s be operable through the keyboard alone",
        "summary" : "Keyboard operation",
        "target_resource_desc" : "Widgets, @object@ and @applet@ elements must support keyboard operation",
        "purpose" : [
           "Many people cannot use the mouse, either because they cannot see the pointer or to not have fine motor skills to accurately position the mouse",
           "This requirement does not mean not to support the mouses, but just to make sure their is an equivalent way using the keyboard for all tasks that can be done with the mouse",
           "Using efficient and plateform conventions for keyboard support will make it it easier for all users to benefit from the keyboard support, since the keys will be eaiser to discover and familair to users",
          "Touch typists often prefer keyboard commands than the mouse for performing operations, making them much more efficient"
        ],
        "techniques" : [
           "Use the WAI-ARIA 1.0 Authoring Practices to determine the keyboard support for widgets",
          "Use keyboard event handers to implement keyboard support"
        ],
        "manual_checks" : [
           "Make a list of the functional feature of a web site.  NOTE: if a page only has simple links and form controls then keyboard support is built-in through browser support",
          "Using only the keyboard excercise all the functionalities of the web page"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "WAI-ARIA 1.0 Authoring Practices",
            "url"   : "http://www.w3.org/WAI/PF/aria-practices/"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Check the widget or embedded application to make sure all functionalities are available through the keyboard",
           "MANUAL_CHECK_P": "Check the %N_PG widgets and/or embedded applications to make sure all functionalities are available through the keyboard",
           "NOT_APPLICABLE": "No @object@, @applet@ or widget elements on the page"    
        },
        "node_result_messages" : {
           "PAGE_MC_1": "Check the %1 widgets on the page for keyboard support for all functionalities",
           "PAGE_MC_2": "Check the %1 objects on the page for keyboard support for all functionalities",
           "PAGE_MC_3": "Check the %1 widgets and %3 @object@s on the page for keyboard support for all functionalities",
           "ELEMENT_MC_1": "The @%1@ element with @role='%2'@ is part of the manual check for keyboard support for all functionalities",
           "ELEMENT_MC_2": "The @%1@ element is part of the manual check for keyboard support for all functionalities",
           "ELEMENT_HIDDEN_1": "The @%1@ element with @role='%2'@ is hidden and therefore NOT a part of the manual check for keyboard support for all functionalities",
           "ELEMENT_HIDDEN_2": "The @%1@ element is hidden, and therefore NOT a part of the manual check for keyboard support for all functionalities"    
        }
      },
      {
        "rule_id" : "KEYBOARD_4",
        "scope" : 1,
        "wcag_primary" : "2.1.2",
        "wcag_related" : ["2.1.1","2.4.3","2.4.7","3.2.1"],
        "last_updated" : "2013-07-03",
        "target_resources" : ["object","applet"],
        "rule_category" : 16,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["tabindex"],
        "validate" : "function (dom_cache, rule_result) {\n  \n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n//     OpenAjax.a11y.logger.debug(' Page Element: ' + page_element + '  ' + page_element.dom_element);\n\n     var object_elements      = dom_cache.media_cache.object_elements;\n     var object_elements_len  = object_elements.length;\n\n\n     for (var i = 0; i < object_elements_len; i++) {\n     \n       var oe = object_elements[i];\n       \n       var de = oe.dom_element;\n       if (!de) de =ie;\n       \n       var cs = de.computed_style;\n       \n       if ((cs.is_visible_to_at    === VISIBILITY.VISIBLE) ||\n           (cs.is_visible_onscreen === VISIBILITY.VISIBLE)) {\n           \n         rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_1', [oe.tag_name]);\n         \n       }     \n       else {\n         rule_result.addResult(TEST_RESULT.HIDDEN, oe, 'ELEMENT_HIDDEN_1', [oe.tag_name]);                \n       }\n     }  // endfor\n\n   }",
        "nls_rule_id" : "Keyboard Rule 4",
        "definition" : "@object@ and @applet@ elements %s not trap the keyboard",
        "summary" : "No keyboard trap",
        "target_resource_desc" : "@object@ and @applet@ elements",
        "purpose" : [
          "If an embedded application (i.e. @object@ or @applet@ element) traps the keyboard, keyboard users will not be able to use the web page"
        ],
        "techniques" : [
           "Use @tabindex='-1'@ on the element to remove it from 'tab' order of the page",
          "If the embedded application does support accessibility, use a button to move focus to the application"
        ],
        "manual_checks" : [
          "Move keyboard focus to the embedded application and see if you can move focus back to the web content using just the keyboard"
        ],
        "informational_links" : [
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Check the embedded application to make sure the application does not trap the keyboard",
           "MANUAL_CHECK_P": "Check the %N_MC embedded applications to make sure application does not trap the keyboard",
           "NOT_APPLICABLE": "No @applet@ and @object@ elements on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Check the %1 element to see if it traps the keyboard",
           "ELEMENT_HIDDEN_1": "%1 element is hidden, so it cannot trap the keyboard"    
        }
      },
      {
        "rule_id" : "LANDMARK_1",
        "scope" : 2,
        "wcag_primary" : "2.4.1",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["Page","[role='main']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","role","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var main_elements     = dom_cache.headings_landmarks_cache.main_elements;\n    var main_elements_len = main_elements.length;\n\n    var main_count = 0;\n\n    for (var i = 0; i < main_elements_len; i++ ) {\n      var me = main_elements[i];\n      if (me.dom_element.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n        rule_result.addResult(TEST_RESULT.HIDDEN, me, 'ELEMENT_HIDDEN_1', []);                      \n      }\n      else {\n        rule_result.addResult(TEST_RESULT.MANUAL_CHECK, me, 'ELEMENT_MC_1', []);                      \n        main_count++;\n      }  \n    }\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    if (page_element) {\n      // Test if no h1s\n      if (main_count === 0) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_1', []);\n      else if (main_count === 1) rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_1', []);\n      else rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_2', [main_count]);\n    } \n    \n  }",
        "nls_rule_id" : "Landmark Rule 1",
        "definition" : "Each page %s have at least one @main@ landmark that identifies the main content.",
        "summary" : "Page %s have @main@ landmark",
        "target_resource_desc" : "@main@ landmark",
        "purpose" : [
           "@main@ landmarks provide a navigation point for users of assistive technologies to the main content of the page",
          "Most pages only need one @main@ landmark, but in the case of portals or mashups, there may be more than one @main@ landmark on a 'page'"
        ],
        "techniques" : [
           "Include an @role='main'@ attribute on the element that contains the main content",
          "Use the aria-labelledby or aria-label to describe the content of the main landmark"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: main role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#main"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add a @main@ landmark to the page",
           "FAIL_P": "Add a @main@ landmark to the page",
           "MANUAL_CHECK_S": "Verify the main landmark identifies the main content of the page",
           "MANUAL_CHECK_P": "Verify the %N_MC main landmarks identify the main content areas of the page"    
        },
        "node_result_messages" : {
           "PAGE_PASS_1": "Page has one @main@ landmark",
           "PAGE_PASS_2": "Page has %1 @main@ landmarks",
           "PAGE_FAIL_1": "Add a @main@ landmark to the page, the @main@ landmark must identify the main content of the page",
           "ELEMENT_MC_1": "Verify the @main@ landmark identifies the main content of the page",
           "ELEMENT_HIDDEN_1": "@main@ landmark is hidden from assistive technologies and does not contribute to satisfying the @main@ landmark rule"    
        }
      },
      {
        "rule_id" : "LANDMARK_2",
        "scope" : 2,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.1","2.4.6","2.4.10"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["Page","all"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","parent_landmark"],
        "validate" : "function (dom_cache, rule_result) {\n  \n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var elements_with_content    = dom_cache.headings_landmarks_cache.elements_with_content;\n    var elements_with_content_len = elements_with_content.length;\n    \n    var pass_count   = 0;\n    var fail_count   = 0;\n    var mc_count     = 0;\n    \n    var tag_name = '';\n\n    for (var i = 0; i < elements_with_content_len; i++ ) {\n      var de =elements_with_content[i];\n      \n      if (de.tag_name) tag_name = de.tag_name;\n      else tag_name = de.parent_element.tag_name;\n\n//      OpenAjax.a11y.logger.debug('  Content: ' + de.toString()  +  ' ' + de.may_have_renderable_content);\n      \n      if (de.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n        rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [tag_name]);                      \n      }\n      else {\n        if (de.parent_landmark) {\n          rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [tag_name, de.parent_landmark.role]);\n          pass_count++;\n        }\n        else {\n          if (de.may_have_renderable_content) {\n            rule_result.addResult(TEST_RESULT.MANUAL_CHECK, de, 'ELEMENT_MC_1', [tag_name]);\n            mc_count++;\n          }  \n          else {\n            rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [tag_name]);\n            fail_count++;\n          }  \n        }  \n      }  \n    }        \n    \n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    if (page_element) {\n      // Test if no h1s\n      if (fail_count) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_1', [fail_count]);\n      else if (mc_count) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_1', [mc_count]);\n      else if (pass_count) rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_1', [pass_count]);\n    } \n    \n  }",
        "nls_rule_id" : "Landmark Rule 2",
        "definition" : "All rendered content %s be placed inside of container elements with ARIA landmark roles.",
        "summary" : "Page structure %s be defined by landmarks",
        "target_resource_desc" : "all rendered content",
        "purpose" : [
          "Landmarks provide a way to organize content of a page to users of assistive technology, similar to visual and interaction designers organize information for people using a graphical rendering of the content."
        ],
        "techniques" : [
           "Use the appropriate landmarks to identify the different sections of a web page",
          "The most important landmarks are the @main@ and @navigation@ landmarks since they will be the most used"
        ],
        "manual_checks" : [
          "@object@, @embed@ and @applet@ tags may be used to render content, use inspection tools to identify if any of these elements actually render content on the page."
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Landmark Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark_roles"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Update the landmark structure of the page by placing the one element not contained in a landmark into a container element with proper landmark role.",
           "FAIL_P": "Update the landmark structure of the page by placing the %N_F elements not contained in landmarks into container elements with proper landmark roles.",
           "MANUAL_CHECK_S": "One element may contain renderable content.  If so, move it into a container element with proper landmark role.",
           "MANUAL_CHECK_P": "%N_MC elements may contain renderable content.  If so, move them into container elements with proper landmark roles.",
           "HIDDEN_S": "One hidden element with renderable content was found.  If it could become visible make sure it is in a container element with proper landmark role.",
           "HIDDEN_P": "%N_H hidden elements with renderable content were found.  If any could become visible make sure they are in container elements with proper landmark roles.",
           "NOT_APPLICABLE": "No renderable content found on this page."    
        },
        "node_result_messages" : {
           "PAGE_PASS_1": "All %1 elements with content are contained in landmarks",
           "PAGE_MC_1": "%1 element(s) may contain renderable content, if so move it into an appropriate landmark",
           "PAGE_FAIL_1": "Move %1 element(s) into an appropriate landmark(s), this may require creating landmarks",
           "ELEMENT_PASS_1": "@%1@ element is contained in @%2@ landmark",
           "ELEMENT_MC_1": "@%1@ element may contain renderable content, if so move it into an appropriate landmark",
           "ELEMENT_FAIL_1": "Move @%1@ element into an appropriate landmark, this may require creating landmarks",
           "ELEMENT_HIDDEN_1": "The @%1@ element is hidden, a therefore not tested"    
        }
      },
      {
        "rule_id" : "LANDMARK_3",
        "scope" : 3,
        "wcag_primary" : "2.4.1",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["Website","[role='navigation']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","role","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var navigation_count = 0;\n    \n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var cs = le.dom_element.computed_style;\n      \n      var tag_name = le.dom_element.tag_name;\n      \n      if (le.role === 'navigation') {\n          navigation_count++;\n        if (cs.is_visible_to_at === VISIBILITY.VISIBLE) rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_1', [tag_name]);\n        else  rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [tag_name]);\n      }  \n    }\n\n    if (page_element) {\n      // Test if no navigation landmarks\n      if (navigation_count === 0) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'WEBSITE_FAIL_1', []);\n      else if (navigation_count === 1) rule_result.addResult(TEST_RESULT.PASS, page_element, 'WEBSITE_PASS_1', []);\n      else rule_result.addResult(TEST_RESULT.PASS, page_element, 'WEBSITE_PASS_2', [navigation_count]);\n    } \n    \n  }",
        "nls_rule_id" : "Landmark Rule 3",
        "definition" : "Each page in a website %s have at least one @navigation@ landmark.",
        "summary" : "Page %s have @navigation@ landmark",
        "target_resource_desc" : "@navigation@ landmark",
        "purpose" : [
           "Navigation landmarks provide a way to identify groups of links with in a web page",
           "Navigation landmarks should be used for identifying links used for website navigation",
          "Navigation landmarks should be used for identifying links used for page content navigation"
        ],
        "techniques" : [
           "Website and page navigation links should be top level @navigation@ landmarks (e.g. not contained in other landmarks)",
           "Include an @role='navigation'@ attribute on a element that is a container for @ol@ and @ul@ elements that contain li elements with links",
          "Use the aria-labelledby or aria-label to describe the purpose of the links (i.e. table on contents of a page, site map...)"
        ],
        "manual_checks" : [
          "List of links that are used for navigation with or between pages in your website should use @navigation@ landmarks"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: navigation role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#navigation"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add one or more @navigation@ landmarks that identify groups of links that support website navigation.",
           "FAIL_P": "Add one or more @navigation@ landmarks that identify groups of links that support website navigation.",
           "HIDDEN_S": "The @navigation@ landmark that is hidden was not evaluated",
           "HIDDEN_P": "%N_H @navigation@ landmarks are hidden and were not evaluated"    
        },
        "node_result_messages" : {
           "WEBSITE_PASS_1": "The page contains one @navigation@ landmark",
           "WEBSITE_PASS_2": "The page contains %1 @navigation@ landmarks",
           "WEBSITE_FAIL_1": "Add at least one @navigation@ landmark to the page, the navigation landmark must identify the links used for website navigation",
           "ELEMENT_PASS_1": "@%1@ element has @role=navigation@",
           "ELEMENT_HIDDEN_1": "@%1@ element with @role=navigation@ is hidden from assistive technologies and does not contribute to website navigation"    
        }
      },
      {
        "rule_id" : "LANDMARK_4",
        "scope" : 3,
        "wcag_primary" : "2.4.1",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["Website","[role='banner']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","role","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var landmark_count = 0;\n    var les = [];\n    \n    var LANDMARK_ROLE = 'banner';\n\n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var tag_name = le.dom_element.tag_name;\n      \n      if (le.role === LANDMARK_ROLE) {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n          rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [tag_name]);                  \n        }\n        else {\n          if (!le.body_element) {\n            landmark_count++;\n            les.push(le);\n          }  \n        }  \n      }  \n    }\n\n    if (page_element) {\n      // Test if no banner landmarks\n      if (landmark_count === 0) {\n        rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_1', []);\n      } \n      else {\n        if (landmark_count === 1) {\n          rule_result.addResult(TEST_RESULT.PASS, page_element, 'WEBSITE_PASS_1', []);\n          rule_result.addResult(TEST_RESULT.PASS, les[0], 'WEBSITE_PASS_2', [tag_name]);\n        }\n        else {    \n          rule_result.addResult(TEST_RESULT.PASS, page_element, 'WEBSITE_PASS_3', [landmark_count]);\n          for (i = 0; i < les.length; i++) {\n            le = les[i];\n            rule_result.addResult(TEST_RESULT.PASS, le, 'WEBSITE_PASS_2', [tag_name]);\n          }  \n        }  \n      }  \n    } \n    \n  }",
        "nls_rule_id" : "Landmark Rule 4",
        "definition" : "Website branding content (e.g. typically at the top of a web page) %s use @banner@ landmark.",
        "summary" : "Use @banner@ landmark",
        "target_resource_desc" : "@banner@ landmark",
        "purpose" : [
           "A @banner@ landmark provide a way to identify branding content usually at the top of each web page",
          "Branding content usually appears consistently on most pages of a website."
        ],
        "techniques" : [
           "Include an @role='banner'@ attribute on a element that contains the branding content at the top of a page",
           "Pages at most need one @banner@ landmark",
           "A @banner@ landmark should be a top level landmark (e.g. not a child of another landmark on the page).",
           "A @banner@ landmark at most should only contain @navigation@ and @region@ landmarks.",
           "In websites that support mashups using @iframe@ or @frame@ elements, a @banner@ landmark is allowed in each frame",
          "If the page is part of a website supporting mashups, use the @aria-labelledby@ or @aria-label@ to differentiate @banner@ landmarks in each frame"
        ],
        "manual_checks" : [
          "Banners are a convention used on most web sites to identifying branding and often used as a location for advertising information"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: banner role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#banner"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "If there is a branding content at the top of the page, use the @banner@ landmark to identify its content.",
           "MANUAL_CHECK_P": "If there is a branding content at the top of the page, use the @banner@ landmark to identify its content.",
           "HIDDEN_S": "The @banner@ landmark that is hidden does not contribute to the accessibility or inaccessibility of the page.",
           "HIDDEN_P": "%N_H@ banner@ landmarks that are hidden do not contribute to the accessibility or inaccessibility of the page"    
        },
        "node_result_messages" : {
           "WEBSITE_PASS_1": "Page has @banner@ landmark",
           "WEBSITE_PASS_2": "@%1@ element has @role='banner'@",
           "WEBSITE_PASS_3": "Page has %1 @banner@ landmarks",
           "WEBSITE_MC_1": "If the page does have a branding banner, use @role='banner'@ on its container element",
           "ELEMENT_HIDDEN_1": "@banner@ landmark was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LANDMARK_5",
        "scope" : 2,
        "wcag_primary" : "2.4.1",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["Website","[role='banner']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","role","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var landmark_count = 0;\n    var les = [];\n    \n    var LANDMARK_ROLE = 'banner';\n\n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var tag_name = le.dom_element.tag_name;\n      \n      if (le.role === LANDMARK_ROLE) {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n          rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [tag_name]);                  \n        }\n        else {\n          if (!le.body_element) {\n            landmark_count++;\n            les.push(le);\n          }  \n        }  \n      }  \n    }\n\n    if (page_element) {\n      // Test if more than banner landmarks\n      if (landmark_count > 1) {\n        rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_1', [landmark_count]);\n        for (i = 0; i < les.length; i++) {\n          le = les[i];\n          rule_result.addResult(TEST_RESULT.FAIL, le, 'PAGE_FAIL_2', [tag_name]);\n        }  \n      }  \n    } \n    \n  }",
        "nls_rule_id" : "Landmark Rule 5",
        "definition" : "Each page %s contain no more than one @banner@ landmark.",
        "summary" : "No more than one @banner@ landmark",
        "target_resource_desc" : "One @banner@ landmark",
        "purpose" : [
          "Banner landmarks provide a way to identify redundent branding content usually at the top of each web page that is part of a website"
        ],
        "techniques" : [
           "Include an @role='banner'@ attribute on a element that contains the branding content at the top of a page",
           "Pages at most need one @banner@ landmark",
           "In websites that support mashups using @iframe@ or @frame@ elements, a @banner@ landmark is allowed in each frame",
          "If the page is part of a website supporting mashups, use the @aria-labelledby@ or @aria-label@ to differentiate @banner@ landmarks in each frame"
        ],
        "manual_checks" : [
          "Banners are a convention used on most web sites to identifying branding and often used as a location for advertising information"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: banner role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#banner"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "More than one @banner@ landmark found on the page. Only one @banner@ landmark is allowed per page or iframe.",
           "FAIL_P": "More than one @banner@ landmark found on the page. Only one @banner@ landmark is allowed per page or iframe.",
           "HIDDEN_S": "The @banner@ landmark that is hidden does not contribute to the accessibility or inaccessibility of the page.",
           "HIDDEN_P": "%N_H@ banner@ landmarks that are hidden do not contribute to the accessibility or inaccessibility of the page"    
        },
        "node_result_messages" : {
           "PAGE_FAIL_1": "The page contains %1 @banner@ landmarks,  modify the page to have only one container element with a @banner@ landmark to idenfity the banner content",
           "PAGE_FAIL_2": "@%1@ element with @banner@ landmark.  Modify the page to include only one element with @role='banner'@.",
           "ELEMENT_HIDDEN_1": "@banner@ landmark was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LANDMARK_6",
        "scope" : 3,
        "wcag_primary" : "2.4.1",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["Website","[role='contentinfo']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","role","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var landmark_count = 0;\n    var les = [];\n    \n    var LANDMARK_ROLE = 'contentinfo';\n\n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var tag_name = le.dom_element.tag_name;\n      \n      if (le.role === LANDMARK_ROLE) {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n          rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [tag_name]);                  \n        }\n        else {\n          if (!le.body_element) {\n            landmark_count++;\n            les.push(le);\n          }  \n        }  \n      }  \n    }\n\n    if (page_element) {\n      // Test if no contentinfo landmarks\n      if (landmark_count === 0) {\n        rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_1', []);\n      } \n      else {\n        if (landmark_count === 1) {\n          rule_result.addResult(TEST_RESULT.PASS, page_element, 'WEBSITE_PASS_1', []);\n          rule_result.addResult(TEST_RESULT.PASS, les[0], 'WEBSITE_PASS_2', [tag_name]);\n        }\n        else {    \n          rule_result.addResult(TEST_RESULT.PASS, page_element, 'WEBSITE_PASS_3', [landmark_count]);\n          for (i = 0; i < les.length; i++) {\n            le = les[i];\n            rule_result.addResult(TEST_RESULT.PASS, le, 'WEBSITE_PASS_2', [tag_name]);\n          }  \n        }  \n      }  \n    } \n    \n  }",
        "nls_rule_id" : "Landmark Rule 6",
        "definition" : "Website administrative content (e.g. typically at the bottom of a web page including copyright, contact, etc..) %s use @contentinfo@ landmark.",
        "summary" : "Use @contentinfo@ landmark",
        "target_resource_desc" : "@contentinfo@ landmark",
        "purpose" : [
           "@contentinfo@ landmarks provide a way to identify administrative content typically found at the bottom of each page in a website, often referred to as a footer information in publishing contexts",
          "The @contentinfo@ usually includes information and links on copyright, privacy, contact and other general links found on all pages in the website."
        ],
        "techniques" : [
           "Include an @role='contentinfo'@ attribute on the contianer element for the content identified",
           "In websites that support mashups using @iframe@ or @frame@ elements, a @contentinfo@ landmark is allowed in each frame",
          "If the page is part of a website supporting mashups, use the @aria-labelledby@ or @aria-label@ to differentiate possible @contentinfo@ landmarks in each frame"
        ],
        "manual_checks" : [
           "Footers are a convention used on most web sites to provide copyright, contact, privacy and other types of adminstrative information",
          "Use @contentinfo@ to identify footer information on a web page"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: contentinfo role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#contentinfo"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "If there is a administrative content at the bottom of the page (e.g. typically at the bottom of a web page including copyright, contact, etc..), use the @contentinfo@ landmark to identify its content.",
           "MANUAL_CHECK_P": "If there is a administrative content at the bottom of the page (e.g. typically at the bottom of a web page including copyright, contact, etc..), use the @contentinfo@ landmark to identify its content.",
           "HIDDEN_S": "The @contentinfo@ landmark that is hidden does not contribute to the accessibility or inaccessibility of the page.",
           "HIDDEN_P": "%N_H @contentinfo@ landmarks that are hidden do not contribute to the accessibility or inaccessibility of the page"    
        },
        "node_result_messages" : {
           "WEBSITE_PASS_1": "Page has @contentinfo@ landmark",
           "WEBSITE_PASS_2": "@%1@ element has @role='contentinfo'@",
           "WEBSITE_PASS_3": "Page has %1 @contentinfo@ landmarks",
           "WEBSITE_MC_1": "If the page does have administrative content, use @role='contentinfo'@ on its container element",
           "ELEMENT_HIDDEN_1": "@contentinfo@ landmark was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LANDMARK_7",
        "scope" : 2,
        "wcag_primary" : "2.4.1",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["Website","[role='contentinfo']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","role","name"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var landmark_count = 0;\n    var les = [];\n    \n    var LANDMARK_ROLE = 'contentinfo';\n\n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var tag_name = le.dom_element.tag_name;\n      \n      if (le.role === LANDMARK_ROLE) {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.HIDDEN) {\n          rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [tag_name]);                  \n        }\n        else {\n          if (!le.body_element) {\n            landmark_count++;\n            les.push(le);\n          }  \n        }  \n      }  \n    }\n\n    if (page_element) {\n      // Test if no contentinfo landmarks\n      if (landmark_count > 1) {\n        rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_1', [landmark_count]);\n        for (i = 0; i < les.length; i++) {\n          le = les[i];\n          rule_result.addResult(TEST_RESULT.FAIL, le, 'PAGE_FAIL_2', [tag_name]);\n        } \n      }  \n    } \n    \n  }",
        "nls_rule_id" : "Landmark Rule 7",
        "definition" : "Each page %s contain no more than one @contentinfo@ landmark.",
        "summary" : "No more than one @contentinfo@ landmark",
        "target_resource_desc" : "One @contentinfo@ landmark",
        "purpose" : [
           "@contentinfo@ landmarks provide a way to identify administrative content typically found at the bottom of each page in a website, often referred to as a footer information in publishing contexts",
          "The @contentinfo@ usually includes information and links on copyright, privacy, contact and other general links found on all pages in the website."
        ],
        "techniques" : [
           "Include an @role='contentinfo'@ attribute on the contianer element for the content identified",
           "In websites that support mashups using @iframe@ or @frame@ elements, a @contentinfo@ landmark is allowed in each frame",
          "If the page is part of a website supporting mashups, use the @aria-labelledby@ or @aria-label@ to differentiate possible @contentinfo@ landmarks in each frame"
        ],
        "manual_checks" : [
           "Footers are a convention used on most web sites to provide copyright, contact, privacy and other types of adminstrative information",
          "Use @contentinfo@ to identify footer information on a web page"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: contentinfo role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#contentinfo"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "More than one @contentinfo@ landmark found on the page. Only one @banner@ landmark is allowed per page or iframe.",
           "FAIL_P": "More than one @contentinfo@ landmark found on the page. Only one @banner@ landmark is allowed per page or iframe.",
           "HIDDEN_S": "The @contentinfo@ landmark that is hidden does not contribute to the accessibility or inaccessibility of the page.",
           "HIDDEN_P": "%N_H @contentinfo@ landmarks that are hidden do not contribute to the accessibility or inaccessibility of the page"    
        },
        "node_result_messages" : {
           "PAGE_FAIL_1": "The page contains %1 @contentinfo@ landmarks,  modify the page to have only one container element with a @contentinfo@ landmark to idenfity the administrative content",
           "PAGE_FAIL_2": "@%1@ element with @contentinfo@ landmark.  Modify the page to include only one element with @role='contentinfo'@.",
           "ELEMENT_HIDDEN_1": "@contentinfo@ landmark was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LANDMARK_8",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.1","2.4.6","2.4.10"],
        "last_updated" : "2012-07-14",
        "target_resources" : ["h1","h2","h3","h4","h5","h6"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name","parent_landmark"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n    \n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var cs = le.dom_element.computed_style;\n\n      if (cs.is_visible_to_at) {\n      \n        var heading_elements = le.getHeadings();\n        var heading_elements_len = heading_elements.length;\n             \n        for (var j = 0; j < heading_elements_len; j++) {\n    \n          var he = heading_elements[j];\n          var tag_name = he.dom_element.tag_name;\n    \n          if (he.is_visible) {\n\n//            OpenAjax.a11y.logger.debug(' Heading: ' + he + ' (' + le + ')');\n//            OpenAjax.a11y.logger.debug('  LPH: ' + he.landmark_parent_heading + '  LLPH: ' + he.last_landmark_parent_heading);            \n//            if (he.landmark_parent_heading) OpenAjax.a11y.logger.debug('  LPH nested: ' + he.landmark_parent_heading.landmark_properly_nested );\n        \n            if (he.has_content) {\n            \n              if (he.landmark_parent_heading === he.last_landmark_parent_heading) {\n                \n                if (!he.last_landmark_parent_heading || \n                    (he.landmark_parent_heading &&\n                     he.landmark_parent_heading.landmark_properly_nested)) {\n                  rule_result.addResult(TEST_RESULT.PASS, he, 'ELEMENT_PASS_1', [tag_name, le.toString()]);\n                  he.landmark_properly_nested = true;\n                }\n                else {\n                  rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', [tag_name, le.toString()]);                     \n                  he.landmark_properly_nested = false;\n                }\n              }\n              else {\n                rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_1', [tag_name, le.toString()]);\n                he.landmark_properly_nested = false;\n              }\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, he, 'ELEMENT_FAIL_2', [tag_name, le.toString()]);             \n              he.landmark_properly_nested = false;\n            }\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, he, 'ELEMENT_HIDDEN_1', [tag_name, le.toString()]);       \n          }    \n        }      \n      }\n      else {\n        rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_2', [le.toString()]);      \n      }\n    }  \n  }",
        "nls_rule_id" : "Landmark Rule 8",
        "definition" : "Headings %s be properly nested within a landmark",
        "summary" : "Headings nested in landmarks",
        "target_resource_desc" : "Landmark elements",
        "purpose" : [
           "contentinfo landmarks provide a way to identify content found typically on the bottom of each page in a website",
          "The contentinfo usually includes links like copyright information, privacy, and other general links support all pages in the website."
        ],
        "techniques" : [
           "Include an @role='contentinfo'@ attribute on a element that contains @ol@ and @ul@ elements that contain li elements with links",
          "Use the aria-labelledby or aria-label to describe the purpose of the links (i.e. table on contents of a page, site map...)"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: contentinfo role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#contentinfo"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Review the heading structure within the landmark and adjust the headings to be properly nested",
           "FAIL_P": "Review the heading structure for each landmark with more than one heading, and adjust the headings in each landmark to be properly nested",
           "HIDDEN_S": "If the hidden heading element was supposed to be visible to assistive technology, style it to be positioned off screen",
           "HIDDEN_P": "If any of the %N_H hidden heading elements were supposed to be visible to assistive technology, style them to be positioned off screen",
           "NOT_APPLICABLE": "No nested headings found in landmarks"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "%1 heading is properly nested in the %2 landmark",
           "ELEMENT_FAIL_1": "Adjust the the level of the %1 heading or other heading elements to make the headings properly nested in the %2 landmark",
           "ELEMENT_FAIL_2": "Add text content to %1 element that describes the section it labels or remove it from the %2 landmark",
           "ELEMENT_FAIL_3": "The parent %1 heading and this %2 heading levels need to be adjusted to make the headings properly nested in the %3 landmark",
           "ELEMENT_HIDDEN_1": "%1 heading is hidden in the %2 landmark",
           "ELEMENT_HIDDEN_2": "%2 landmark is hidden"    
        }
      },
      {
        "rule_id" : "LANDMARK_9",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.1","2.4.6","2.4.10"],
        "last_updated" : "2013-12-20",
        "target_resources" : ["[role='banner']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["role","parent_landmark"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n\n    function checkLandmarkChildren(landmark) {\n    \n      var cces     = landmark.child_cache_elements;\n      var cces_len = cces.length;\n      var fail_count = 0;\n    \n      for (var i = 0; i < cces_len; i++) {\n      \n        var cce = cces[i];\n       \n        if ((typeof cce.role === 'string') && cce.role.length) {\n          var cs = cce.dom_element.computed_style;\n          landmark_count++;\n        \n          if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n            if ((cce.role === 'navigation') || \n                (cce.role === 'region') || \n                (cce.role === 'search')|| \n                (cce.role === 'application')) {\n               rule_result.addResult(TEST_RESULT.PASS, cce, 'ELEMENT_PASS_1', [cce.role]);     \n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, cce, 'FAIL_1', [cce.role]); \n              fail_count++;\n            }\n            fail_count += checkLandmarkChildren(cce);        \n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, cce, 'ELEMENT_HIDDEN_1', [cce.role]);     \n          }\n        }\n      }\n      \n      return fail_count;\n    }\n\n\n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n    var fail_count = 0;\n    \n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var cs = le.dom_element.computed_style;\n\n\n      if (le.role === 'banner') {\n      \n        var landmark_count = 0;\n      \n        if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n          fail_count = checkLandmarkChildren(le);\n          \n          if (fail_count > 0) rule_result.addResult(TEST_RESULT.FAIL, le, 'FAIL_2', []);\n          else if (landmark_count === 0) rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_2', []); \n          else if (landmark_count === 1) rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_3', []); \n          else rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_4', [landmark_count]);\n        }  \n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', []);\n        }  \n      }  \n    }  \n  }",
        "nls_rule_id" : "Landmark Rule 9",
        "definition" : "@banner@ landmark %s only contain @navigation@, @region@ and @search@ landmarks",
        "summary" : "@banner@ landmark has restrictions",
        "target_resource_desc" : "@banner@ landmark",
        "purpose" : [
           "A @banner@ landmark provide a way to identify branding content usually at the top of each web page",
          "Branding content usually appears consistently on most pages of a website."
        ],
        "techniques" : [
           "Include an @role='banner'@ attribute on a element that contains the branding content at the top of a page",
           "Pages at most need one @banner@ landmark",
           "A @banner@ landmark should be a top level landmark (e.g. not a child of another landmark on the page).",
           "A @banner@ landmark at most should only contain @navigation@ and @region@ landmarks.",
           "In websites that support mashups using @iframe@ or @frame@ elements, a @banner@ landmark is allowed in each frame",
          "If the page is part of a website supporting mashups, use the @aria-labelledby@ or @aria-label@ to differentiate @banner@ landmarks in each frame"
        ],
        "manual_checks" : [
          "Banners are a convention used on most web sites to identifying branding and often used as a location for advertising information"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: banner role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#banner"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Update the landmarks on the page to make sure that the @banner@ landmark only contains only @navigation@, @region@ and @search@ landmarks.",
           "FAIL_P": "Update the %N_F landmarks on the page are part of the @banner@ landmark to make sure the @banner@ landmark only contains only @navigation@, @region@ and @search@ landmarks.",
           "HIDDEN_S": "The @banner@ landmark that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H@ banner@ landmarks that are hidden were not evaluated.",
           "NOT_APPICABLE": "No @banner@ landmarks on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ landmark can be part of @banner@ landmark",
           "ELEMENT_PASS_2": "@banner@ landmark does not contain any landmarks",
           "ELEMENT_PASS_3": "@banner@ landmark contains one @navigation@, @region@ or @search@ landmark",
           "ELEMENT_PASS_4": "@banner@ landmark contains %1 @navigation@, @region@ and/or @search@ landmarks",
           "FAIL_1": "Update the landmarks on the page so the @%1@ landmark is not contained in the @banner@ landmark, depending on the content in this landmark considering moving it outside the @banner@ landmark",
           "FAIL_2": "Update landmarks on the page so the @banner@ landmark contains only @navigation@, @region@ and/or @search@ landmarks",
           "ELEMENT_HIDDEN_1": "@banner@ landmark was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LANDMARK_10",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.1","2.4.6","2.4.10"],
        "last_updated" : "2013-12-20",
        "target_resources" : ["[role='naviation']"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["role","parent_landmark"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n\n    function checkLandmarkChildren(landmark) {\n    \n      var cces     = landmark.child_cache_elements;\n      var cces_len = cces.length;\n      var fail_count = 0;\n    \n      for (var i = 0; i < cces_len; i++) {\n      \n        var cce = cces[i];\n       \n        if ((typeof cce.role === 'string') && cce.role.length) {\n          var cs = cce.dom_element.computed_style;\n          landmark_count++;\n        \n          if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n            if ((cce.role === 'region') || \n                (cce.role === 'search')|| \n                (cce.role === 'application')) {\n               rule_result.addResult(TEST_RESULT.PASS, cce, 'ELEMENT_PASS_1', [cce.role]);     \n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, cce, 'FAIL_1', [cce.role]); \n              fail_count++;\n            }\n            fail_count += checkLandmarkChildren(cce);        \n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, cce, 'ELEMENT_HIDDEN_1', [cce.role]);     \n          }\n        }\n      }\n      \n      return fail_count;\n    }\n\n\n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n    var fail_count = 0;\n    \n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var cs = le.dom_element.computed_style;\n\n\n      if (le.role === 'navigation') {\n      \n        var landmark_count = 0;\n      \n        if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n          fail_count = checkLandmarkChildren(le);\n          \n          if (fail_count > 0) rule_result.addResult(TEST_RESULT.FAIL, le, 'FAIL_2', []);\n          else if (landmark_count === 0) rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_2', []); \n          else if (landmark_count === 1) rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_3', []); \n          else rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_4', [landmark_count]);\n        }  \n        else {\n          rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', []);\n        }  \n      }  \n    }  \n  }",
        "nls_rule_id" : "Landmark Rule 10",
        "definition" : "@navigation@ landmark %s only contain @region@ and @search@ landmarks",
        "summary" : "@navigation@ landmark restrictions",
        "target_resource_desc" : "@navigation@ landmark",
        "purpose" : [
           "Navigation landmarks provide a way to identify groups of links with in a web page",
           "Navigation landmarks should be used for identifying links used for website navigation",
          "Navigation landmarks should be used for identifying links used for page content navigation"
        ],
        "techniques" : [
           "Website and page navigation links should be top level @navigation@ landmarks (e.g. not contained in other landmarks)",
           "Include an @role='navigation'@ attribute on a element that contains @ol@ and @ul@ elements that contain li elements with links",
          "Use the aria-labelledby or aria-label to describe the purpose of the links (i.e. table on contents of a page, site map...)"
        ],
        "manual_checks" : [
          "List of links that are used for navigation with or between pages in your website should use @navigation@ landmarks"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: navigation role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#navigation"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Update the landmarks on the page to make sure that the @navigation@ landmark only contains only @region@ or @search@ landmarks.",
           "FAIL_P": "Update the %N_F @navigation@ landmarks on the page to make sure they only contain  @region@ or @search@ landmarks.",
           "HIDDEN_S": "The @navigation@ landmark that is hidden was not evaluated.",
           "HIDDEN_P": "%N_H @navigation@ landmarks that are hidden were not evaluated.",
           "NOT_APPICABLE": "No @navigation@ landmarks on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ landmark can be part of @banner@ landmark",
           "ELEMENT_PASS_2": "@navigation@ landmark does not contain any landmarks",
           "ELEMENT_PASS_3": "@navigation@ landmark contains one @region@ or @search@ landmark",
           "ELEMENT_PASS_4": "@navigation@ landmark contains %1 @region@ and/or @search@ landmarks",
           "FAIL_1": "Update the landmarks on the page so the @%1@ landmark is not contained by the @navigation@ landmark, depending on the content in this landmark considering moving it outside the @navigation@ landmark",
           "FAIL_2": "Update landmarks on the page so the @navigation@ landmark contains only @region@ and/or @search@ landmarks",
           "ELEMENT_HIDDEN_1": "@navigation@ landmark was not evaluated because it is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LANGUAGE_1",
        "scope" : 2,
        "wcag_primary" : "3.1.1",
        "wcag_related" : [],
        "last_updated" : "2013-10-22",
        "target_resources" : ["html"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "dom_cache",
        "resource_properties" : ["lang"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT    = OpenAjax.a11y.TEST_RESULT;\n   \n    OpenAjax.a11y.logger.debug( 'Language Codes: ' + typeof OpenAjax.a11y.LANGUAGE_CODES);\n    \n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    if (page_element) {\n       if (dom_cache.lang && dom_cache.lang.length) {\n         if (OpenAjax.a11y.util.validLanguageCode(dom_cache.lang)) {\n           rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_1', [dom_cache.lang]);\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_2', [dom_cache.lang]);       \n         }\n       }\n       else {\n         rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_1', []);       \n       }\n    } \n       \n\n  }",
        "nls_rule_id" : "Language Rule 1",
        "definition" : "Page %s define the language of its principal content using a valid IANA language code.",
        "summary" : "Page %s use language code",
        "target_resource_desc" : "HTML element",
        "purpose" : [
          "Assistive technologies like screen readers and other speech output technologies need to know the languages represented by the characters to speak the text content correctly."
        ],
        "techniques" : [
           "Use the @lang@ attribute of the @html@ or @xhtml@ element to define principal language of the web page",
          "Use the INAN codes to identify the principal language (i.e en, fr...)"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML4: Specifying the language of content: the lang attribute",
            "url"   : "http://www.w3.org/TR/html4/struct/dirlang.html#adef-lang"
          },
          { "type"  : 9,
            "title" : "HTML5: The lang and xml:lang attributes",
            "url"   : "http://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes"
          },
          { "type"  : 5,
            "title" : "W3C Internationalization: Language tags in HTML and XML",
            "url"   : "http://www.w3.org/International/articles/language-tags/"
          },
          { "type"  : 5,
            "title" : "W3C Internationalization: Choosing a Language Tag",
            "url"   : "http://www.w3.org/International/questions/qa-choosing-language-tags"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Identify the principal language of the web page by using the @lang@ attribute on its @html@ element."    
        },
        "node_result_messages" : {
           "PAGE_PASS_1": "The @html@ element defines the '%1' language code",
           "PAGE_FAIL_1": "Add a @lang@ attribute of the  @html@ element of the page with a valid IANA code",
           "PAGE_FAIL_2": "Change the language code '%1' defined in the @lang@ attribute of the @html@ element to a valid IANA code"    
        }
      },
      {
        "rule_id" : "LANGUAGE_2",
        "scope" : 1,
        "wcag_primary" : "3.1.2",
        "wcag_related" : ["3.1.1"],
        "last_updated" : "2013-10-22",
        "target_resources" : ["[lang]"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "languages_cache",
        "resource_properties" : ["lang"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT    = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY     = OpenAjax.a11y.VISIBILITY;\n    \n    var dom_elements     = dom_cache.languages_cache.dom_elements;\n    var dom_elements_len = dom_elements.length;\n\n    OpenAjax.a11y.logger.debug('  Language 2: ' + dom_elements_len);\n    var fail_count = 0;\n    var pass_count = 0;\n\n    for (var i = 0; i < dom_elements_len; i++) {\n      var de = dom_elements[i];\n        \n      if (de.computed_style.is_visible_to_at === VISIBILITY.VISIBLE ) {\n        \n         if (OpenAjax.a11y.util.validLanguageCode(de.lang)) {\n           rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [de.tag_name, de.lang]);\n           pass_count++;\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.tag_name, de.lang]);    \n           fail_count++;\n         }\n                   \n      }\n      else {\n        rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.tag_name, de.lang]);\n      }\n    }  \n    \n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    if (page_element) {\n      if (fail_count === 1) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'ELEMENT_FAIL_2', []);\n      else if (fail_count > 1) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'ELEMENT_FAIL_3', [fail_count]);\n      else if (pass_count === 1) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'ELEMENT_MC_1', []); \n      else if (pass_count > 1) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'ELEMENT_MC_2', [pass_count]);    \n      else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'ELEMENT_MC_3', []); \n    } \n    \n  }",
        "nls_rule_id" : "Language Rule 2",
        "definition" : "Elements with text content in a different language from the principal language of the page %s use the @lang@ attribute with a valid IANA language code to identify the change.",
        "summary" : "Identify language changes",
        "target_resource_desc" : "Elements with text content that is in a different language than the principal language of the page",
        "purpose" : [
          "Assistive technologies like screen readers and other speech output technologies need to know the language of the characters of an element to speak the text content correctly."
        ],
        "techniques" : [
           "Use the @lang@ attribute to define the IANA language of the text content of the element",
          "Use the IANA codes to identify the language of the text in the element (i.e en, fr...)"
        ],
        "manual_checks" : [
           "Review the page for any text content that is different than than the principal language of the page",
          "If any changes in language are found use, the @lang@ attribute to identify any changes"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML4: Specifying the language of content: the lang attribute",
            "url"   : "http://www.w3.org/TR/html4/struct/dirlang.html#adef-lang"
          },
          { "type"  : 9,
            "title" : "HTML5: The lang and xml:lang attributes",
            "url"   : "http://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes"
          },
          { "type"  : 5,
            "title" : "W3C Internationalization: Language tags in HTML and XML",
            "url"   : "http://www.w3.org/International/articles/language-tags/"
          },
          { "type"  : 5,
            "title" : "W3C Internationalization: Choosing a Language Tag",
            "url"   : "http://www.w3.org/International/questions/qa-choosing-language-tags"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the @lang@ attribute value to a valid IANA language code for the element with the @lang@ attribute",
           "FAIL_P": "Change the @lang@ attribute values of the %N_F elements with invalid language codes to valid IANA language codes",
           "MANUAL_CHECK_S": "Review the page for any text content that is different than than the principal language of the page. If any changes in language are found, use the @lang@ attribute on the container element to identify them.",
           "MANUAL_CHECK_P": "Review the page for any additional text content that is different than than the principal language of the page.  If there are additional changes in language, use the @lang@ attribute on the container element to identify them."    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @%1@ element has the valid language code of '%2'",
           "ELEMENT_FAIL_1": "Change the language code '%2' defined in the @lang@ attribute of the @%1@ element to a valid IANA language code",
           "ELEMENT_FAIL_2": "Change the @lang@ attribute value to a valid IANA language code for the element with the @lang@ attribute",
           "ELEMENT_FAIL_3": "Change the @lang@ attribute values of the %1 elements with invalid language codes to valid IANA language codes",
           "ELEMENT_MC_1": "One change in language was found on the page.  Review the page for any other text content that is different than than the principal language of the page.  If any more changes in language are found, use the @lang@ attribute to identify them.",
           "ELEMENT_MC_2": "%1 changes in language were found on the page.  Review the page for any other text content that is different than than the principal language of the page.  If any more changes in language are found, use the @lang@ attribute to identify them.",
           "ELEMENT_MC_3": "Review the page for any text content that is different than than the principal language of the page.  If any changes in language are found, use the @lang@ attribute to identify them.",
           "ELEMENT_HIDDEN_1": "The @%1@ element with the language code '%2' is hidden"    
        }
      },
      {
        "rule_id" : "LAYOUT_1",
        "scope" : 2,
        "wcag_primary" : "1.3.2",
        "wcag_related" : ["1.3.1"],
        "last_updated" : "2012-12-28",
        "target_resources" : ["Page","table"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["is_data_table","max_column","max_row","nesting_level"],
        "validate" : "function (dom_cache, rule_result) {\n     \n     function getNestingLevel(table_element, level) {\n     \n       var l = level;\n       var pte = table_element.parent_table_element;\n     \n       if (pte) {\n         if ((pte.table_role === OpenAjax.a11y.TABLE_ROLE.DATA) || pte.max_column == 1) {\n           l = getNestingLevel(pte, level);           \n         }\n         else {\n           l = getNestingLevel(pte, (level+1));\n         }\n       }\n       return l;\n     }\n     \n     var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY    = OpenAjax.a11y.VISIBILITY;\n    \n     var table_elements     = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n     \n     var page_element = dom_cache.headings_landmarks_cache.page_element;\n     var layout_pass = 0;\n     var layout_mc   = 0;\n     var layout_fail = 0;\n\n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (var i = 0; i < table_elements_len; i++) {\n       \n         var te = table_elements[i];\n         var de = te.dom_element;\n         var cs = de.computed_style;\n         \n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.LAYOUT) {\n\n           if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n         \n             var nesting_level = getNestingLevel(te, 0);\n             \n             te.nesting_level = nesting_level;\n\n             if (te.max_column === 1)  {\n               rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_1', []);          \n               layout_pass++;\n             }  \n             else {\n         \n               if (nesting_level === 0) {\n                 rule_result.addResult(TEST_RESULT.MANUAL_CHECK, te, 'ELEMENT_MC_2', [te.max_row, te.max_column]);               \n                 layout_mc++;\n               } \n               else {\n                 rule_result.addResult(TEST_RESULT.MANUAL_CHECK, te, 'ELEMENT_MC_3', [te.nesting_level]);\n                 layout_mc++;\n               }  \n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, te, 'ELEMENT_HIDDEN_1', []);\n           }\n         } \n       } // end loop\n     }  \n\n     if (layout_mc) {\n       rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'PAGE_MC_1', []); \n     }\n     else {\n       if (layout_pass) {\n         rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_1', []); \n       }  \n     }   \n     \n   }",
        "nls_rule_id" : "Layout Rule 1",
        "definition" : "Web pages with layout tables %s provide content in a meaningful sequence",
        "summary" : "Page %s have meaningful sequence",
        "target_resource_desc" : "@table@ elements used for layout",
        "purpose" : [
          "The sequence of content (i.e. order) in the document code affects its meaning, especially for users of assistive technology who cannot see the visual cues provided in a graphical that provide information about the relationships between content"
        ],
        "techniques" : [
           "Use CSS and web standards techniques for the coding of content, and the graphical styling and positioning of content",
           "Avoid using table markup for graphical layout, if you do use tables for layout make sure the content still is meaningful when the table markup is disabled",
           "Avoid using nested tables for layout, the deeper the level of nesting the more chance there of having a confusing sequence of content",
          "Tables that are used for layout should use only @tr@ and @td@ elements, and the @table@, @tr@ and @td@ elements should have a @role='presentation'@ attribute to clearly indicate the table markup is being used for layout"
        ],
        "manual_checks" : [
           "Use browser developer tools to disable table markup or enable a user stylesheet to change table cells to be rendered as block level elements",
          "With layout tables disabled, view the content to make sure the reading order and structure of the document makes sense"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification: Visual formatting model",
            "url"   : "http://www.w3.org/TR/CSS21/visuren.html"
          },
          { "type"  : 11,
            "title" : "G57: Ordering the content in a meaningful sequence",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G57"
          },
          { "type"  : 11,
            "title" : "C6: Positioning content based on structural markup",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/C6"
          },
          { "type"  : 11,
            "title" : "C8: Using CSS letter-spacing to control spacing within a word",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/C8"
          },
          { "type"  : 11,
            "title" : "C27: Making the DOM order match the visual order",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/C27"
          },
          { "type"  : 11,
            "title" : "F1: Failure of Success Criterion 1.3.2 due to changing the meaning of content by positioning information with CSS",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F1"
          },
          { "type"  : 11,
            "title" : "F33: Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to create multiple columns in plain text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F33"
          },
          { "type"  : 11,
            "title" : "F34: Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to format tables in plain text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F34"
          },
          { "type"  : 11,
            "title" : "F49: Failure of Success Criterion 1.3.2 due to using an HTML layout table that does not make sense when linearized",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F49"
          },
          { "type"  : 5,
            "title" : "Web Standards Group",
            "url"   : "http://webstandardsgroup.org/standards/"
          },
          { "type"  : 5,
            "title" : "W3C Standards",
            "url"   : "http://www.w3.org/standards/"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify document has a meaningful sequence when layout table markup is disabled.  If content does not have a meaningful sequence, reorganize content on the page to have a meaningful sequence when layout tables are disabled.",
           "NOT_APPLICABLE": "No layout tables found on this page"    
        },
        "node_result_messages" : {
           "PAGE_PASS_1": "Page does not have any tables or layout tables are only one column wide.",
           "PAGE_MC_1": "%1 tables being used for layout were found, verify the page has a meaningful sequence of content when table markup is disabled.",
           "ELEMENT_PASS_1": "Table is one column wide, and will have the same document sequence when table markup is disabled.",
           "ELEMENT_MC_1": "Verify document has a meaningful sequence of content when layout table markup is disabled.",
           "ELEMENT_MC_2": "Verify the content in the %1x%2 layout table has a meaningful sequence of content when table markup is disabled, if the table is actually a data table add data table markup to give the table an effective caption and the data tables headings.",
           "ELEMENT_MC_3": "Verify the nesting of tables for layout of content maintains a meaningful sequence of content when table markup is disabled.",
           "ELEMENT_HIDDEN_1": "Meaningful sequence was not tested The layout @table@ is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LAYOUT_2",
        "scope" : 1,
        "wcag_primary" : "1.3.2",
        "wcag_related" : [],
        "last_updated" : "2012-12-28",
        "target_resources" : ["table"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["is_data_table","max_column","max_row","nesting_level"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY    = OpenAjax.a11y.VISIBILITY;\n    \n     var i;\n     var te;\n     var nesting_level;\n    \n     var table_elements     = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n     \n\n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (i=0; i < table_elements_len; i++) {\n       \n         te = table_elements[i];\n         \n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.LAYOUT) {\n                      \n           if (te.dom_element.computed_style.is_visible_to_at == VISIBILITY.VISIBLE) {\n         \n             if (te.max_column > 1) {\n             \n               if (te.nesting_level > 0) rule_result.addResult(TEST_RESULT.FAIL, te, 'ELEMENT_FAIL_1', [te.max_row, te.max_column, te.nesting_level]);\n               else rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_1', []);                       \n             }  \n             else {\n               rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_2', []);          \n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, te, 'ELEMENT_HIDDEN_1', []);\n           } \n         }  \n       } // end loop\n     }  \n  }",
        "nls_rule_id" : "Layout Rule 2",
        "definition" : "Tables %s not be nested for layout of content",
        "summary" : "Do not nest layout tables",
        "target_resource_desc" : "@table@ elements used for layout",
        "purpose" : [
          "The sequence of content (i.e. order) in the document code affects its meaning, nesting layout tables often makes the sequence of content less understandable"
        ],
        "techniques" : [
           "Use CSS and web standards techniques for the coding of content, and the graphical styling and positioning of content",
           "Avoid using table markup for graphical layout, if you do use tables for layout make sure the content still is meaningful when the table markup is disabled",
           "Avoid using nested tables for layout, the deeper the level of nesting the more chance there of having a confusing sequence of content",
          "Tables that are used for layout should use only @tr@ and @td@ elements, and the @table@, @tr@ and @td@ elements should have a @role='presentation'@ attribute to clearly indicate the table markup is being used for layout"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification: Visual formatting model",
            "url"   : "http://www.w3.org/TR/CSS21/visuren.html"
          },
          { "type"  : 11,
            "title" : "F33: Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to create multiple columns in plain text content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F33"
          },
          { "type"  : 11,
            "title" : "F49: Failure of Success Criterion 1.3.2 due to using an HTML layout table that does not make sense when linearized",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F49"
          },
          { "type"  : 5,
            "title" : "Web Standards Group",
            "url"   : "http://webstandardsgroup.org/standards/"
          },
          { "type"  : 5,
            "title" : "W3C Standards",
            "url"   : "http://www.w3.org/standards/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Update the markup and CSS on this page to remove the nesting of the layout table that is nested",
           "FAIL_P": "Update the markup and CSS on this page to remove the nesting of %N_F layout tables that are nested",
           "NOT_APPLICABLE": "No table elements used for layout"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Table is not nested with another layout table",
           "ELEMENT_PASS_2": "Table is one column wide, and will have the same document sequence when table markup is disabled",
           "ELEMENT_FAIL_1": "Update the markup and CSS on this page to remove the nesting of this layout table",
           "ELEMENT_HIDDEN_1": "Table nesting was not tested beacuse the @table@ is hidden from assistive technology"    
        }
      },
      {
        "rule_id" : "LAYOUT_3",
        "scope" : 1,
        "wcag_primary" : "1.3.2",
        "wcag_related" : ["1.3.1","4.1.2"],
        "last_updated" : "2012-12-28",
        "target_resources" : ["table"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     function checkLayoutTableForRolePresentation(element) {\n     \n       var de = element.dom_element;\n       var cs = de.computed_style;\n \n       if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n \n         if (de.role && de.role == 'presentation') {\n           rule_result.addResult(TEST_RESULT.PASS, element, 'ELEMENT_PASS_1', [de.tag_name]);       \n         }\n         else {\n           // Many browsers insert tbody into a table, even if the element is not in the source code\n           // so ignore it for the purpose of this rule if it does not have role presentation\n           if (de.tag_name !== 'tbody') {\n             rule_result.addResult(TEST_RESULT.FAIL, element, 'ELEMENT_FAIL_1', [de.tag_name]);\n           }\n         }\n       }  \n       else {\n         rule_result.addResult(TEST_RESULT.HIDDEN, element, 'ELEMENT_HIDDEN_1', [de.tag_name]);  \n       }\n\n       var cce     = element.child_cache_elements;\n       \n       if (!cce) return;\n       \n       var cce_len = cce.length;     \n       \n       if (!cce_len) return;\n       \n       for (var j = 0; j < cce_len; j++) {\n         // do not recursively go into other tables\n         if (cce[j].table_type && (cce[j].table_type !== TABLE.TABLE_ELEMENT)) checkLayoutTableForRolePresentation(cce[j]);\n       }\n     \n     }\n   \n     var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY    = OpenAjax.a11y.VISIBILITY;    \n     var TABLE      = OpenAjax.a11y.TABLE;\n    \n     var table_elements     = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n     \n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (var i = 0; i < table_elements_len; i++) {\n       \n         var te = table_elements[i];\n         var de = te.dom_element;         \n         \n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.LAYOUT) {\n           if (te.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n             checkLayoutTableForRolePresentation(te);\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, te, 'ELEMENT_HIDDEN_1', [de.tag_name]);\n           }\n         }  \n       } // end loop\n     }  \n   }",
        "nls_rule_id" : "Layout Rule 3",
        "definition" : "Layout tables %s use @role='presentation'@ on all table elements",
        "summary" : "Layout tables use @role='presentation'@",
        "target_resource_desc" : "@table@ elements used for layout",
        "purpose" : [
          "Using @role='presentation'@ communicates assistive technologies that the table is being used for markup"
        ],
        "techniques" : [
          "Use @role='presentation'@ on all table elements in a layout table to help assistive technology understand the table is being used for layout, rather than tabular data"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0: Presentation Role",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#presentation"
          },
          { "type"  : 5,
            "title" : "WAI-ARIA 1.0 Authoring Practices: Presentation Role",
            "url"   : "http://www.w3.org/WAI/PF/aria-practices/#presentation_role"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add @role='presentation'@ to table element (i.e. @table@, @tr@, @td@ elements) used in the layout table",
           "FAIL_P": "Add @role='presentation'@ to %N_F table elements (i.e. @table@, @tr@, @td@ elements) used in layout tables",
           "NOT_APPLICABLE": "No table elements used for layout"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "%1 element has @role='presentation'@",
           "ELEMENT_FAIL_1": "Add @role='presentation'@ to the %1 element, if the table is actually a data table use appropriate data table markup",
           "ELEMENT_HIDDEN_1": "@role='presentation'@ on layout table markup was not tested because the %1 element is hidden from assistive technologies"    
        }
      },
      {
        "rule_id" : "LINK_1",
        "scope" : 1,
        "wcag_primary" : "2.4.4",
        "wcag_related" : ["2.4.9"],
        "last_updated" : "2012-09-22",
        "target_resources" : ["a","area","[role=link]"],
        "rule_category" : 32,
        "language_dependency" : "",
        "cache_dependency" : "links_cache",
        "resource_properties" : ["href","accessible_name","accessible_name_source"],
        "validate" : "function (dom_cache, rule_result) {\n  \n    function updateResults(links, test_result, message) {\n    \n      for (var i = 0; i < links.length; i++) {\n      \n        var le = links[i];\n        var links_len = links[i].length;\n      \n//        OpenAjax.a11y.logger.debug('  Update Item: ' + i + ' of ' + end + ' le: ' + le.toString());\n\n        var tag_name  = le.dom_element.tag_name;\n              \n        rule_result.addResult(test_result, le,  message, [tag_name, links_len]);        \n      }\n      \n    }\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    \n    var same_hrefs     = dom_cache.links_cache.getLinksThatShareTheSameHREF();\n    var same_hrefs_len = same_hrefs.length;\n\n    for (var i = 0; i < same_hrefs_len; i++) {\n      \n      var same_href = same_hrefs[i];\n      \n      if (same_href.same_names) updateResults(same_href.links, TEST_RESULT.PASS, 'ELEMENT_PASS_1');\n      else if (same_href.names_count === 2) updateResults(same_href.links, TEST_RESULT.MANUAL_CHECK, 'ELEMENT_MC_1');\n      else updateResults(same_href.links, TEST_RESULT.FAIL, 'ELEMENT_FAIL_1');\n                  \n    }  // end loop  \n    \n  }",
        "nls_rule_id" : "Link Rule 1",
        "definition" : "Links with the same @href@ %s have the same link text",
        "summary" : "Link text %s be consistent",
        "target_resource_desc" : "@a@ and @area@ elements and elements with @role='link'@",
        "purpose" : [
          "Consistency of accessible names for a link makes interaction with web pages more predictable"
        ],
        "techniques" : [
           "Use the same text for links that point to the same URL",
           "Make sure the link text accurately describes the target of the link",
           "Use @aria-describedby@ to provide context for links that share the same accessible name, but have different @href@ values",
          "Use aria-"
        ],
        "manual_checks" : [
          "In general accessible names should be the same for links that share the same @href@ values.  In some cases you may have two accessible names to the same @href@ avlue, for example a links with the accessible names 'Home' and 'My Organization Name'"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 12.2 The A element",
            "url"   : "http://www.w3.org/TR/html4/struct/links.html#edef-A"
          },
          { "type"  : 11,
            "title" : "H30: Providing link text that describes the purpose of a link for anchor elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H30"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_P": "Verify all %N_MC @a@, @area@ or @[role=link]@ elements accessible name describes the target of each link, since there are two different accessible names to the same @href@ value",
           "FAIL_P": "Change the accessible names to a consistent name for the links that share the same @href@s",
           "NOT_APPLICABLE": "No @a@, @area@ or @[role=link]@ elements on page that share the same @href@ value"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ element has the same accessible name as the %2 links it shares the same @href@ with",
           "ELEMENT_MC_1": "Verify the @%1@ element has the an accessible name that makes sense to users, since the link shares the same @href@ with a link that has a different accessible name",
           "ELEMENT_FAIL_1": "Change the text content of the @%1@ element to make it the same as other %2 links that share the same @href@ value",
           "ELEMENT_HIDDEN_1": "Consistent link text for links sharing the same @href@ value was not tested because the @%1@ element is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "LINK_2",
        "scope" : 1,
        "wcag_primary" : "2.4.4",
        "wcag_related" : ["2.4.9"],
        "last_updated" : "2012-09-22",
        "target_resources" : ["a","area","[role=link]"],
        "rule_category" : 32,
        "language_dependency" : "",
        "cache_dependency" : "links_cache",
        "resource_properties" : ["href","accessible_description","accessible_name","accessible_name_source"],
        "validate" : "function (dom_cache, rule_result) {\n\n    function updateResults(links, test_result, message) {\n    \n      for (var i = 0; i < links.length; i++) {\n      \n        var le = links[i];\n        var links_len = links[i].length;\n      \n//        OpenAjax.a11y.logger.debug('  Update Item: ' + i + ' of ' + end + ' le: ' + le.toString());\n\n        var tag_name  = le.dom_element.tag_name;\n              \n        rule_result.addResult(test_result, le,  message, [tag_name, links_len]);        \n      }\n      \n    }\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    \n    var same_names     = dom_cache.links_cache.getLinksThatShareTheSameName();\n    var same_names_len = same_names.length;\n\n    for (var i = 0; i < same_names_len; i++) {\n      \n      var same_name = same_names[i];\n      \n      if (same_name.same_hrefs) {\n        updateResults(same_name.links, TEST_RESULT.PASS, 'ELEMENT_PASS_1');\n      } else {\n        if (same_name.unique_descriptions) {\n          updateResults(same_name.links, TEST_RESULT.PASS, 'ELEMENT_PASS_2');\n        } else {\n          updateResults(same_name.links, TEST_RESULT.FAIL, 'ELEMENT_FAIL_1');\n        }  \n      }            \n    }  // end loop  \n\n  }",
        "nls_rule_id" : "Link Rule 2",
        "definition" : "Links with different @href@s %s have unique accessible names",
        "summary" : "Link text %s be unique",
        "target_resource_desc" : "@a@ and @area@ elements and elements with @role='link'@",
        "purpose" : [
          "Links that point to different URLs should have unique accessible names or descriptions, when a link shares the same accessible name but have different URLs, users using speech will be confused unless programmatic text context is provided"
        ],
        "techniques" : [
           "The link text (i.e. accessible name) should uniquely describe the target of a link,",
           "Use @aria-labelledby@ to provide context for links that share the same link text",
          "Use @aria-describedby@ to provide context for links that share the same link text"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 12.2 The A element",
            "url"   : "http://www.w3.org/TR/html4/struct/links.html#edef-A"
          },
          { "type"  : 11,
            "title" : "H30: Providing link text that describes the purpose of a link for anchor elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H30"
          },
          { "type"  : 2,
            "title" : "OAA Example 44 - Using aria-describedby to satisfy WCAG 2.4.4 Link Purpose in Context",
            "url"   : "http://oaa-accessibility.org/example/44/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_P": "Change the accessible names to be uniue or add @aria-describedby@ attribute to the %N_F @a@, @area@ or @[role=link]@ elements to provide additional context to make the accessible names unique",
           "NOT_APPLICABLE": "No @a@, @area@ or @[role=link]@ elements on page share the same accessible name"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ element has the same @href@ value as the %2 links it shares a name with",
           "ELEMENT_PASS_2": "@%1@ element has a different @href@ value as the %2 links it shares a name with, but it has a unique description using @aria-describedby@ attribute",
           "ELEMENT_FAIL_1": "Change the accessible name of the @%1@ element or provide additional context text using @aria-describedby@ property to make the link text unique"    
        }
      },
      {
        "rule_id" : "LINK_3",
        "scope" : 1,
        "wcag_primary" : "2.4.4",
        "wcag_related" : ["2.4.9"],
        "last_updated" : "2012-09-22",
        "target_resources" : ["a","area","[role=link]"],
        "rule_category" : 32,
        "language_dependency" : "",
        "cache_dependency" : "links_cache",
        "resource_properties" : ["height","width","is_visible_onscreen"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    \n    var MIN_HEIGHT = 12;\n    var MIN_WIDTH = 12;\n\n    var passed = true;\n    var node_result = null;\n   \n    // Check to see if valid cache reference\n    if (dom_cache.links_cache.link_elements) {\n     \n      var link_elements_len = dom_cache.links_cache.link_elements.length;\n    \n      for (var i=0; i < link_elements_len; i++) {\n       \n        var le = dom_cache.links_cache.link_elements[i];\n        var cs = le.dom_element.computed_style;\n\n        var tag_name = le.dom_element.tag_name;\n\n        // test if link is visible in a graphical rendering\n\n        if (le.is_link) {       \n\n          if ((cs.is_visible_onscreen == VISIBILITY.VISIBLE) &\n              (cs.height > 0) &&\n              (cs.width > 0)) {\n   \n            if ((cs.height >= MIN_HEIGHT) && \n                 (cs.width >= MIN_WIDTH)) {\n              rule_result.addResult(TEST_RESULT.PASS, le, 'ELEMENT_PASS_1', [tag_name]);\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, le, 'ELEMENT_FAIL_1', [tag_name, cs.height, cs.width]);\n            }\n          }  \n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [tag_name]);\n          } \n        } // endif\n      } // end loop\n    } \n  }",
        "nls_rule_id" : "Link Rule 3",
        "definition" : "Link %s provide minimum target dimensions.",
        "summary" : "Link %s not be small",
        "target_resource_desc" : "@a@ and @area@ elements and elements with @role='link'@",
        "purpose" : [
          "Links must be large enough for people to see and select with the mouse"
        ],
        "techniques" : [
          "Increase the size of the image to at least 12 pixels high and 12 pixels wide"
        ],
        "manual_checks" : [
          "Use visual inspection and browser development tools to determine if the image link is more than 12 pixels high and 12 pixels wide"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 12.2 The A element",
            "url"   : "http://www.w3.org/TR/html4/struct/links.html#edef-A"
          },
          { "type"  : 9,
            "title" : "IITAA Implementation Guidelines 1.0: 9.3 - Avoid using small links.",
            "url"   : "http://www.dhs.state.il.us/IITAA/IITAAWebImplementationGuidelines.html"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Increase the dimensions of the @a@, @area@ or @[role=link]@ element to be at least 12 pixels high and 12 pixels wide",
           "FAIL_P": "Increase the dimensions of the %N_F @a@, @area@ or @[role=link]@ elements to be at least 12 pixels high and 12 pixels wide",
           "MANUAL_CHECK_S": "Verify the dimensions of the @a@, @area@ or @[role=link]@ element to be at least 12 pixels high and 12 pixels wide, if not change the dimensions to meet the requirement",
           "MANUAL_CHECK_P": "Verify the dimensions of the %N_F @a@, @area@ or @[role=link]@ elements to be at least 12 pixels high and 12 pixels wide, if not change the dimension to meet the requirement",
           "NOT_APPLICABLE": "No @a@, @area@ or @[role=link]@ elements on page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The image link is more than 12 pixels high and 12 pixels wide",
           "ELEMENT_MC_1": "The rendered dimensions of the @%1@ element could not be determined, verify the image link is at least 12 pixels high and 12 pixels wide",
           "ELEMENT_FAIL_1": "The rendered dimensions of the @%1@ element is %2 pixels by %3 pixels, change the dimensions of the image to be at least 12 pixels high and 12 pixels wide",
           "ELEMENT_HIDDEN_1": "Minimum demensions for links was not tested beacuse the @%1@ element is off screen or hidden"    
        }
      },
      {
        "rule_id" : "LINK_4",
        "scope" : 1,
        "wcag_primary" : "2.4.4",
        "wcag_related" : ["2.4.9"],
        "last_updated" : "2012-09-22",
        "target_resources" : ["a","area","[role=link]"],
        "rule_category" : 32,
        "language_dependency" : "",
        "cache_dependency" : "links_cache",
        "resource_properties" : ["accessible_name","accessible_name_source","href","accessible_description"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    \n    var link_elements     = dom_cache.links_cache.link_elements;\n    var link_elements_len = link_elements.length;\n\n    var visible_link_elements = [];\n    \n    for (var i = 0; i < link_elements_len; i++) {\n      \n      var le = link_elements[i];\n      var tag_name = le.dom_element.tag_name;\n      \n      if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE && \n          le.is_link) {\n        visible_link_elements.push(le);\n      }\n      else {\n        rule_result.addResult(TEST_RESULT.HIDDEN, le, 'ELEMENT_HIDDEN_1', [tag_name]);                  \n      }\n      \n    }\n    \n    var visible_link_elements_len = visible_link_elements.length;\n\n    for (i = 0; i < visible_link_elements_len; i++) {\n\n      le = visible_link_elements[i];\n      \n      var name        = le.accessible_name_for_comparison;\n      var description = le.accessible_description_for_comparison;\n      tag_name        = le.dom_element.tag_name;\n\n      if (name.length) {\n        if (description.length) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_2', [tag_name, name, description]);\n        else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_1', [tag_name, name]);\n      }  \n      else {\n        rule_result.addResult(TEST_RESULT.FAIL, le, 'ELEMENT_FAIL_1', [tag_name]);\n      }\n      \n    }  // end loop  \n    \n    \n  }",
        "nls_rule_id" : "Link Rule 4",
        "definition" : "Accessible names for a link %s describe the target of the link",
        "summary" : "Link text %s be descriptive",
        "target_resource_desc" : "@a@ and @area@ elements and elements with @role='link'@",
        "purpose" : [
          "Link text should describe the target of the link "
        ],
        "techniques" : [
           "The text content of the link (i.e. the default accessible name) should uniquely describe the target of each link,",
           "Use @aria-label@ or @aria-labelledby@ to provide more descriptive accessible names when the text content of the link cannot be changed",
          "Use @aria-describedby@ to provide context for links that share the same link text but have some type of context to make the link text meaningful"
        ],
        "manual_checks" : [
          "Read the accessible name for each link aloud and make sure the accessible name describes the target of the link"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 12.2 The A element",
            "url"   : "http://www.w3.org/TR/html4/struct/links.html#edef-A"
          },
          { "type"  : 11,
            "title" : "H30: Providing link text that describes the purpose of a link for anchor elements",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H30"
          },
          { "type"  : 2,
            "title" : "OAA Example 44 - Using aria-describedby to satisfy WCAG 2.4.4 Link Purpose in Context",
            "url"   : "http://oaa-accessibility.org/example/44/"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @a@, @area@ or @[role=link]@ elements accessible name describes the target of the link",
           "MANUAL_CHECK_P": "Verify all %N_MC @a@, @area@ or @[role=link]@ elements have accessible names that describe the target of each link",
           "FAIL_S": "Add text content to the link that does not have text content that describes the target of the link",
           "FAIL_P": "Add text content to the %1 links that do not have text content that describes the target of each link",
           "NOT_APPLICABLE": "No @a@, @area@ or @[role=link]@ elements on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "@%1@ element has the accessible name '%2', verify that the name accurately describes the target of the link, if not change the text content or text context of the link to create a more accessible name",
           "ELEMENT_MC_2": "@%1@ element has the accessible name '%2' with a text content of '%3', verify that the name and context text accurately describes the target of the link, if not change the text content or context of the link to create a more accessible name",
           "ELEMENT_FAIL_1": "The @%1@ element does NOT have an accessible name, add text content to the link so the accessible name describes the target of the link",
           "ELEMENT_HIDDEN_1": "Descriptive accessibe names for links was not tested because the @%1@ element is hidden from assistive technologies."    
        }
      },
      {
        "rule_id" : "NAVIGATION_1",
        "scope" : 3,
        "wcag_primary" : "2.4.5",
        "wcag_related" : [],
        "last_updated" : "2013-08-28",
        "target_resources" : ["Website","role='search'","role='navigation'"],
        "rule_category" : 64,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var landmark_count = 0;\n    var navigation_count = 0;\n    var search_count     = 0;\n    \n    var LANDMARK_ROLE = 'navigation';\n\n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      var tag_name = le.dom_element.tag_name;\n      \n      if (le.role === 'navigation') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_1', []);\n          navigation_count++;\n        }\n      }  \n      \n      if (le.role === 'search') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_2', []);\n          search_count++;\n        }  \n      }  \n      \n    }\n\n    if (page_element) {\n      if ((navigation_count > 0) && (search_count > 0)) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_1', []);\n      else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_2', []);\n    } \n       \n\n  }",
        "nls_rule_id" : "Navigation Rule 1",
        "definition" : "At least two of the following features %s be used to find content in a website: website search feature, home page includes a list of links to all pages in the website, each page having a list of links for navigation between pages, bread crumb links for heirarchical navigation of a website and/or a dedicated page that serves as a site map of all the pages in a website",
        "summary" : "At least two ways of finding content",
        "target_resource_desc" : "Web site navigational links and search form controls",
        "purpose" : [
          "One of the fundamental aspects of the web is to find useful information, by providing multiple accessible ways to find information within a website helps people with disabilities find content on your computer."
        ],
        "techniques" : [
           "Website search feature including the @search@ landmark",
           "Each page having a list of links for navigation between pages using the @navigation@ landmark",
           "Sandtrail/bread crumb links for heirarchical navigation of a website using the @navigation@ landmark",
          "Dedicated page in the website that serves as a site map of all the pages in a website"
        ],
        "manual_checks" : [
          "Verify that at least 2 of the techniques are implemented for finding content on this web page"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0: Landmark Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark_roles"
          },
          { "type"  : 11,
            "title" : "G63: Providing a site map",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G63"
          },
          { "type"  : 11,
            "title" : "G64: Providing a Table of Contents",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G64"
          },
          { "type"  : 11,
            "title" : "G125: Providing links to navigate to related Web pages",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G125"
          },
          { "type"  : 11,
            "title" : "G126: Providing a list of links to all other Web pages",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G126"
          },
          { "type"  : 11,
            "title" : "G161: Providing a search function to help users find content",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G161"
          },
          { "type"  : 11,
            "title" : "G185: Linking to all of the pages on the site from the home page",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G185"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify that this web page can be found from other web pages in the website using at least two of the following features: from a website search feature, from a list of links for navigation from at least one other page in the website, and/or from a page in the web site that serves as site map",
           "MANUAL_CHECK_P": "Verify that this web page can be found from other web pages in the website using at least two of the following features: from a website search feature, from a list of links for navigation from at least one other page in the website, and/or from a page in the web site that serves as site map",
           "NOT_APPLICABLE": "Single page web resource, no other pages to link or to search from"    
        },
        "node_result_messages" : {
           "WEBSITE_MC_1": "This page has a @navigation@ and @search@ landmark, if they both can be used for navigation of the content in this website, this rule passes, otherwise other navigation techniques also need to be available",
           "WEBSITE_MC_2": "Verify that this page can be found from at least two of the following website features: from a website search feature, from a list of links for navigation from at least one other page in the website, and/or from a page in the web site that serves as site map",
           "ELEMENT_MC_1": "Verify this @navigation@ landmark can be used for navigation of the content in this website, if it does it can be used to help satisfy this rule",
           "ELEMENT_MC_2": "Verify this @search@ landmark can be used for for navigation of the content in this website, if it does it can be used to help satisfy this rule"    
        }
      },
      {
        "rule_id" : "NAVIGATION_2",
        "scope" : 3,
        "wcag_primary" : "3.2.3",
        "wcag_related" : ["3.2.4"],
        "last_updated" : "2013-08-28",
        "target_resources" : ["Website","role='main'","role='navigation'","role='banner'","role='contentinfo'","role='search'"],
        "rule_category" : 64,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var main_count        = 0;\n    var navigation_count  = 0;\n    var banner_count      = 0;\n    var contentinfo_count = 0;\n    var search_count      = 0;\n    \n    var LANDMARK_ROLE = 'navigation';\n    \n    var les = [];\n\n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      \n      if (le.role === 'main') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_1', []);\n          \n          if (main_count === 0) les.push('main');\n          \n          main_count += 1;\n        }  \n      }  \n      \n      if (le.role === 'navigation') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_2', []);\n          \n          if (navigation_count === 0) les.push('navigation');\n          \n          navigation_count += 1;\n        }\n      }  \n      \n      if (le.role === 'banner') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_3', []);\n          \n          if (banner_count === 0) les.push('banner');\n          \n          banner_count += 1;\n        }  \n      }  \n\n      if (le.role === 'contentinfo') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_4', []);\n          \n          if (contentinfo_count === 0) les.push('contentinfo');\n          \n          contentinfo_count += 1;\n        }  \n      }  \n      \n      if (le.role === 'search') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'ELEMENT_MC_5', []);\n          \n          if (search_count === 0) les.push('search');\n          \n          search_count += 1;\n        }  \n      }  \n      \n    }\n\n    if (page_element) {\n      if ((main_count > 0) && (navigation_count > 0)) {    \n          \n          var last = les.length - 1;\n          var landmark_list = les[0];\n          \n          for (i = 1; i < les.length; i++) {\n            if (i === last) landmark_list += ' and ' + les[i];\n            else landmark_list += ', ' + les[i];\n          }\n          \n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_1', [landmark_list]);\n      }  \n      else {\n        if ((main_count === 0) && (navigation_count !== 0)) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'WEBSITE_FAIL_1', []);\n        else if ((main_count !== 0) && (navigation_count === 0)) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'WEBSITE_FAIL_2', []);\n        else rule_result.addResult(TEST_RESULT.FAIL, page_element, 'WEBSITE_FAIL_3', []);\n      }  \n    } \n  }",
        "nls_rule_id" : "Navigation Rule 2",
        "definition" : "Consistent ordering of main, navigation, search, banner and contentinfo landmarks on each page of a website",
        "summary" : "Ordering of landmarks",
        "target_resource_desc" : "@main@, @navigation@, @search@, @banner@ and @contentinfo@ landmarks",
        "purpose" : [
          "One of the fundamental aspects of the web is to find useful information, consistent ordering to landmarks within the pages of a website will make it easier for people to find information and navigate between pages within the website."
        ],
        "techniques" : [
           "Include @main@, @navigation@, @banner@ and @contentinfo@ landmarks in your page templates for the website",
           "If the website includes a website search form use the @search@ landmark",
          "Use consistent ordering on each web page within a website of the @main@, @navigation@, @search@, @banner@ and @contentinfo@ landmarks"
        ],
        "manual_checks" : [
          "Verify the ordering of the  @main@, @navigation@, @search@, @banner@ and @contentinfo@ landmarks on this web page and make sure the ordering is consistent with the ordering of these landmarks on other pages"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0: Landmark Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark_roles"
          },
          { "type"  : 11,
            "title" : "G61: Presenting repeated components in the same relative order each time they appear",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G61"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify that this web page uses the same ordering of @main@, @navigation@, @banner@, @contentinfo@ and @search@ landmarks as other pages with the website",
           "MANUAL_CHECK_P": "Verify that this web page uses the same ordering of @main@, @navigation@, @banner@, @contentinfo@ and @search@ landmarks as other pages with the website",
           "FAIL_S": "@main@ and/or @navigation@ landmarks need to added to this page",
           "FAIL_P": "@main@ and/or @navigation@ landmarks need to added to this page",
           "NOT_APPLICABLE": "Single page web resource, so consisting ordering with other pages in a website do not apply"    
        },
        "node_result_messages" : {
           "WEBSITE_FAIL_1": "Add a @main@ landmark to the page and make sure it is in the same relative order as the @main@ landmark in other pages of the website",
           "WEBSITE_FAIL_2": "Add a @navigation@ landmark to the page and make sure it is in the same relative order as the @navigation@ landmark in other pages of the website",
           "WEBSITE_FAIL_3": "Add @main@ and @navigation@ landmarks to the page and make sure they are in the same relative order as the @main@ and @navigation@ landmark in other pages of the website",
           "WEBSITE_MC_1": "Verify that this web page uses the same ordering of following landmarks as other pages in the wesbite: %1",
           "ELEMENT_MC_1": "Verify the @main@ landmark is same relative order to other landmarks as other web pages within this website",
           "ELEMENT_MC_2": "Verify the @navigation@ landmark is same relative order to other landmarks as other web pages within this website",
           "ELEMENT_MC_3": "Verify the @banner@ landmark is same relative order to other landmarks as other web pages within this website",
           "ELEMENT_MC_4": "Verify the @contentinfo@ landmark is same relative order to other landmarks as other web pages within this website",
           "ELEMENT_MC_5": "Verify the @search@ landmark is same relative order to other landmarks as other web pages within this website"    
        }
      },
      {
        "rule_id" : "NAVIGATION_3",
        "scope" : 3,
        "wcag_primary" : "3.2.3",
        "wcag_related" : ["3.2.4"],
        "last_updated" : "2013-08-28",
        "target_resources" : ["Website","h2"],
        "rule_category" : 64,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n  \n    var heading_elements     = dom_cache.headings_landmarks_cache.heading_elements;\n    var heading_elements_len = heading_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var heading_count = 0;\n    \n    for (var i = 0; i < heading_elements_len; i++ ) {\n      var he = heading_elements[i];\n\n      if ((he.level === 1) &&\n         (he.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE)) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, he, 'ELEMENT_MC_1', []);\n          heading_count += 1;\n      }        \n\n      if ((he.level === 2) &&\n         (he.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE)) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, he, 'ELEMENT_MC_2', []);\n          heading_count += 1;\n      }        \n    }\n\n    if (page_element) {\n       if (heading_count) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_1', []);\n       else rule_result.addResult(TEST_RESULT.FAIL, page_element, 'WEBSITE_FAIL_1', []);\n    } \n       \n\n  }",
        "nls_rule_id" : "Navigation Rule 3",
        "definition" : "Consistent ordering of @h1@ and @h2@ elements that mark major sections on each page of a website",
        "summary" : "Ordering of @h1@ one @h2@ elements",
        "target_resource_desc" : "@h1@ and @h2@ elements used to identify major sections of web pages within a website",
        "purpose" : [
          "One of the fundamental aspects of the web is to find useful information, consistent ordering of @h2@ elements to mark major sections of a web page within the pages of a website will make it easier for people to find information and navigate between pages within the website."
        ],
        "techniques" : [
           "Use @h1@ elements to identify the main content within a web page",
          "Use @h2@ elements to identify other major sections within web pages (i.e. navigation bars, web site search forms, footer information..)"
        ],
        "manual_checks" : [
          "View the @h1@ and @h2@ heading strcuture of the page, and verify it has the same relative order as other pages within the website"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0: Landmark Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark_roles"
          },
          { "type"  : 11,
            "title" : "G61: Presenting repeated components in the same relative order each time they appear",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G61"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify that this web page uses the same ordering of @h2@ elements used to mark major sections of a web page as other pages with the website",
           "MANUAL_CHECK_P": "Verify that this web page uses the same ordering of @h2@ elements used to mark major sections of a web page as other pages with the website",
           "FAIL_S": "No @h1@ or @h2@ elements found on the page",
           "FAIL_P": "No @h1@ or @h2@ elements found on the page",
           "NOT_APPLICABLE": "Single page web resource, no other pages to have consistent ordering of landmarks"    
        },
        "node_result_messages" : {
           "WEBSITE_FAIL_1": "No @h1@ or @h2@ elements found on the page",
           "WEBSITE_MC_1": "Verify that this web page uses the same ordering of @h2@ elements used to mark major sections of a web page as other pages with the website",
           "ELEMENT_MC_1": "Verify the if this @h1@ heading is used to identify a main content of the web page and it is in the the same relative order to other @h2@ element major section headings as other web pages within this website",
           "ELEMENT_MC_2": "Verify the if this @h2@ heading is used to identify a major section on a web page it is in the the same relative order to other @h2@ element major section headings as other web pages within this website"    
        }
      },
      {
        "rule_id" : "NAVIGATION_4",
        "scope" : 3,
        "wcag_primary" : "3.2.3",
        "wcag_related" : ["3.2.4"],
        "last_updated" : "2013-10-28",
        "target_resources" : ["Website","role='search'","role='navigation'","role='main'","role='banner'","role='contentinfo'","h2"],
        "rule_category" : 64,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var SOURCE      = OpenAjax.a11y.SOURCE;\n  \n    var landmark_elements     = dom_cache.headings_landmarks_cache.landmark_elements;\n    var landmark_elements_len = landmark_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var landmark_count = 0;\n    \n    var LANDMARK_ROLE = 'navigation';\n\n    for (var i = 0; i < landmark_elements_len; i++ ) {\n      var le = landmark_elements[i];\n      \n      if (le.role === 'main') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'PAGE_1', []);\n          landmark_count += 1;\n        }  \n      }  \n      \n      if (le.role === 'navigation') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'PAGE_2', []);\n          landmark_count += 1;\n        }\n      }  \n      \n      if (le.role === 'search') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'PAGE_3', []);\n          landmark_count += 1;\n        }  \n      }  \n      \n      if (le.role === 'banner') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'PAGE_4', []);\n          landmark_count += 1;\n        }  \n      }  \n\n      if (le.role === 'contentinfo') {\n        if (le.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, le, 'PAGE_5', []);\n          landmark_count += 1;\n        }  \n      }  \n      \n    }\n\n    if (page_element) {\n      if (landmark_count) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_1', []);\n      else rule_result.addResult(TEST_RESULT.FAIL, page_element, 'WEBSITE_FAIL_1', []);\n    } \n       \n\n  }",
        "nls_rule_id" : "Navigation Rule 4",
        "definition" : "Consistent labeling of main, navigation, search, banner and contentinfo landmarks on each page of a website",
        "summary" : "Labeling of landmarks",
        "target_resource_desc" : "@main@, @navigation@, @search@, @banner@ and @contentinfo@ landmarks",
        "purpose" : [
          "One of the fundamental aspects of the web is to find useful information, consistent labeling of repeated landmark content within the pages of a website will make it easier for people to find information and navigate between pages within the website."
        ],
        "techniques" : [
           "Include a @main@, @navigation@, @banner@ and @contentinfo@ landmarks in your page templates for the website",
           "If the website includes a website search form use the @search@ landmark",
           "Landmarks only need labels (i.e. using @aria-label@ or @aria-labelledby@) if there is more than one landmark of the same type on a web page",
          "If landmarks have labels, use consistent labeling of the landmarks on each web page within a website"
        ],
        "manual_checks" : [
           "Verfiy the main content of the page is in the @main@ landmark",
           "Verfiy redundent content of the top of the page is in a @banner@ landmark",
           "Verfiy website navigational links are in @navigation@ landmarks",
           "Verfiy redundent content of the bottom of the page is in a @contentinfo@ landmark",
          "If a landmark has a label and the landmark content is on other pages in the website, the labels are the same on each page"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0: Landmark Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark_roles"
          },
          { "type"  : 11,
            "title" : "G61: Presenting repeated components in the same relative order each time they appear",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G61"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify that this web page uses the same labeling of @main@, @navigation@, @search@, @banner@ and @contentinfo@ landmarks as other pages with the website",
           "MANUAL_CHECK_P": "Verify that this web page uses the same labeling of @main@, @navigation@, @search@, @banner@ and @contentinfo@ landmarks as other pages with the website",
           "FAIL_S": "No landmarks found on the page",
           "FAIL_P": "No landmarks found on the page",
           "NOT_APPLICABLE": "Single page web resource, no other pages to have consistent ordering of landmarks"    
        },
        "node_result_messages" : {
           "WEBSITE_FAIL_1": "No landmarks found on the page",
           "WEBSITE_MC_1": "Verify the sequence of landmarks has the same labeling as the landmarks on other web pages within this website",
           "ELEMENT_MC_1": "Verify the @main@ landmark has the same labeling as the @main@ landmarks on other web pages within this website",
           "ELEMENT_MC_2": "Verify the @navigation@ landmark has the same labels as the same @navigation@ landmarks on other web pages within this website",
           "ELEMENT_MC_3": "Verify the @banner@ landmark has the same labels as the same @banner@ landmarks on other web pages within this website",
           "ELEMENT_MC_4": "Verify the @contentinfo@ landmark has the same labels as the same @contentinfo@ landmarks on other web pages within this website",
           "ELEMENT_MC_5": "Verify the @search@ landmark has the same labels as the same @search@ landmarks on other web pages within this website"    
        }
      },
      {
        "rule_id" : "NAVIGATION_5",
        "scope" : 3,
        "wcag_primary" : "3.2.3",
        "wcag_related" : ["3.2.4"],
        "last_updated" : "2013-10-28",
        "target_resources" : ["Website","h2"],
        "rule_category" : 64,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n  \n    var heading_elements     = dom_cache.headings_landmarks_cache.heading_elements;\n    var heading_elements_len = heading_elements.length;\n\n    var page_element = dom_cache.headings_landmarks_cache.page_element;\n\n    var heading_count = 0;\n    \n    for (var i = 0; i < heading_elements_len; i++ ) {\n      var he = heading_elements[i];\n\n      if ((he.level === 1) &&\n         (he.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE)) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, he, 'ELEMENT_MC_1', []);\n          heading_count += 1;\n      }        \n\n      if ((he.level === 2) &&\n         (he.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE)) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, he, 'ELEMENT_MC_2', []);\n          heading_count += 1;\n      }        \n    }\n\n    if (page_element) {\n       if (heading_count) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, page_element, 'WEBSITE_MC_1', []);\n       else rule_result.addResult(TEST_RESULT.FAIL, page_element, 'WEBSITE_FAIL_1', []);\n    } \n       \n\n  }",
        "nls_rule_id" : "Navigation Rule 5",
        "definition" : "Consistent ordering of @h1@ and @h2@ elements that mark major sections on each page of a website",
        "summary" : "Ordering of @h1@ one @h2@ elements",
        "target_resource_desc" : "@h1@ and @h2@ elements used to identify major sections of web pages within a website",
        "purpose" : [
          "One of the fundamental aspects of the web is to find useful information, consistent ordering of @h2@ elements to mark major sections of a web page within the pages of a website will make it easier for people to find information and navigate between pages within the website."
        ],
        "techniques" : [
           "Use @h1@ elements to identify the main content within a web page",
          "Use @h2@ elements to identify other major sections within web pages (i.e. navigation bars, web site search forms, footer information..)"
        ],
        "manual_checks" : [
          "View the @h1@ and @h2@ heading strcuture of the page, and verify it has the same relative order as other pages within the website"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0: Landmark Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark_roles"
          },
          { "type"  : 11,
            "title" : "G61: Presenting repeated components in the same relative order each time they appear",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G61"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify that this web page uses the same ordering of @h2@ elements used to mark major sections of a web page as other pages with the website",
           "MANUAL_CHECK_P": "Verify that this web page uses the same ordering of @h2@ elements used to mark major sections of a web page as other pages with the website",
           "FAIL_S": "No @h1@ or @h2@ elements found on the page",
           "FAIL_P": "No @h1@ or @h2@ elements found on the page",
           "NOT_APPLICABLE": "Single page web resource, no other pages to have consistent ordering of landmarks"    
        },
        "node_result_messages" : {
           "WEBSITE_FAIL_1": "No @h1@ or @h2@ elements found on the page",
           "WEBSITE_MC_1": "Verify that this web page uses the same ordering of @h2@ elements used to mark major sections of a web page as other pages with the website",
           "ELEMENT_MC_1": "Verify the if this @h1@ heading is used to identify a main content of the web page and it is in the the same relative order to other @h2@ element major section headings as other web pages within this website",
           "ELEMENT_MC_2": "Verify the if this @h2@ heading is used to identify a major section on a web page it is in the the same relative order to other @h2@ element major section headings as other web pages within this website"    
        }
      },
      {
        "rule_id" : "TABLE_1",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.6"],
        "last_updated" : "2012-09-23",
        "target_resources" : ["td"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["headers","header_content","header_source"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     function allReadyDone(span_cell) {\n     \n       var span_cells_len = span_cells.length;\n     \n       for (var i = 0; i < span_cells_len; i++) {\n         if (span_cell === span_cells[i]) return true;\n       }\n       \n       span_cells.push(span_cell);\n       return false;\n     }\n   \n     var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n     var HEADER_SOURCE = OpenAjax.a11y.HEADER_SOURCE;\n     var VISIBILITY    = OpenAjax.a11y.VISIBILITY;\n   \n     var span_cells = [];\n   \n     var info_row;\n     var info_column;\n      \n     var table_elements   = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n     \n//     OpenAjax.a11y.logger.debug('=== Table Rule 1 ===');\n\n//     OpenAjax.a11y.logger.debug(' Table Elements on page: ' + table_elements_len);\n     \n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (var i=0; i < table_elements_len; i++) {\n         var te = table_elements[i];\n         var is_visible_to_at = te.dom_element.computed_style.is_visible_to_at;\n\n//         OpenAjax.a11y.logger.debug(' Table Element: ' + te + '   is data table: ' + te.table_role);\n\n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.DATA) {\n     \n           var max_row    = te.max_row;\n           var max_column = te.max_column;\n           var cells      = te.cells;\n\n           for (var r = 0; r < max_row; r++) {\n             for (var c = 0; c < max_column; c++) {\n           \n               var cell = cells[r][c];\n             \n               if (cell && cell.table_type  === OpenAjax.a11y.TABLE.TD_ELEMENT) {\n                 \n                 if (is_visible_to_at == VISIBILITY.VISIBLE) {\n           \n                   if(cell.has_spans && allReadyDone(cell)) continue;\n                 \n                   if(te.is_complex_data_table) {\n                     if (cell.text_content_for_comparison.length === 0) {\n                       rule_result.addResult(TEST_RESULT.MANUAL_CHECK, cell, 'ELEMENT_MC_1', []);\n                     }  \n                     else {\n                       if (cell.header_source === HEADER_SOURCE.HEADERS_ATTRIBUTE) {\n                         if (cell.header_content.length > 0) {\n                           rule_result.addResult(TEST_RESULT.PASS, cell, 'ELEMENT_PASS_1', [cell.headers]);\n                         }\n                         else {\n                           rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_4', [cell.headers]);                       \n                         }\n                       }  \n                       else {\n                       \n//         OpenAjax.a11y.logger.debug('  Cell: ' + cell + ' headers: ' + cell.headers);\n                         \n                         if (cell.headers && cell.headers.length > 0) {\n                           rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_5', [cell.headers]);\n                         }\n                         else {\n                           rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_1', []);\n                         }  \n                       }\n                     }  \n                   }\n                   else {\n                     if (cell.text_content_for_comparison.length === 0) {\n                       rule_result.addResult(TEST_RESULT.MANUAL_CHECK, cell, 'ELEMENT_MC_1', []);\n                     }\n                     else {\n                       if (cell.header_source === HEADER_SOURCE.HEADERS_ATTRIBUTE) {\n                         if (cell.header_content.length > 0) {\n                           rule_result.addResult(TEST_RESULT.PASS, cell, 'ELEMENT_PASS_1', [cell.headers]);\n                         }\n                         else {\n                           rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_4', [cell.headers]);                       \n                         }\n                       }  \n                       else {\n                         if (cell.header_source === HEADER_SOURCE.ROW_OR_COLUMN_HEADERS) {\n                           if (cell.header_content.length > 0) {\n                             rule_result.addResult(TEST_RESULT.PASS, cell, 'ELEMENT_PASS_2', []);\n                           }\n                           else {\n                             rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_3', []);                       \n                           }\n                         } \n                         else {\n                           if (cell.headers && cell.headers.length > 0) {\n                             rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_5', [cell.headers]);\n                           }\n                           else {\n                             rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_2', []);\n                           }  \n                         }\n                       }\n                     }  \n                   }\n                 }\n                 else {\n                  rule_result.addResult(TEST_RESULT.HIDDEN, cell, 'ELEMENT_HIDDEN_1', []);     \n                 }\n               }\n             }             \n           }\n         }   \n       } // end loop\n     }   \n   }",
        "nls_rule_id" : "Table Rule 1",
        "definition" : "Data cells in data tables %s have header cells",
        "summary" : "Data cells %s have headers",
        "target_resource_desc" : "@td@ elements",
        "purpose" : [
          "Data cells need header cells for people using speech to understand the content of the table cell, since they cannot see the visual relationships with header cells"
        ],
        "techniques" : [
           "Use @th@ elements in the first row or column to identify row and column headers in a simple data tables",
           "Use @headers@ attribute on each @td@ element to identify header information in complex data tables",
           "Use @th@ element for cells used as header cells in the table",
          "While not recommended, it is valid to use @td@ element with a @scope@ attribute as header cell"
        ],
        "manual_checks" : [
          "Verify that empty @td@ and @th@ elements and does not need table headers"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 11.2.6 Table cells: The TH and TD elements",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#edef-TD"
          },
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: scope attribute",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#adef-scope"
          },
          { "type"  : 11,
            "title" : "H51: Using table markup to present tabular information",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H51"
          },
          { "type"  : 11,
            "title" : "H63: Using the scope attribute to associate header cells and data cells in data tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H63"
          },
          { "type"  : 2,
            "title" : "IBM Web checklist Checkpoint 1.3e: Tables",
            "url"   : "http://www-03.ibm.com/able/guidelines/web/webtableheaders.html"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Simple Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-simple.php"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Complex Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-complex.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add @th@ or @td[scope]@ elements to the first row or column of the data table or add a @headers@ attribute to define the headers for the data cell",
           "FAIL_P": "Add @th@ or @td[scope]@ elements to the first row or column of the table or use the @headers@ attribute to define headers for the data cell",
           "MANUAL_CHECK_S": "The @td@ element does not have any text content and it does not have any header cells, verify that this cell is being used for formatting and does not need headers",
           "MANUAL_CHECK_P": "There are %N_F @td@ elements that do not have any text content and do not have any header cells, verify that thess cells are being used for formatting and do not need headers",
           "HIDDEN_S": "The @td@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @td@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No data tables and/or cells in the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The header comes from the @headers@ attribute with the following ids: '%1'",
           "ELEMENT_PASS_2": "The header comes from row and/or column header",
           "ELEMENT_FAIL_1": "Add header cells using the @headers@ attribute, since this table is a complex table",
           "ELEMENT_FAIL_2": "Add header cells using row and/or column @th@ elements, or the @headers@ attribute",
           "ELEMENT_FAIL_3": "Add text content to the row and/or column header cells",
           "ELEMENT_FAIL_4": "Add text content to the header cells with the following ids: '%1'",
           "ELEMENT_FAIL_5": "Change the idrefs '%1' in the @headers@ attribute to valid ids",
           "ELEMENT_MC_1": "The @td@ element does not have any text content and it does not have any header cells, verify that this cell is being used for formatting and does not need headers",
           "ELEMENT_HIDDEN_1": "Header cells for data cells was not tested because the @td@ element is hidden from assistive technologies"    
        }
      },
      {
        "rule_id" : "TABLE_2",
        "scope" : 1,
        "wcag_primary" : "1.3.2",
        "wcag_related" : ["4.1.2"],
        "last_updated" : "2013-12-19",
        "target_resources" : ["caption","aria-label","aria-labelledby","titlr"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["table_role","accessible_name","accessible_name_source"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n     var SOURCE      = OpenAjax.a11y.SOURCE;\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n\n     var table_elements     = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n\n     var data_tables = [];\n     var visible_data_tables = 0;\n     \n     var i, te, is_visible_to_at;\n\n     OpenAjax.a11y.logger.debug('Number of tables: ' + table_elements_len);\n\n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n       \n       for (i = 0; i < table_elements_len; i++) {\n         te = table_elements[i];\n       \n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.DATA) { \n           data_tables.push(te);\n           if (te.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) visible_data_tables++;\n         }\n       } // end loop\n\n       OpenAjax.a11y.logger.debug('Number of data tables: ' + visible_data_tables);\n\n       if (visible_data_tables > 1) {\n       \n         for (i = 0; i < data_tables.length; i++) {\n           te = table_elements[i];\n       \n           if (te.dom_element.computed_style.is_visible_to_at === VISIBILITY.VISIBLE) {\n           \n             if (te.accessible_name_length > 0) {\n             \n                switch (te.accessible_name_source) {\n                \n                case SOURCE.TABLE_CAPTION:\n                   rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_1', [te.accessible_name]);\n                   break;\n                   \n                case SOURCE.TABLE_SUMMARY:\n                   rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_2', [te.accessible_name]);\n                   break;\n                   \n                case SOURCE.ARIA_LABEL:\n                   rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_3', [te.accessible_name]);\n                   break;\n                   \n                case SOURCE.ARIA_LABELLEDBY:\n                   rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_4', [te.accessible_name]);\n                   break;\n                   \n                case SOURCE.TITLE_ATTRIBUTE:\n                   rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_5', [te.accessible_name]);\n                   break;\n                default:\n                \n                   break;\n               }\n             }  \n             else {\n              rule_result.addResult(TEST_RESULT.FAIL, te, 'ELEMENT_FAIL_1', []);\n            }  \n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, te, 'ELEMENT_HIDDEN_1', []);     \n           }\n         } // end loop\n       }\n     } \n   }",
        "nls_rule_id" : "Table Rule 2",
        "definition" : "If there is more than one data table on the same page each data table %s have an accessible name",
        "summary" : "Data tables %s have name",
        "target_resource_desc" : "@table@",
        "purpose" : [
          "An accessible name for a data table is important for people using assistive technologies to understand the purpose of the table"
        ],
        "techniques" : [
           "Use @caption@ element to provide an accessible name",
           "Use @aria-label@ attribute to provide an accessible name",
           "Use @aria-labelledby@ attribute to provide an accessible name",
          "If the table is not used for tabular data, but instead for layout of content, use the @role='presentation'@ on all the table elements"
        ],
        "manual_checks" : [
          "Make sure the content of the accessibe name accurately and succinctly describes the purpose of the data table"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 11.2.2 Table Captions: The CAPTION element",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#h-11.2.2"
          },
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: summary attribute",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#adef-summary"
          },
          { "type"  : 11,
            "title" : "H39: Using caption elements to associate data table captions with data tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H39"
          },
          { "type"  : 11,
            "title" : "H73: Using the summary attribute of the table element to give an overview of data tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H73"
          },
          { "type"  : 11,
            "title" : "F46: Failure of Success Criterion 1.3.1 due to using th elements, caption elements, or non-empty summary attributes in layout tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F46"
          },
          { "type"  : 2,
            "title" : "IBM Web checklist Checkpoint 1.3e: Tables",
            "url"   : "http://www-03.ibm.com/able/guidelines/web/webtableheaders.html"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Simple Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-simple.php"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Complex Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-complex.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add @caption@ element, @aria-label@ or @aria-labelledby@ attribute to provide an accessible name ot the data table",
           "FAIL_P": "Add @caption@ element, @aria-label@ or @aria-labelledby@ attribute to each of the %N_F out of %N_T data tables to provide an effective caption",
           "HIDDEN_S": "The @table@ and/or @caption@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @table@ elements and/or @caption@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "Less than two data tables on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "Data table has an accessible name using the @caption@ element: '%1'",
           "ELEMENT_PASS_2": "Data table has an accessible name using the @summary@ attribute with content: '%1'",
           "ELEMENT_PASS_3": "Data table has an accessible name using the @aria-label@ attribute with content: '%1'",
           "ELEMENT_PASS_4": "Data table has an accessible name using the @aria-labelledby@ attribute with content: '%1'",
           "ELEMENT_PASS_5": "Data table has an accessible name using the @title@ attribute with content: '%1'",
           "ELEMENT_FAIL_1": "Add @caption@ element, @aria-label@ or @aria-labelledby@ attribute to provide an accessible name for the table",
           "ELEMENT_HIDDEN_1": "@table@ element is hidden from assistive technologies and not evaluated for an accessible name"    
        }
      },
      {
        "rule_id" : "TABLE_3",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.6"],
        "last_updated" : "2013-12-20",
        "target_resources" : ["aria-describedby","table[sumary]"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["table_role","accessible_name","cell_count","accessible_description"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n     \n     var LARGE_TABLE_CELL_COUNT = 64;\n     \n     var table_elements     = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n\n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (var i = 0; i < table_elements_len; i++) {\n         var te = table_elements[i];\n         var is_visible_to_at = te.dom_element.computed_style.is_visible_to_at;\n      \n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.DATA) {\n         \n           if (is_visible_to_at == VISIBILITY.VISIBLE) {\n\n              if (te.accessible_description.length > 0) {\n                rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_1', []);\n              }\n              else {\n                if ((te.cell_count >= LARGE_TABLE_CELL_COUNT) ||\n                    te.is_complex_data_table) {    \n                 rule_result.addResult(TEST_RESULT.FAIL, te, 'ELEMENT_FAIL_1', []);     \n                }\n                else {\n                  rule_result.addResult(TEST_RESULT.MANUAL_CHECK, te, 'ELEMENT_MC_1', []);     \n                }\n             }   \n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, te, 'ELEMENT_HIDDEN_1', []);     \n           }\n         }\n       } // end loop\n     }\n   }",
        "nls_rule_id" : "Table Rule 3",
        "definition" : "Large or complex data tables %s have a text description or summary of data in the table",
        "summary" : "Data tables %s have description",
        "target_resource_desc" : "@aria-describedby@ or @table[summary]@ attribute",
        "purpose" : [
           "For large or complex tables it may take a lot of time for users of asssitive technology to explore the content of a table.",
          "Providing a text description of the content of the table or a summary of the conclusions that could be interpreted from the content of the table will make it easier for users of assistive technology to understand the content of the table."
        ],
        "techniques" : [
          "Use the  @aria-describedby@ attribute to provide a reference to a text description or summary of a data table"
        ],
        "manual_checks" : [
          "Verify the content of the text description or summary accurately describes the contents of the table"
        ],
        "informational_links" : [
          { "type"  : 2,
            "title" : "IBM Web checklist Checkpoint 1.3e: Tables",
            "url"   : "http://www-03.ibm.com/able/guidelines/web/webtableheaders.html"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Simple Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-simple.php"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Complex Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-complex.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "For the complex data table without a description, add @aria-describedby@ attribute to point to a text description or summary of the content in the table",
           "FAIL_P": "For the %N_F complex data tables without descriptiona, add @aria-describedby@ attribute to point to a text description or summary of the content for each table",
           "MANUAL_CHECK_S": "For the simple data table without a description, consider adding an @aria-describedby@ attribute to point to a text description or summary of the content in the table",
           "MANUAL_CHECK_P": "For the %N_F simple data tables without descriptions, consider adding an @aria-describedby@ attribute to point to a text description or summary of the content for each table",
           "HIDDEN_S": "The data @table@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H data @table@ elements elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No data tables on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @table@ element has an accessible description through the @aria-describedby@ reference",
           "ELEMENT_FAIL_1": "This is a complex table, add @aria-describedby@ attribute to point to a text description or summary of the content of the table",
           "ELEMENT_MC_1": "This is a simple table, consider adding an @aria-describedby@ attribute to point to a text description or summary of the content of the table",
           "ELEMENT_HIDDEN_1": "The @table@ element is hidden and therefore not evaluated"    
        }
      },
      {
        "rule_id" : "TABLE_4",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.6"],
        "last_updated" : "2013-09-23",
        "target_resources" : ["caption","aria-label","aria-labelledby"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["accessible_name","accessible_name_source"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY    = OpenAjax.a11y.VISIBILITY;\n   \n     var span_cells = [];\n   \n     var info_row;\n     var info_column;\n      \n     var table_elements   = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n     \n     var table_visible = [];\n     var i;\n     \n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (i = 0; i < table_elements_len; i++) {\n         var te = table_elements[i];\n         var is_visible_to_at = te.dom_element.computed_style.is_visible_to_at;\n\n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.DATA) {\n     \n           if (te.accessible_name_length > 0) {             \n           \n             if (is_visible_to_at == VISIBILITY.VISIBLE) { \n               table_visible.push(te);                          \n             }\n             else {\n               rule_result.addResult(TEST_RESULT.HIDDEN, te, 'ELEMENT_HIDDEN_1', []);              \n             }\n           }\n         }   \n       } // end loop\n       \n       table_visible.sort(function(a,b) {return a.accessible_name_for_comparison < b.accessible_name_for_comparison;});\n       \n       for (i = 1; i < table_visible.length;) {\n         te1 = table_visible[i-1];\n         te2 = table_visible[i];\n         \n         if (te1.accessible_name_for_comparison === te2.accessible_name_for_comparison) {\n           rule_result.addResult(TEST_RESULT.FAIL, te1, 'ELEMENT_FAIL_1', [te1.accessible_name]);\n           rule_result.addResult(TEST_RESULT.FAIL, te2,   'ELEMENT_FAIL_1', [te2.accessible_name]);\n           j = i + 1;\n           \n           while (( j < table_visible.length) && \n                  (te1.accessible_name_for_comparison === table_visible[j].accessible_name_for_comparison)) {\n             rule_result.addResult(TEST_RESULT.FAIL, table_visible[j], 'ELEMENT_FAIL_1', [table_visible[j].accessible_name]);\n             j++;\n           }\n           i = j;\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.PASS, te1, 'ELEMENT_PASS_1', [te1.accessible_name]);\n           i++;\n         }         \n       }\n       \n     }   \n   }",
        "nls_rule_id" : "Table Rule 4",
        "definition" : "Tables with accessible names %s be unique",
        "summary" : "Table names %s be unique",
        "target_resource_desc" : "@table@ elements",
        "purpose" : [
           "Data tables that share the same accessible name will be confusing to users of assistive technology, they will not be able to differentiate the differences in content of the data tables.",
          "If in the rare chance the tables have duplicate data, use 'Copy 1', 'Copy 2' and 'Copy X' as part of the accessible name of each table to make it clear there is more than one copy of the same information on the page."
        ],
        "techniques" : [
           "Use @caption@ element to provide an accessible name",
           "Use @aria-label@ attribute to provide an accessible name",
           "Use @aria-labelledby@ attribute to provide an accessible name",
          "If the table is not used for tabular data, but instead for layout of content, use the @role='presentation'@ on all the table elements"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 11.2.2 Table Captions: The CAPTION element",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#h-11.2.2"
          },
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: summary attribute",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#adef-summary"
          },
          { "type"  : 11,
            "title" : "H39: Using caption elements to associate data table captions with data tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H39"
          },
          { "type"  : 11,
            "title" : "H73: Using the summary attribute of the table element to give an overview of data tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H73"
          },
          { "type"  : 11,
            "title" : "F46: Failure of Success Criterion 1.3.1 due to using th elements, caption elements, or non-empty summary attributes in layout tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/F46"
          },
          { "type"  : 2,
            "title" : "IBM Web checklist Checkpoint 1.3e: Tables",
            "url"   : "http://www-03.ibm.com/able/guidelines/web/webtableheaders.html"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Simple Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-simple.php"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Complex Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-complex.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the accessible name of the @table@ to be unique",
           "FAIL_P": "Change the accessible names of the %N_F out of %N_T data tables that do not have unique accessible names to have unique accessible names",
           "HIDDEN_S": "The data @table@ element with an accessible name that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H data @table@ elements elements with accessible names that are hidden were not evaluated",
           "NOT_APPLICABLE": "No data tables on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The accessible name for the data table is unique: '%1'",
           "ELEMENT_FAIL_1": "Change the accessible name for the data table to be unique on the page: '%1'",
           "ELEMENT_HIDDEN_1": "The @table@ element is hidden so the accessible name was not evaluated: '%1'"    
        }
      },
      {
        "rule_id" : "TABLE_5",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.6"],
        "last_updated" : "2013-12-23",
        "target_resources" : ["table"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["table_role"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n     \n     var table_elements     = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n\n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (var i = 0; i < table_elements_len; i++) {\n         var te = table_elements[i];\n         var es = te.effective_summary_for_comparison;\n         var ec = te.effective_caption_for_comparison;\n         var is_visible_to_at = te.dom_element.computed_style.is_visible_to_at;\n\n         if (is_visible_to_at == VISIBILITY.VISIBLE) {\n\n           if (te.table_role === OpenAjax.a11y.TABLE_ROLE.DATA) rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_1', []);\n           else if (te.table_role === OpenAjax.a11y.TABLE_ROLE.LAYOUT) rule_result.addResult(TEST_RESULT.PASS, te, 'ELEMENT_PASS_2', []);\n           else rule_result.addResult(TEST_RESULT.FAIL, te, 'ELEMENT_FAIL_1', []);    \n         }\n         else {\n           rule_result.addResult(TEST_RESULT.HIDDEN, te, 'ELEMENT_HIDDEN_1', []);     \n         }\n       } // end loop\n     }\n   }",
        "nls_rule_id" : "Table Rule 5",
        "definition" : "A table %s be defined either as a data table or a layout table",
        "summary" : "Define purpose of table markup",
        "target_resource_desc" : "@table@ elements",
        "purpose" : [
           "The @table@ element is designed for representing tabular data in a web page, but table markup has also been used by web developers as a means to layout content in rows and columns.",
           "Users of assistive tehcnoogy are confised when the purpose of a table is not clearly defined (i.e. layout or for tabular data)",
           "Use @role='presentation'@ to clearly identify table elements used for layout",
           "Use an accessible name label to clearly identify a data table (e.g. layout tables must not have an accessible name)",
          "Use header cells to clearlt identify the content of data cells in a data table."
        ],
        "techniques" : [
           "Use @th@ elements in the first row or first column to identify a table as a data table.",
           "Use @caption@ or ARIA techniques to give a data table an accessible name.",
           "Use @role='presentation'@ on all the table elements in a table used layout table.",
          "Layout tables must only use the @tr@ and @td@ table elements for layout content."
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 11.2.6 Table cells: The TH and TD elements",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#edef-TD"
          },
          { "type"  : 11,
            "title" : "H51: Using table markup to present tabular information",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H51"
          },
          { "type"  : 11,
            "title" : "H63: Using the scope attribute to associate header cells and data cells in data tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H63"
          },
          { "type"  : 2,
            "title" : "IBM Web checklist Checkpoint 1.3e: Tables",
            "url"   : "http://www-03.ibm.com/able/guidelines/web/webtableheaders.html"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Simple Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-simple.php"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Complex Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-complex.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "For the table without headers or @role='presentation'@, define the purpose of the table by adding header cells if the table is being used for tabular data or use @role='presentation'@ on the table elements if the table is being used to layout content",
           "FAIL_P": "For the %N_F tables without headers or @role=presentation'@, define the purpose of the table by adding header cells if the table is being used for tabular data or use @role='presentation'@ on the table elements if the table is being used to layout content",
           "HIDDEN_S": "The @table@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @table@ elements elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No table markup found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @table@ is considered a data table, since it has header cells or an accessible name",
           "ELEMENT_PASS_2": "The @table@ is considered a layout table, since it has @role='presentation'@",
           "ELEMENT_FAIL_1": "Define the purpose of the table by adding header cells if the table is being used for tabular data or use @role='presentation'@ on the table element if the table is being used to layout content",
           "ELEMENT_HIDDEN_1": "Using @table@ element is hidden and therefore does not contribute to the accessibility of inaccessible of the page."    
        }
      },
      {
        "rule_id" : "TABLE_6",
        "scope" : 1,
        "wcag_primary" : "1.3.1",
        "wcag_related" : ["2.4.6"],
        "last_updated" : "2012-09-23",
        "target_resources" : ["td[scope]"],
        "rule_category" : 2,
        "language_dependency" : "",
        "cache_dependency" : "tables_cache",
        "resource_properties" : ["tag_name","scope"],
        "validate" : "function (dom_cache, rule_result) {\n\n     function allReadyDone(span_cell) {\n     \n       var span_cells_len = span_cells.length;\n     \n       for (var i = 0; i < span_cells_len; i++) {\n         if (span_cell === span_cells[i]) return true;\n       }\n       \n       span_cells.push(span_cell);\n       return false;\n     }\n   \n     var TEST_RESULT   = OpenAjax.a11y.TEST_RESULT;\n     var VISIBILITY    = OpenAjax.a11y.VISIBILITY;\n   \n     var span_cells = [];\n   \n     var info_row;\n     var info_column;\n      \n     var table_elements   = dom_cache.tables_cache.table_elements;\n     var table_elements_len = table_elements.length;\n     \n     // Check to see if valid cache reference\n     if (table_elements && table_elements_len) {\n     \n       for (var i=0; i < table_elements_len; i++) {\n         var te = table_elements[i];\n         var is_visible_to_at = te.dom_element.computed_style.is_visible_to_at;\n\n         if (te.table_role === OpenAjax.a11y.TABLE_ROLE.DATA) {\n     \n           var max_row    = te.max_row;\n           var max_column = te.max_column;\n           var cells      = te.cells;\n\n           for (var r = 0; r < max_row; r++) {\n             for (var c = 0; c < max_column; c++) {\n           \n               var cell = cells[r][c];\n             \n               if (cell && cell.table_type  === OpenAjax.a11y.TABLE.TH_ELEMENT) {\n                 \n                 if (is_visible_to_at == VISIBILITY.VISIBLE) {\n           \n                   if(cell.has_spans && allReadyDone(cell)) continue;\n                 \n                   if(cell.dom_element.tag_name === 'th') rule_result.addResult(TEST_RESULT.PASS, cell, 'ELEMENT_PASS_1', []);\n                   else rule_result.addResult(TEST_RESULT.FAIL, cell, 'ELEMENT_FAIL_1', []);\n                   \n                 }\n                 else {\n                  rule_result.addResult(TEST_RESULT.HIDDEN, cell, 'ELEMENT_HIDDEN_1', []);     \n                 }\n               }\n             }             \n           }\n         }   \n       } // end loop\n     }   \n   }",
        "nls_rule_id" : "Table Rule 6",
        "definition" : "Each data table header cell %s use th elements rather than td element with a scope attribute",
        "summary" : "Header cells %s be @th@ elements",
        "target_resource_desc" : "@th@ and @td[scope]@ elements",
        "purpose" : [
          "@th@ element is the web standards way to identify header cells in a table, makes the data table source code easier to read and debug for accessibility problems"
        ],
        "techniques" : [
           "Use @th@ elements in the first row or column to identify row and column headers in a simple data tables",
           "Use @headers@ attribute on each @td@ element to identify header information in complex data tables",
          "Use @th@ element for cells used as header cells in the table"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML 4.01 Specification: 11.2.6 Table cells: The TH and TD elements",
            "url"   : "http://www.w3.org/TR/html4/struct/tables.html#edef-TD"
          },
          { "type"  : 11,
            "title" : "H51: Using table markup to present tabular information",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H51"
          },
          { "type"  : 11,
            "title" : "H63: Using the scope attribute to associate header cells and data cells in data tables",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H63"
          },
          { "type"  : 2,
            "title" : "IBM Web checklist Checkpoint 1.3e: Tables",
            "url"   : "http://www-03.ibm.com/able/guidelines/web/webtableheaders.html"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Simple Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-simple.php"
          },
          { "type"  : 2,
            "title" : "iCITA HTML Best Practices: Complex Data Table Example",
            "url"   : "http://html.cita.illinois.edu/nav/dtable/dtable-example-complex.php"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change the @td[scope]@ element to a  @th@ element",
           "FAIL_P": "Change the @td[scope]@ element to a  @th@ element for each of the %N_F header cells using @td[scope]@",
           "HIDDEN_S": "The @table@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @table@ elements elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No td[scope]@ elements on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @th@ element is used for header cell",
           "ELEMENT_FAIL_1": "Change the @td[scope]@ element to a  @th@ element",
           "ELEMENT_HIDDEN_1": "Using @th@ element for header cells in a data table was not tested because the header cell is hidden from assistive technologies"    
        }
      },
      {
        "rule_id" : "TITLE_1",
        "scope" : 2,
        "wcag_primary" : "2.4.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-09-11",
        "target_resources" : ["Page","title"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name","name_for_comparison"],
        "validate" : "function (dom_cache, rule_result) {\n  \n      var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n  \n      var title_element  = dom_cache.headings_landmarks_cache.title_element;\n      \n      if (dom_cache.document_has_title) {\n      \n        if (title_element.name_for_comparison.length) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, title_element, 'PAGE_MC_1', []);                        \n        }\n        else {\n          rule_result.addResult(TEST_RESULT.FAIL, title_element, 'PAGE_FAIL_1', []);        \n        }\n      }\n      else {\n        rule_result.addResult(TEST_RESULT.FAIL, title_element, 'PAGE_FAIL_2', []);\n      }\n        \n    }",
        "nls_rule_id" : "Title Rule 1",
        "definition" : "@title@ element %s identify both the website and page content",
        "summary" : "@title@ %s identify website and page",
        "target_resource_desc" : "@title@",
        "purpose" : [
          "The @title@ element content can be accessed by assistive technologies to orient the user to the website and page content."
        ],
        "techniques" : [
           "Use @title@ element to identify the website and page content",
          "If the page is part of a sequence of web pages, include the sequence number and total number of steps in the @title@ element"
        ],
        "manual_checks" : [
           "If applicable, verify that the title of the page identifies the website to which it belongs",
           "Verify that the title of the page also identifies the page content",
          "If the web page is part of a sequence of web pages does the title describe which step it is in the sequence"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML TITLE Element Specification",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-TITLE"
          },
          { "type"  : 11,
            "title" : "G88: Providing descriptive titles for Web pages",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G88"
          },
          { "type"  : 11,
            "title" : "H25: Providing a title using the title element",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H25"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @title@ element identifies both the website (if applicable) and the page content",
           "FAIL_S": "Add @title@ element to the @head@ element section with text content that identifies both the website (if applicable) and the page content"    
        },
        "node_result_messages" : {
           "PAGE_MC_1": "Verify the @title@ element identifies both the website (if applicable) and the page content",
           "PAGE_FAIL_1": "Add content to @title@ element that identifies both the website (if applicable) and the page content",
           "PAGE_FAIL_2": "Add @title@ element to page that identifies both the website (if applicable) and the page content"    
        }
      },
      {
        "rule_id" : "TITLE_2",
        "scope" : 2,
        "wcag_primary" : "2.4.2",
        "wcag_related" : ["1.3.1","2.4.6"],
        "last_updated" : "2012-09-11",
        "target_resources" : ["Page","title","h1"],
        "rule_category" : 128,
        "language_dependency" : "",
        "cache_dependency" : "headings_landmarks_cache",
        "resource_properties" : ["tag_name","name","name_for_comparison"],
        "validate" : "function (dom_cache, rule_result) {\n  \n      function compareTextContent(s1, s2) {\n      \n        var words = s2.split(' ');\n        var words_len = words.length;\n        var words_match = 0;\n        var words_not_matched = 0;\n        var characters_match = 0;\n        var characters_not_matched = 0;\n\n//        OpenAjax.a11y.logger.debug('Comparison: ' + s1 + '/' + s2);\n\n        for (var i = 0; i < words_len; i++) {\n          var w = words[i];\n          if (s1.indexOf(w) >= 0) {\n            characters_match += w.length;\n            words_match++;\n          }  \n          else {\n            characters_not_matched += w.length;\n            words_not_matched++;\n          }  \n        }\n\n//        OpenAjax.a11y.logger.debug('Match Information: ' + (characters_match * words_match) + '/' + (characters_not_matched * words_not_matched));\n\n        if (characters_not_matched === 0) return true;\n        \n        var p = (100 * characters_match * words_match) / ((characters_match  * words_match) + (characters_not_matched * words_not_matched ));\n\n//        OpenAjax.a11y.logger.debug('Match Percentage: ' + p);\n\n        if (p > 80) return true;\n        \n        return false;\n      }\n  \n      var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n  \n      var title_element  = dom_cache.headings_landmarks_cache.title_element;\n      var page_element   = dom_cache.headings_landmarks_cache.page_element;\n      var h1_elements    = dom_cache.headings_landmarks_cache.h1_elements;\n      var visible_h1_element_count = 0;\n      var passed_h1_element_count  = 0;\n      \n      if (dom_cache.document_has_title && title_element.name_for_comparison.length) {\n      \n        for(var i = 0; i < h1_elements.length; i++) {\n          var h1 = h1_elements[i];\n          var de = h1.dom_element;\n          var cs = de.computed_style;\n\n          if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n            if (h1.name_for_comparison.length) {\n              visible_h1_element_count++;\n              if (compareTextContent(title_element.name_for_comparison, h1.name_for_comparison)) {\n                rule_result.addResult(TEST_RESULT.PASS, h1, 'ELEMENT_PASS_1', []);                        \n                passed_h1_element_count++;\n              }\n              else {\n                rule_result.addResult(TEST_RESULT.FAIL, h1, 'ELEMENT_FAIL_1', []);        \n              }\n            }\n            else {\n              rule_result.addResult(TEST_RESULT.FAIL, h1, 'ELEMENT_FAIL_2', []);        \n            }\n          }\n          else {\n            rule_result.addResult(TEST_RESULT.HIDDEN, h1, 'ELEMENT_HIDDEN_1', []);        \n          }  \n        }  \n        \n        if (visible_h1_element_count === 0) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_2', []);\n        else if (visible_h1_element_count > 2) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_3', []);\n        else if (visible_h1_element_count !== passed_h1_element_count) rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_4', []);\n        else if (visible_h1_element_count === 1) rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_1', []);\n        else rule_result.addResult(TEST_RESULT.PASS, page_element, 'PAGE_PASS_2', []);\n        \n      } \n      else {\n        rule_result.addResult(TEST_RESULT.FAIL, page_element, 'PAGE_FAIL_1', []);        \n      }\n    }",
        "nls_rule_id" : "Title Rule 2",
        "definition" : "@h1@ elements %s match part of the @title@ element content",
        "summary" : "@h1@ %s match part of the @title@",
        "target_resource_desc" : "@title@ and @h1@",
        "purpose" : [
           "The @h1@ elements can be accessed by assistive technologies to identify the page content and to orient users within the website.",
          "The @h1@ element may also be used to identify website information."
        ],
        "techniques" : [
           "Use the @h1@ element to identify the page content in the same or similar way as the @title@ element.",
           "The @h1@ element may also be used to identify the website in the same or similar way as the @title@ element.",
          "If the page is part of a sequence of web pages, the @h1@ element should indicate the step in the sequence."
        ],
        "manual_checks" : [
           "Verify that the @h1@ content identifies the page content",
           "If applicable, verify that the @h1@ content of the page identifies the website to which it belongs",
          "If the web page is part of a sequence of web pages, does the @h1@ content indicate the step number of the sequence"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HTML TITLE Element Specification",
            "url"   : "http://www.w3.org/TR/html4/struct/global.html#edef-TITLE"
          },
          { "type"  : 11,
            "title" : "G88: Providing descriptive titles for Web pages",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G88"
          },
          { "type"  : 11,
            "title" : "H25: Providing a title using the title element",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/H25"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @title@ and @h1@ element text content describes the purpose or the content of the page",
           "MANUAL_CHECK_P": "Verify the @title@ and @h1@ element text content describes the purpose or the content of the page",
           "FAIL_S": "Ajdust @h1@ elements on the page to make sure there is no more than two @h1@ elements on the page and/or update the @h1@ element to match part of the @title@ element"    
        },
        "node_result_messages" : {
           "PAGE_PASS_1": "The @h1@ element has the same or similar content as the @title@ element",
           "PAGE_PASS_2": "The @h1@ elements have the same or similar content as the @title@ element",
           "PAGE_FAIL_1": "Add @title@ element to the page before the @h1@ elements can be analyzed",
           "PAGE_FAIL_2": "Add @h1@ element to page at the beginning of the main content of the page",
           "PAGE_FAIL_3": "More than two @h1@ elements on the page, revise the heading structure of the page and reserve @h1@ elements for identifying the main content of the page",
           "PAGE_FAIL_4": "Update the @h1@ elements to be the same or similar content as the @title@ element",
           "ELEMENT_PASS_1": "The @h1@ element has the same or similar content as the @title@ element",
           "ELEMENT_FAIL_1": "The @h1@ element does NOT have the same or similar content as the @title@ element",
           "ELEMENT_FAIL_2": "Add content to @h1@ element, or remove it from the page",
           "ELEMENT_HIDDEN_1": "@h1@ element is hidden from assistive technology and therefore does not help provide a title for the page"    
        }
      },
      {
        "rule_id" : "VIDEO_1",
        "scope" : 1,
        "wcag_primary" : "1.2.1",
        "wcag_related" : ["1.2.2","1.2.4"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["video","track"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["controls","autoplay","name","type","src","label"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var video_elements     = dom_cache.media_cache.video_elements;\n    var video_elements_len = video_elements.length;\n\n    for (var i = 0; i < video_elements_len; i++) {\n      var ve = video_elements[i];\n      var de = ve.dom_element;\n      var cs = de.computed_style;\n\n      if ((cs.is_visible_to_at === VISIBILITY.VISIBLE) ||\n          (ve.has_autoplay)) {        \n        if (ve.getTextTracks().length) rule_result.addResult(TEST_RESULT.PASS, ve, 'ELEMENT_PASS_1', []);               \n        else if (de.has_aria_describedby) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ve, 'ELEMENT_MC_1', []);\n        else rule_result.addResult(TEST_RESULT.FAIL, ve, 'ELEMENT_FAIL_1', []);    \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ve, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 1",
        "definition" : "@video@ elements used for prerecorded video only content %s have text or audio description of the video content",
        "summary" : "@video@ for video only %s have alternative",
        "target_resource_desc" : "@video@ elements",
        "purpose" : [
           "Text and audio descriptions provide a means for people cannot see the video to understand the video content",
          "Some types of learning disabilities affect visual processing, text and audio descriptions provide an alternative way to understand the video content"
        ],
        "techniques" : [
           "Use the @track@ element to add audio descriptions to the video content",
          "Use @aria-describedby@ to reference a text description of the video content"
        ],
        "manual_checks" : [
           "When audio descriptions are enabled on the media player, check to make sure the audio description can be heard",
           "If there is a audio description make sure the description accurately describes the video content",
          "If there is a text description make sure the description accurately describes the video content"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The video element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-video-element"
          },
          { "type"  : 9,
            "title" : "HMTL 5: The track element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-track-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add text or audio description to @video@ element",
           "FAIL_P": "Add a text or audio description to each of the %N_F the @video@ elements with out captions or transcripts",
           "MANUAL_CHECK_S": "Verify the @video@ element with the @aria-describedby@ attributes is used for video only content.   If so, verify the text description reference using the @aria-describedby@ describes the video only content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @video@ elements with the @aria-describedby@ attributes are used for video only content.   If so, verify the text description reference using the @aria-describedby@ describes the video only content",
           "HIDDEN_S": "The @video@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @video@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @video@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@video@ element has audio description track",
           "ELEMENT_MC_1": "Verify the @video@ element is used for video only content.   If so, verify the text description reference using the @aria-describedby@ describes the video only content",
           "ELEMENT_FAIL_1": "Add text description reference or audio description track to @video@ element",
           "ELEMENT_HIDDEN_1": "The @video@ element is hidden and therefore not evaluated"    
        }
      },
      {
        "rule_id" : "VIDEO_2",
        "scope" : 1,
        "wcag_primary" : "1.2.1",
        "wcag_related" : ["1.2.2","1.2.4"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["object","param"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["data","type","name","value","valuetype"],
        "validate" : "function (dom_cache, rule_result) {\n    \n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var object_elements     = dom_cache.media_cache.object_elements;\n    var object_elements_len = object_elements.length;\n\n    for (var i = 0; i < object_elements_len; i++) {\n      var oe = object_elements[i];\n      var de = oe.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (oe.isTypeVideo()) {\n          if (de.has_aria_describedby) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_1', []);\n          else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_2', []);     \n        }  \n        else {\n          if (de.has_aria_describedby) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_3', []);\n          else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_4', []);     \n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, oe, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 2",
        "definition" : "@object@ elements used for prerecorded video only content %s have text or audio descriptions of the video content",
        "summary" : "@object@ for video only %s have alternative",
        "target_resource_desc" : "@object@ elements",
        "purpose" : [
           "Text and audio descriptions provide a means for people cannot see the video to understand the video content",
          "Some types of learning disabilities affect visual processing, text and audio descriptions provide an alternative way to understand the video content"
        ],
        "techniques" : [
           "Use the @video@ element instead of the @object@ element for video only content, since the @video@ element provides better support for audio description tracks",
           "Include an audio track in the video that describes the video content",
          "Use @aria-describedby@ attribute to point to a text description of the video only content"
        ],
        "manual_checks" : [
           "When audio descriptions are enabled on the media player, check to make sure the audio description can be heard",
           "If there is a audio description make sure the description accurately describes the video content",
          "If there is a text description make sure the description accurately describes the video content"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The object element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-object-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @object@ element is used for prerecorded video only content.  If it is used for video only, verify it has either a text or audio description of the video content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @object@ elements are used for prerecorded video only content.  If any are used for video only, verify they have either a text or audio description of the video content",
           "HIDDEN_S": "The @object@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @object@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @object@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the @object@ element with @video@ in its @type@ attrbute is used for video only content.  If so verify the @aria-describedby@ references a text description of the video only content",
           "ELEMENT_MC_2": "Verify the @object@ element with @video@ in its @type@ attrbute is used for video only content.  If so verify the video only content has a text or audio descriptions",
           "ELEMENT_MC_3": "Verify if the @object@ element is used for video only content.  If so verify the @aria-describedby@ references a text description of the video only content",
           "ELEMENT_MC_4": "Verify if the @object@ element is used for video only content.  If so verify the video only content has a text or audio description",
           "ELEMENT_HIDDEN_1": "The @object@ element is hidden and cannot render video content"    
        }
      },
      {
        "rule_id" : "VIDEO_3",
        "scope" : 1,
        "wcag_primary" : "1.2.1",
        "wcag_related" : ["1.2.2","1.2.4"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["embed"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["src","type"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var embed_elements     = dom_cache.media_cache.embed_elements;\n    var embed_elements_len = embed_elements.length;\n\n    for (var i = 0; i < embed_elements_len; i++) {\n      var ee = embed_elements[i];\n      var de = ee.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (ee.isTypeVideo()) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_1', []);     \n        }  \n        else {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_2', []);     \n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ee, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 3",
        "definition" : "@embed@ elements used for video only content %s have caption or text transcription of the audio content",
        "summary" : "@embed@ for video only %s have alternative",
        "target_resource_desc" : "@embed@ elements",
        "purpose" : [
           "Text and audio descriptions provide a means for people cannot see the video to understand the video content",
          "Some types of learning disabilities affect visual processing, text and audio descriptions provide an alternative way to understand the video content"
        ],
        "techniques" : [
           "Use the @video@ element instead of the @embed@ element for video only content, since the @video@ element provides better support for audio description tracks",
           "Include an audio track in the video that describes the video content",
          "Use @aria-describedby@ attribute to point to a text description of the video only content"
        ],
        "manual_checks" : [
           "When audio descriptions are enabled on the media player, check to make sure the audio description can be heard",
           "If there is a audio description make sure the description accurately describes the video content",
          "If there is a text description make sure the description accurately describes the video content"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The embed element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-embed-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @embed@ element is used for prerecorded video only content.  If it is used for video only, verify it has either a text or audio description of the video content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @embed@ elements are used for prerecorded video only content.  If any are used for video only, verify they have either a text or audio description of the video content",
           "HIDDEN_S": "The @embed@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @embed@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @embed@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the @embed@ element with @video@ in its @type@ attribute is used for video only content.  If so verify the @aria-describedby@ references a text description of the video only content",
           "ELEMENT_MC_2": "Verify the @embed@ element with @video@ in its @type@ attribute is used for video only content.  If so verify the video only content has a text or audio description",
           "ELEMENT_MC_3": "Verify if the @embed@ element is used for video only content.  If so verify the @aria-describedby@ references a text description of the video only content",
           "ELEMENT_MC_4": "Verify if the @embed@ element is used for video only content.  If so verify the video only content has a text or audio description",
           "ELEMENT_HIDDEN_1": "The @embed@ element is hidden and cannot render video content"    
        }
      },
      {
        "rule_id" : "VIDEO_4",
        "scope" : 1,
        "wcag_primary" : "1.2.2",
        "wcag_related" : ["1.2.4"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["video","track"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["controls","autoplay","name","type","src","label"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var video_elements     = dom_cache.media_cache.video_elements;\n    var video_elements_len = video_elements.length;\n\n    for (var i = 0; i < video_elements_len; i++) {\n      var ve = video_elements[i];\n      var de = ve.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (ve.hasCaptionTrack() || ve.hasSubtitleTrack()) rule_result.addResult(TEST_RESULT.PASS, ve, 'ELEMENT_PASS_1', []);               \n        else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ve, 'ELEMENT_MC_1', []);    \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ve, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 4",
        "definition" : "Live and prerecorded video with synchronized audio (i.e. a movie, lecture) using the @video@ element %s have synchronized captions",
        "summary" : "@video@ %s have caption",
        "target_resource_desc" : "@video@ elements",
        "purpose" : [
           "Synchronized captions provide a means for people cannot hear the audio content of a video to understand the audio content of the video",
           "Some types of learning disabilities affect auditory processing, captions provide an alternative way to understand the audio content of a video",
          "This rule covers the requirements of both WCAG 2.0 Success Criteria 1.2.2 and 1.2.4, and therefore covers both live and prerecorded video content"
        ],
        "techniques" : [
           "Use the @track@ element to add a caption track to the video content",
           "Use open captions to include the captions as part of the video.",
           "If closed captions are not support, use open captioning to include captions as part of the video.",
          "Open captioning is the only way to insure that captions are available on most cells phones and tablet computers connecting through wireless services."
        ],
        "manual_checks" : [
           "When captions are enabled on the media player, verify the captions are visible",
          "Verify that the captions accurately represent and are synchronized with the speech and sounds in the video"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The video element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-video-element"
          },
          { "type"  : 9,
            "title" : "HMTL 5: The track element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-track-element"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add caption @track@ element to the @video@ element",
           "FAIL_P": "Add caption @track@ element to each of the %N_F @video@ elements with out caption tracks",
           "MANUAL_CHECK_S": "Verify that the @video@ element without a caption track has open captions",
           "MANUAL_CHECK_P": "Verify that the %N_MC @video@ elements without caption tracks have open captions",
           "HIDDEN_S": "The @video@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @video@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @video@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@video@ element has caption track",
           "ELEMENT_FAIL_1": "Add caption @track@ element to @video@ element",
           "ELEMENT_MC_1": "Verify the video content includes open captions",
           "ELEMENT_HIDDEN_1": "The @video@ element is hidden and cannot render content"    
        }
      },
      {
        "rule_id" : "VIDEO_5",
        "scope" : 1,
        "wcag_primary" : "1.2.2",
        "wcag_related" : ["1.2.4"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["object","param"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["data","type","name","value","valuetype"],
        "validate" : "function (dom_cache, rule_result) {\n    \n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var object_elements     = dom_cache.media_cache.object_elements;\n    var object_elements_len = object_elements.length;\n\n    for (var i = 0; i < object_elements_len; i++) {\n      var oe = object_elements[i];\n      var de = oe.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (oe.isTypeVideo()) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_1', []);     \n        }  \n        else {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_2', []);     \n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, oe, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 5",
        "definition" : "Live and prerecorded video with synchronized audio (i.e. a movie, lecture) using the @object@ element %s have synchronized captions",
        "summary" : "@object@ for video %s have captions",
        "target_resource_desc" : "@object@ elements",
        "purpose" : [
           "Synchronized captions provide a means for people who cannot hear the audio content of a video to have access to the speech and sounds of the video.",
           "Some types of learning disabilities effect auditory processing, captions provide an alternative way to understand the audio content of a video.",
          "This rule covers the requirements of both WCAG 2.0 Success Criteria 1.2.2 and 1.2.4, and therefore covers both live and prerecorded content."
        ],
        "techniques" : [
           "Consider using the @video@ element instead of the @object@ element for video containing synchronized audio.  The @video@ element has better support for adding caption tracks.",
           "Use video authoring tools and player technologies that support captioning.  Use the features of the authoring system and player to add open or closed captions to the video.",
           "If closed captions are not support, use open captioning to include captions as part of the video.",
          "Open captioning is the only way to insure that captions are available on most cells phones and tablet computers."
        ],
        "manual_checks" : [
           "When captions are enabled on the media player, verify the captions are visible",
          "Verify that the captions accurately represent and are synchronized with the speech and sounds in the video"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The object element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-object-element"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @object@ element is used for video content with synchronized audio (i.e movie, lecture).  If it is video with synchronized audio, verify it has open or closed captioning of the audio content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @object@ elements are used for video content with synchronized audio (i.e movie, lecture).  If any are used for video with synchronized audio, verify it has open or closed captioning of the audio content",
           "HIDDEN_S": "The @object@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @object@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @object@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the @object@ element with @video@ in its @type@ attribute has synchronized audio (i.e. movie, lecture).  If so, verify there is open or closed captioning of the audio content",
           "ELEMENT_MC_2": "Verify the @object@ element renders video content with synchronized audio (i.e. movie, lecture).  If so, verify there is open or closed captioning of the audio content",
           "ELEMENT_HIDDEN_1": "The @object@ element is hidden and cannot render video content"    
        }
      },
      {
        "rule_id" : "VIDEO_6",
        "scope" : 1,
        "wcag_primary" : "1.2.2",
        "wcag_related" : ["1.2.1","1.2.4"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["embed"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["src","type"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var embed_elements     = dom_cache.media_cache.embed_elements;\n    var embed_elements_len = embed_elements.length;\n\n    for (var i = 0; i < embed_elements_len; i++) {\n      var ee = embed_elements[i];\n      var de = ee.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (ee.isTypeVideo()) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_1', []);\n        }  \n        else {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_2', []);     \n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ee, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 6",
        "definition" : "Live and prerecorded video with synchronized audio (i.e. a movie, lecture) using the @embed@ element %s have synchronized captions",
        "summary" : "@embed@ for video %s have captions",
        "target_resource_desc" : "@embed@ elements",
        "purpose" : [
           "Synchronized captions provide a means for people who cannot hear the audio content of a video to have access to the speech and sounds of the video",
           "Some types of learning disabilities effect auditory processing, captoins provide an alternative way to understand the audio content of a video",
          "This rule covers the requirements of both WCAG 2.0 Success Criteria 1.2.2 and 1.2.4, and therefore covers both live and prerecorded content"
        ],
        "techniques" : [
           "Consider using the @video@ element instead of the @object@ element for video containing synchronized audio.  The @video@ element has better support for adding caption tracks.",
           "Use video authoring tools and player technologies that support captioning.  Use the features of the authoring system and player to add open or closed captions to the video.",
           "If closed captions are not support, use open captioning to include captions as part of the video.",
          "Open captioning is the only way to insure that captions are available on most cells phones and tablet computers."
        ],
        "manual_checks" : [
           "When captions are enabled on the media player, verify the captions are visible",
          "Verify that the captions accurately represent and are synchronized with the speech and sounds in the video"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The embed element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-embed-element"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @embed@ element is used for video content with synchronized audio (i.e movie, lecture).  If it is video with synchronized audio, verify it has captions of the audio content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @embed@ elements are used for video content with synchronized audio (i.e movie, lecture).  If any are used for video with synchronized audio, verify it has captions of the audio content",
           "HIDDEN_S": "The @embed@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @embed@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @embed@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the @embed@ element with @video@ in its @type@ attribute has synchronized audio (i.e. movie, lecture).  If so, verify their are captions avialble for the audio content",
           "ELEMENT_MC_2": "Verify the @embed@ element renders video content with synchronized audio (i.e. movie, lecture).  If so, verify their are captions avialble for the audio content",
           "ELEMENT_HIDDEN_1": "The @embed@ element is hidden and cannot render video content"    
        }
      },
      {
        "rule_id" : "VIDEO_7",
        "scope" : 1,
        "wcag_primary" : "1.2.3",
        "wcag_related" : ["1.2.5"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["video","track"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["controls","autoplay","name","type","src","label"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var video_elements     = dom_cache.media_cache.video_elements;\n    var video_elements_len = video_elements.length;\n\n    for (var i = 0; i < video_elements_len; i++) {\n      var ve = video_elements[i];\n      var de = ve.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (ve.hasDescriptionTrack()) rule_result.addResult(TEST_RESULT.PASS, ve, 'ELEMENT_PASS_1', []);\n        else rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ve, 'ELEMENT_MC_1', []);    \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ve, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 7",
        "definition" : "@video@ elements used for prerecorded video with synchronized audio (i.e. a movie, archived lecture) %s have an audio description of the video content",
        "summary" : "@video@ element %s have audio description",
        "target_resource_desc" : "@video@ elements",
        "purpose" : [
           "Text and audio descriptions provide a means for people cannot see the video to understand the video content",
           "Some types of learning disabilities affect visual processing, text and audio descriptions provide an alternative way to understand the video content",
          "This rule covers the requirements of both WCAG 2.0 Success Criteria 1.2.3 and 1.2.5, that is why a text description of the video content cannot be used to satisfy this rule"
        ],
        "techniques" : [
           "Use the @track@ element to add audio descriptions to the video content",
          "Use @aria-describedby@ to reference a text description of the video content"
        ],
        "manual_checks" : [
           "When audio descriptions are enabled on the media player, check to make sure the audio description can be heard",
           "If there is a audio description make sure the description accurately describes the video content",
          "If there is a text description make sure the description accurately describes the video content"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The video element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-video-element"
          },
          { "type"  : 9,
            "title" : "HMTL 5: The track element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-track-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add audio description track to @video@ element without an audio description track",
           "FAIL_P": "Add audio description track to each of the %N_F the @video@ elements without audio description tracks",
           "MANUAL_CHECK_S": "Verify the @video@ element with is used for prerecorded video with synchronized audio.   If so, verify the video includes an audio description of the video content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @video@ elements are used for prerecorded video with synchronized audio.   If so, verify each of the videos includes an audio description of the video content",
           "HIDDEN_S": "The @video@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @video@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @video@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@video@ element has audio description track",
           "ELEMENT_FAIL_1": "Add audio description track to @video@ element",
           "ELEMENT_MC_1": "Verify an audio description of the video content is included in the audio track of the video",
           "ELEMENT_HIDDEN_1": "The @video@ element is hidden and cannot render content"    
        }
      },
      {
        "rule_id" : "VIDEO_8",
        "scope" : 1,
        "wcag_primary" : "1.2.3",
        "wcag_related" : ["1.2.1","1.2.5"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["object","param"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["data","type","name","value","valuetype"],
        "validate" : "function (dom_cache, rule_result) {\n    \n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var object_elements     = dom_cache.media_cache.object_elements;\n    var object_elements_len = object_elements.length;\n\n    for (var i = 0; i < object_elements_len; i++) {\n      var oe = object_elements[i];\n      var de = oe.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (oe.isTypeVideo()) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_1', []);     \n        }  \n        else {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, oe, 'ELEMENT_MC_2', []);     \n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, oe, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }\n  }",
        "nls_rule_id" : "Video Rule 8",
        "definition" : "@object@ elements used for prerecorded video with synchronized audio (i.e. a movie, archived lecture) %s have an audio description of the video content",
        "summary" : "@object@ for used for movie %s have video description",
        "target_resource_desc" : "@object@ elements",
        "purpose" : [
           "Text and audio descriptions provide a means for people cannot see the video to understand the video content",
           "Some types of learning disabilities affect visual processing, text and audio descriptions provide an alternative way to understand the video content",
          "This rule covers the requirements of both WCAG 2.0 Success Criteria 1.2.3 and 1.2.5, that is why a text description of the video content cannot be used to satisfy this rule"
        ],
        "techniques" : [
           "Use the @video@ element instead of the @object@ element for video only content, since the @video@ element provides better support for audio description tracks",
           "Include an audio track in the video that describes the video content",
          "Use @aria-describedby@ attribute to point to a text description of the video only content"
        ],
        "manual_checks" : [
           "When audio descriptions are enabled on the media player, check to make sure the audio description can be heard",
           "If there is a audio description make sure the description accurately describes the video content",
          "If there is a text description make sure the description accurately describes the video content"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The object element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-object-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @object@ element is used for prerecorded video with synchronized audio (i.e. a movie, archived lecture).  If so, verify the video includes an audio description of the video content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @object@ elements are used for prerecorded video with synchronized audio (i.e. a movie, archived lecture).  If so, verify each video includes an audio description of the video content",
           "HIDDEN_S": "The @object@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @object@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @object@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the @object@ element with @video@ in its @type@ attrbute is used for prerecorded video with synchronized audio (i.e. a movie, archived lecture).  If so verify an audio description of the video content is available.",
           "ELEMENT_MC_2": "Verify if the @object@ element is used for prerecorded video with synchronized audio (i.e. a movie, archived lecture).  If so verify an audio description of the video content is available.",
           "ELEMENT_HIDDEN_1": "The @object@ element is hidden and cannot render video content"    
        }
      },
      {
        "rule_id" : "VIDEO_9",
        "scope" : 1,
        "wcag_primary" : "1.2.3",
        "wcag_related" : ["1.2.1","1.2.5"],
        "last_updated" : "2012-10-31",
        "target_resources" : ["embed"],
        "rule_category" : 1,
        "language_dependency" : "",
        "cache_dependency" : "media_cache",
        "resource_properties" : ["src","type"],
        "validate" : "function (dom_cache, rule_result) {\n\n    var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n    var VISIBILITY  = OpenAjax.a11y.VISIBILITY;\n    var MEDIA       = OpenAjax.a11y.MEDIA;\n  \n    var embed_elements     = dom_cache.media_cache.embed_elements;\n    var embed_elements_len = embed_elements.length;\n\n    for (var i = 0; i < embed_elements_len; i++) {\n      var ee = embed_elements[i];\n      var de = ee.dom_element;\n      var cs = de.computed_style;\n\n      if (cs.is_visible_to_at === VISIBILITY.VISIBLE) {\n        if (ee.isTypeVideo()) {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_1', []);     \n        }  \n        else {\n          rule_result.addResult(TEST_RESULT.MANUAL_CHECK, ee, 'ELEMENT_MC_2', []);     \n        }  \n      }\n      else {\n       rule_result.addResult(TEST_RESULT.HIDDEN, ee, 'ELEMENT_HIDDEN_1', []);     \n      }\n    }  \n  }",
        "nls_rule_id" : "Video Rule 9",
        "definition" : "@embed@ elements used for prerecorded video with synchronized audio (i.e. a movie, archived lecture) %s have audio description of the video content",
        "summary" : "@embed@ for used for movie %s have video description",
        "target_resource_desc" : "@embed@ elements",
        "purpose" : [
           "Text and audio descriptions provide a means for people cannot see the video to understand the video content",
           "Some types of learning disabilities affect visual processing, text and audio descriptions provide an alternative way to understand the video content",
          "This rule covers the requirements of both WCAG 2.0 Success Criteria 1.2.3 and 1.2.5, that is why a text description of the video content cannot be used to satisfy this rule"
        ],
        "techniques" : [
           "Use the @video@ element instead of the @embed@ element for video only content, since the @video@ element provides better support for audio description tracks",
           "Include an audio track in the video that describes the video content",
          "Use @aria-describedby@ attribute to point to a text description of the video only content"
        ],
        "manual_checks" : [
           "When audio descriptions are enabled on the media player, check to make sure the audio description can be heard",
           "If there is a audio description make sure the description accurately describes the video content",
          "If there is a text description make sure the description accurately describes the video content"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "HMTL 5: The embed element",
            "url"   : "http://www.w3.org/TR/html5/embedded-content-0.html#the-embed-element"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (ARIA) 1.0: aria-describedby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby"
          }
        ],
        "rule_result_messages" : {
           "MANUAL_CHECK_S": "Verify the @embed@ element is used for prerecorded video with synchronized audio (i.e. a movie, archived lecture).   If so, verify the video includes an audio description of the video content",
           "MANUAL_CHECK_P": "Verify if any of the %N_MC @embed@ elements are used for prerecorded video with synchronized audio (i.e. a movie, archived lecture).   If so, verify each of the videos include an audio description of the video content",
           "HIDDEN_S": "The @embed@ element that is hidden was not evaluated",
           "HIDDEN_P": "The %N_H @embed@ elements that are hidden were not evaluated",
           "NOT_APPLICABLE": "No @embed@ elements found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_MC_1": "Verify the @embed@ element with @video@ in its @type@ attrbute is used for video with synchronized audio (i.e. a movie, archived lecture).  If so, verify the video includes an audio description of the video content",
           "ELEMENT_MC_2": "Verify if the @embed@ element is used for video with synchronized audio (i.e. a movie, archived lecture).  If so, verify the video includes an audio description of the video content",
           "ELEMENT_HIDDEN_1": "The @embed@ element is hidden and cannot render video content"    
        }
      },
      {
        "rule_id" : "WIDGET_1",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-12",
        "target_resources" : ["[role='widget']"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["accessible_name","accessible_description","computed_label_source"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widgets     = dom_cache.controls_cache.widget_elements;\n     var widgets_len = widgets.length;\n       \n     // Check to see if valid cache reference\n     if (widgets && widgets_len) {\n     \n       for (var i = 0; i < widgets_len; i++) {\n         var we = widgets[i];\n         var de = we.dom_element;\n  \n         if (de.is_widget) {\n         \n           if (de.computed_style.is_visible_to_at == VISIBILITY.VISIBLE) {\n     \n             if (we.computed_label && we.computed_label.length) {\n               rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_1', [de.role]);     \n             }\n             else {\n               if (!de.role_info.reqName) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, we, 'ELEMENT_MC_1', [de.role]);  \n               else rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_1', [de.role]);     \n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, we, 'ELEMENT_HIDDEN_1', [de.role]);     \n           }\n         }  \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 1",
        "definition" : "Widgets %s have an accessible name",
        "summary" : "Widget %s have name",
        "target_resource_desc" : "Elements with @role@ attribute values that are defined as widgets",
        "purpose" : [
          "A name associated with a widget insures that information about the widget is spoken by screen readers when it receives focus"
        ],
        "techniques" : [
           "In some cases the child text nodes and @alt@ from descendant image elements will be used as the name for a widget",
           "Use @aria-labelledby@ attribute to reference the id(s) of the elements on the page that describe the purpose of the widget",
           "Use @aria-label@ attribute to provide a explicit text description of the purpose of the widget",
          "Elements that have container widget roles typically do not receive keyboard focus, but giving them an accessible name provides assistive technologies a more accurate description of the purpose of the widget"
        ],
        "manual_checks" : [
          "When there is more than one widget of the same type on a page, they need an accessible name for users to uniquely identify the form control"
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Accessible Name Calculation",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#namecalculation"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: aria-labelledby",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: aria-label",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties#aria-label"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 10,
            "title" : "WAI-ARIA 1.0 Authoring Practices",
            "url"   : "http://www.w3.org/TR/wai-aria-practices/"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add accessible name to the widget",
           "FAIL_P": "Add an accessible name to %N_F out of %N_T widgets",
           "MANUAL_CHECK_S": "Widget may need an accessible name",
           "MANUAL_CHECK_P": "%N_MC out of %N_T widgets may need an accessible name",
           "HIDDEN_S": "The @widget@ that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H @widegts@ that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No widgets on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "%1 widget has accessible name",
           "ELEMENT_MC_1": "%1 widget may require an accessible name depending on context (i.e multiple widgets with the same role) in the page, adding an accessible name will improve accessibility",
           "ELEMENT_FAIL_1": "Add accessible name to %1 widget",
           "ELEMENT_HIDDEN_1": "Accessible name for widget was not tested because %1 widget is hidden from assistive technologies and/or not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_2",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-12",
        "target_resources" : ["[onClick]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["tag_name","role","has_click","is_widget"],
        "validate" : "function (dom_cache, rule_result) {\n    \n     function hasDecendantWidgetRole(dom_element) {\n       \n       function checkChildren(list) {\n       \n         if (typeof list !== 'object') return false;\n       \n         var flag = false;\n       \n         for (var i = 0; (i < list.length) && !flag; i++) {\n           \n           var de = list[i];\n           \n           if (de.type != Node.ELEMENT_NODE) continue;\n           \n           if (de.is_widget) flag = true;\n\n           if (de.child_dom_elements.length) flag = checkChildren(de.child_dom_elements);\n            \n         }\n         \n         return flag;\n       \n       }\n          \n       return checkChildren(dom_element.child_dom_elements);     \n     }  \n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var dom_elements     = dom_cache.element_cache.dom_elements;\n     var dom_elements_len = dom_elements.length;\n       \n     if (dom_elements && dom_elements_len) {\n     \n       for (var i = 0; i < dom_elements_len; i++) {\n         var de = dom_elements[i];\n         var style = de.computed_style;\n       \n        if (de.events.has_click) { \n        \n           if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n             if (de.tag_name !== 'body' && de.tag_name !== 'frame' &&  de.tag_name !== 'iframe') {\n         \n               if (de.is_widget) {\n                 if (!isNaN(de.tab_index))  rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [de.tag_name]);     \n                 else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.tag_name, de.role]);\n               }\n               else if ('input textarea button select'.indexOf(de.tag_name) >= 0) {\n                   rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_2', [de.tag_name]);     \n                 }\n                 else if ('a area'.indexOf(de.tag_name) >= 0) {\n                   rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_3', [de.tag_name]);\n                 }\n                 else {\n                   if (hasDecendantWidgetRole(de)) rule_result.addResult(TEST_RESULT.MANUAL_CHECK, de, 'ELEMENT_MC_1', [de.tag_name]);\n                   else if (!isNaN(de.tab_index)) rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_2', [de.tag_name]);     \n                   else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_3', [de.tag_name]);\n               }    \n             }\n             else {\n               rule_result.addResult(TEST_RESULT.MANUAL_CHECK, de, 'ELEMENT_MC_1', [de.tag_name]);\n             }\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.tag_name]);     \n           }\n         }  \n         \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 2",
        "definition" : "Elements with @onClick@ events %s be a link, button or have a widget role with tabindex",
        "summary" : "@onClick@ %s have role",
        "target_resource_desc" : "Elements with @onClick@ attribute values that are defined as widgets",
        "purpose" : [
          "Elements with @onClick@ event handlers must be a link, form control or have a widget role"
        ],
        "techniques" : [
           "Use ARIA widget role on non-form controls to describe their function on the page",
           "Use @tabindex@ attribute of '0' if the role of the element is a button or link",
          "Use @tabindex@ attribute of '-1' if the role of the element is NOT a button or link, provide keyboard event handlers to control selection of elements in the widget"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 9,
            "title" : "WAI-ARIA 1.0 Authoring Practices: Tabindex for managing focus",
            "url"   : "http://www.w3.org/TR/2010/WD-wai-aria-practices-20100916/#kbd_focus"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add widget role name to element",
           "FAIL_P": "Add widget roles to each of the %N_F elements",
           "MANUAL_CHECK_S": "Verify that any child elements that can respond to element with an @onclick@ event are a link, form control or has a widget role, and can be accessed with the keyboard alone",
           "MANUAL_CHECK_P": "Verify that any child elements that can respond to %N_MC elements with an @onclick@ event are a link, form control or has a widget role, and can be accessed with the keyboard alone",
           "HIDDEN_S": "The element with an @onClick@ event that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H elements with @onClick@ events that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No elements with @onClick@ events on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ element has a widget role",
           "ELEMENT_PASS_2": "@%1@ element is a form control",
           "ELEMENT_PASS_3": "@%1@ element is a link",
           "ELEMENT_FAIL_1": "Add a @tabindex@ attribute with a numeric value to make with @%1@ element with @%2@ widget role keyboard accessible",
           "ELEMENT_FAIL_2": "Add widget role to the @%1@ element",
           "ELEMENT_FAIL_3": "Add widget role to the @%1@ element and a @tabindex@ attribute with a numeric value to make it keyboard accessible",
           "ELEMENT_MC_1": "The @%1@ element has an @onclick@ event, verify any child elements that can respond to the @onclick@ event are a link, form control or have a widget role, and can be access with the keyboard alone",
           "ELEMENT_HIDDEN_1": "Elements with onClick events having a @role@ was not tested because %1 element with @onClick@ event is hidden from assistive technologies and/or not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_3",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-12",
        "target_resources" : ["[onClick]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var elements_with_role     = dom_cache.controls_cache.elements_with_role;\n     var elements_with_role_len = elements_with_role.length;\n     \n     if (elements_with_role && elements_with_role_len) {\n     \n       for (var i = 0; i < elements_with_role_len; i++) {\n         var de = elements_with_role[i];\n         var style = de.computed_style;\n       \n         if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n           if (de.is_widget) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [de.role]);     \n           else if (de.is_landmark) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_2', [de.role]);\n           else if (de.is_live) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_3', [de.role]);\n           else if (de.is_section) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_4', [de.role]);\n           else if (de.is_abstract) rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.role]);\n           else if (de.role.length === 0) rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_2', []);\n           else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_3', [de.role]);\n         }\n         else {\n           rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.tag_name, de.role]);     \n         }         \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 3",
        "definition" : "@role@ attribute value %s be a widget, section, landmark or live region role",
        "summary" : "@role@ %s be valid",
        "target_resource_desc" : "Elements with @role@ attribute values",
        "purpose" : [
          "Elements with @role@ attributes describe the section of a document (i.e landmarks) and the types of interactive elements (i.e. widgets) to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
           "Use ARIA landmark roles to describe the sections of a web page",
          "Use ARIA widget roles to describe interactive elements on a web page"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Landmark Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#landmark_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add a valid widget, section, landmark or live region role value to the element",
           "FAIL_P": "Add a valid widget, section, landmark or live region role values to %N_F out of %N_T elements with @role@ attributes",
           "HIDDEN_S": "The element with a role that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H elements with a role that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No elements with @role@ attribute on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ is a widget role",
           "ELEMENT_PASS_2": "@%1@ is a landmark role",
           "ELEMENT_PASS_3": "@%1@ is a live region role",
           "ELEMENT_PASS_4": "@%1@ is a section role",
           "ELEMENT_FAIL_1": "@%1@ is an abstract ARIA role, change the role attribute to a widget, landmark or live region role",
           "ELEMENT_FAIL_2": "The @role@ attribute is an empty string, change the @role@ attribute value to an appropriate widget, landmark, section or live region role",
           "ELEMENT_FAIL_3": "@%1@ is not a defined ARIA role, change the @role@ attribute value to an appropriate widget, landmark, section or live region role",
           "ELEMENT_HIDDEN_1": "@role@ attribute value was not validated because the %1 element is hidden from assistive technologies and/or not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_4",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-12",
        "target_resources" : ["[aria-atomic]","[aria-autocomplete]","[aria-busy]","[aria-checked]","[aria-controls]","[aria-describedby]","[aria-disabled]","[aria-dropeffect]","[aria-expanded]","[aria-flowto]","[aria-grabbed]","[aria-haspopup]","[aria-hidden]","[aria-invalid]","[aria-label]","[aria-labelledby]","[aria-level]","[aria-live]","[aria-multiline]","[aria-multiselectable]","[aria-orientation]","[aria-owns]","[aria-pressed]","[aria-readonly]","[aria-relevant]","[aria-required]","[aria-selected]","[aria-sort]","[aria-valuemax]","[aria-valuemin]","[aria-valuenow]","[aria-valuetext]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : [],
        "validate" : "function (dom_cache, rule_result) {\n  \n     function makeProp(label, value) {\n     \n       var p = {};\n       \n       p.label = label;\n       p.value = value;\n       p.description = '';\n       \n       return p;\n     \n     }\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var elements_with_aria_attributes     = dom_cache.controls_cache.elements_with_aria_attributes;\n     var elements_with_aria_attributes_len = elements_with_aria_attributes.length;\n     \n     if (elements_with_aria_attributes && elements_with_aria_attributes_len) {\n     \n       for (var i = 0; i < elements_with_aria_attributes_len; i++) {\n         var de = elements_with_aria_attributes[i];\n         var style = de.computed_style;\n         var aria_attrs = de.aria_attributes;\n         var aria_attrs_len = aria_attrs.length;         \n\n         for (var j = 0; j < aria_attrs_len; j++) {\n         \n           var attr = aria_attrs[j];\n           \n           var prop = makeProp(attr.name, attr.value);\n         \n           if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n             if (attr.is_value_valid && attr.tokens) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [attr.name, attr.value], [prop]);\n             else if (attr.is_value_valid) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_2', [attr.name, attr.value, attr.type], [prop]);\n             else if (attr.type === 'nmtoken' || attr.type === 'boolean') rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [attr.name, attr.value, attr.tokens], [prop]);\n             else if (attr.type === 'nmtokens') rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_2', [attr.name, attr.value, attr.tokens], [prop]);\n             else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_3', [attr.name, attr.value, attr.type], [prop]);\n           \n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [attr.name, attr.value], [prop]);     \n           }\n           \n         } // end loop \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 4",
        "definition" : "ARIA property and state values %s be valid types",
        "summary" : "ARIA values %s be valid",
        "target_resource_desc" : "Elements with aria attributes",
        "purpose" : [
          "ARIA attributes must be a valid type to accurately describe web content to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
           "Use valid values for ARIA attributes",
          "Check W3C WAI Accessible Rich Internet Applications specifications for allowed values for ARIA attributes"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Supported Property and States",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change ARIA attribute to a valid type",
           "FAIL_P": "Change %N_F out of %N_T ARIA attributes to a valid types",
           "HIDDEN_S": "The widget that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H widgets that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No ARIA attributes on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @%1@ attribute with the value '@%2@' is a valid token",
           "ELEMENT_PASS_2": "The @%1@ attribute with the value '@%2@' is a valid '%3' type",
           "ELEMENT_FAIL_1": "The @%1@ attribute with the value '@%2@' must change to one of the following values: %3",
           "ELEMENT_FAIL_2": "The @%1@ attribute with the value '@%2@' must change to one or more of the following values: %3",
           "ELEMENT_FAIL_3": "The @%1@ attribute with the value '@%2@' must change to a value with type of '%3'",
           "ELEMENT_HIDDEN_1": "ARIA attribute value was not tested for validity because the @%1@ attribute with the value '@%2@' is hidden from assistive technologies and not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_5",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-12",
        "target_resources" : ["[aria-atomic]","[aria-autocomplete]","[aria-busy]","[aria-checked]","[aria-controls]","[aria-describedby]","[aria-disabled]","[aria-dropeffect]","[aria-expanded]","[aria-flowto]","[aria-grabbed]","[aria-haspopup]","[aria-hidden]","[aria-invalid]","[aria-label]","[aria-labelledby]","[aria-level]","[aria-live]","[aria-multiline]","[aria-multiselectable]","[aria-orientation]","[aria-owns]","[aria-pressed]","[aria-readonly]","[aria-relevant]","[aria-required]","[aria-selected]","[aria-sort]","[aria-valuemax]","[aria-valuemin]","[aria-valuenow]","[aria-valuetext]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : [],
        "validate" : "function (dom_cache, rule_result) {\n  \n     function makeProp(label, value) {\n     \n       var p = {};\n       \n       p.label = label;\n       p.value = value;\n       p.description = '';\n       \n       return p;\n     \n     }\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var elements_with_aria_attributes     = dom_cache.controls_cache.elements_with_aria_attributes;\n     var elements_with_aria_attributes_len = elements_with_aria_attributes.length;\n     \n     if (elements_with_aria_attributes && elements_with_aria_attributes_len) {\n     \n       for (var i = 0; i < elements_with_aria_attributes_len; i++) {\n         var de = elements_with_aria_attributes[i];\n         var style = de.computed_style;\n         var aria_attrs = de.aria_attributes;\n         var aria_attrs_len = aria_attrs.length;         \n\n         for (var j = 0; j < aria_attrs_len; j++) {\n         \n           var attr = aria_attrs[j];\n           \n           var prop = makeProp(attr.name, attr.value);\n         \n           if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n             if (attr.is_valid_attribute) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [attr.name], [prop]);\n             else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [attr.name], [prop]);\n           \n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [attr.name, attr.value], [prop]);     \n           }\n           \n         } // end loop \n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 5",
        "definition" : "ARIA property or state %s be defined",
        "summary" : "ARIA attribute %s be defined",
        "target_resource_desc" : "Elements with aria attributes",
        "purpose" : [
          "ARIA attributes must be defined properties or states to accurately describe web content to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
           "Use defined ARIA properties and states in the ARIA specification",
          "Check W3C WAI Accessible Rich Internet Applications specifications for allowed values for ARIA attributes"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Supported Property and States",
            "url"   : "http://www.w3.org/TR/wai-aria/states_and_properties"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Change ARIA attribute to a defined property or state",
           "FAIL_P": "Change all %N_F out of %N_T ARIA attributes to a defined properties or states",
           "HIDDEN_S": "The widget that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H widgets that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No undefined ARIA attributes on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "The @%1@ attribute is a defined ARIA property or state",
           "ELEMENT_FAIL_1": "The @%1@ attribute must be changed to a defined ARIA property or state",
           "ELEMENT_HIDDEN_1": "Valid ARIA attribute was not tested becasue the @%1@ attribute with the value '@%2@' is hidden from assistive technologies and/or not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_6",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-12",
        "target_resources" : ["[role]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n\n     function getRequiredPropertiesAndValues(dom_element, required_props) {\n    \n       var rps = [];\n     \n       var attrs     = dom_element.aria_attributes;\n       var attrs_len = attrs.length;\n     \n       for (var i = 0; i < required_props.length; i++) {\n       \n         var prop = required_props[i];\n       \n         var flag = false;\n       \n         for (var j = 0; j <attrs_len; j++) {\n           if (prop === attrs[j].name) { \n             flag = true;\n             break;\n           }\n         }\n         \n         var rp = {};\n         rp.label = prop;\n         rp.description = '';\n         rp.defined = flag;\n         \n         if (flag) {\n           rp.value  = attrs[j].value;\n         }\n         else {\n           rp.value  = 'undefined';       \n         }\n         \n         rps.push(rp);\n       \n       }\n       \n       return rps;\n     \n     }\n\n     function getPropsString(props) {\n     \n       var str = '';\n       var prop_max = props.length - 1;\n       \n       for (var i = 0; i < props.length; i++ ) {\n         str += props[i];\n         if (i !== prop_max) str += ', ';\n       }\n       \n       return str;\n     \n     }\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widget_elements     = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len = widget_elements.length;\n     \n     if (widget_elements && widget_elements) {\n     \n       for (var i = 0; i < widget_elements_len; i++) {\n         var we = widget_elements[i];\n         var de = we.dom_element;\n         var style = de.computed_style;\n       \n//         OpenAjax.a11y.logger.debug('  RULE WIDGET 6: ' + de.role + ' ('+ de.role_info + ')');\n       \n         var required_properties = de.role_info.reqProps;\n             \n         if (required_properties) {\n             \n           if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n             var props_string   = getPropsString(required_properties);\n             var required_props = getRequiredPropertiesAndValues(de, required_properties);\n             \n             var flag = true;\n             \n             for (var j = 0; (j < required_props.length) && flag; j++) flag = flag && required_props[j].defined;\n             \n             if (flag) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [de.role, props_string], required_props);     \n             else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.role, props_string], required_props);\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.role]);     \n           }\n         }\n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 6",
        "definition" : "Widgets %s define required properties and states",
        "summary" : "Widgets %s have properties",
        "target_resource_desc" : "Widgets with required properties and states",
        "purpose" : [
          "ARIA roles, properties and states describes the features of interactive widgets to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
          "Use required ARIA properties to describe the features and options of a widget"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add required properties and states to widget",
           "FAIL_P": "Add required properties and states to the %N_F of the %N_T widgets with required properties and/or states on the page",
           "HIDDEN_S": "The widget with required properties and states that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H widgets that have required properties and states that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No widgets with required properties and states on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ widget has the following required ARIA properties and states: %2",
           "ELEMENT_FAIL_1": "Add one or more of the required ARIA properties and states (i.e. '%2') to the @%1@ widget",
           "ELEMENT_HIDDEN_1": "Required ARA properties and states was not tested because the %1 widget is hidden from assistive technologies and/or not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_7",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-12",
        "target_resources" : ["[role]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n  \n  \n     function getRequiredChildRolesString(required_children) {\n     \n       var str = '';\n       var required_children_max = required_children.length - 1;\n       \n       for (var i = 0; i < required_children.length; i++ ) {\n         str += required_children[i];\n         if (i !== required_children_max) str += ', ';\n       }\n       \n       return str;\n     \n     }\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widget_elements     = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len = widget_elements.length;\n     \n     if (widget_elements && widget_elements) {\n     \n       for (var i = 0; i < widget_elements_len; i++) {\n         var we = widget_elements[i];\n         var de = we.dom_element;\n         var style = de.computed_style;\n       \n         var required_child_roles = de.role_info.reqChildren;\n             \n         if (required_child_roles) {\n             \n           if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n             var flag = false;\n             \n             for (var j = 0; (j < required_child_roles.length) && !flag; j++) {\n               \n               var role = required_child_roles[j];\n               \n               flag = we.hasChildRole(role);\n                              \n             }\n             \n             var required_child_roles_string = getRequiredChildRolesString(required_child_roles);\n             \n             if (flag) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [de.role, required_child_roles_string]);     \n             else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.role, required_child_roles_string]);\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.role]);     \n           }\n         }\n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 7",
        "definition" : "Widgets %s have required child roles",
        "summary" : "Widgets %s have child roles",
        "target_resource_desc" : "Widgets with required owned elements",
        "purpose" : [
          "ARIA roles, properties and states describes the features of interactive widgets to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
          "Use required ARIA owned elements to describe the features and options of a widget"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add required child roles to child elements in the widget",
           "FAIL_P": "Add required child roles to child elements in the %N_F out of %N_T widgets with required child elements",
           "HIDDEN_S": "The widget that requires child widget roles that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H widgets that require child widget roles that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No widgets with required child ARIA elements on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ widget has at least one required owned elements: %2",
           "ELEMENT_FAIL_1": "@%1@ widget is MISSING one or more of following required owned elements: %2",
           "ELEMENT_HIDDEN_1": "Required child widgets was not tested because the %1 widget is hidden from assistive technologies and not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_8",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-04-12",
        "target_resources" : ["[role]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["role"],
        "validate" : "function (dom_cache, rule_result) {\n  \n  \n     function getRequiredRolesString(required_roles) {\n     \n       var str = '';\n       required_roles_max = required_roles.length - 1;\n       \n       for (var i = 0; i < required_roles.length; i++ ) {\n         str += required_roles[i];\n         if (i !== required_roles_max) str += ', ';\n       }\n       \n       return str;\n     \n     }\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widget_elements     = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len = widget_elements.length;\n     \n     if (widget_elements && widget_elements) {\n     \n       for (var i = 0; i < widget_elements_len; i++) {\n         var we = widget_elements[i];\n         var de = we.dom_element;\n         var style = de.computed_style;\n       \n         var required_parent_roles = de.role_info.container;\n             \n         if (required_parent_roles) {\n             \n           if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n             var flag = false;\n             \n             for (var j = 0; (j < required_parent_roles.length) && !flag; j++) {\n               \n               var role = required_parent_roles[j];\n               \n               flag = we.hasParentRole(role);\n                              \n             }\n             \n             var required_roles_string = getRequiredRolesString(required_parent_roles);\n             \n             if (flag) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [de.role, role]);     \n             else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [required_roles_string, de.role]);\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.role]);     \n           }\n         }\n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 8",
        "definition" : "Widgets %s have required parent role",
        "summary" : "Widgets %s have parent",
        "target_resource_desc" : "Widgets with required parent role",
        "purpose" : [
          "ARIA roles, properties and states describes the features of interactive widgets to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
          "Use required parent roles to describe the features and options of a widget"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          },
          { "type"  : 2,
            "title" : "Accessible jQuery-ui Components Demonstration",
            "url"   : "http://access.aol.com/aegis/#goto_slider"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add required parent role to the widget",
           "FAIL_P": "Add required parent role to the %N_F of the %N_T widgets that require a parent role",
           "HIDDEN_S": "The widget that requires a parent role that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H widgets that require a parent roles that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No widgets with required parent role on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ widget is a child of the a @%2@ role",
           "ELEMENT_FAIL_1": "Create a parent widget with the role of @%1@ for this @%2@ widget",
           "ELEMENT_FAIL_2": "Create a parent widget with the one of the required roles (i.e. @%1@) for this @%2@ widget",
           "ELEMENT_HIDDEN_1": "Required parent widgets was not tested because the %1 widget is hidden from assistive technologies and/or not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_9",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-04",
        "target_resources" : ["[aria-owns]","[aria-owns]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["is_owned","owner_controls"],
        "validate" : "function (dom_cache, rule_result) {\n\n     function getParentWidgetString(list) {\n     \n       var str = '';\n       list_max = list.length - 1;\n       \n       for (var i = 0; i < list.length; i++ ) {\n         str += list[i].toString();\n         if (i !== list_max) str += '; ';\n       }\n       \n       return str;\n     \n     }\n   \n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widget_elements     = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len = widget_elements.length;\n     \n     if (widget_elements && widget_elements) {\n     \n       for (var i = 0; i < widget_elements_len; i++) {\n         var we = widget_elements[i];\n         var de = we.dom_element;\n         var style = de.computed_style;\n\n         if (we.is_owned) {\n             \n           if (style.is_visible_to_at == VISIBILITY.VISIBLE || style.is_visible_onscreen == VISIBILITY.VISIBLE ) {\n           \n             var parent_string = getParentWidgetString(we.owner_controls);\n             \n             if (we.owner_controls.length === 1) rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_1', [we.toString(), parent_string]);     \n             else if (we.owner_controls.length > 1) rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_1', [parent_string, we.toString()]);\n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, we, 'ELEMENT_HIDDEN_1', [we.toString()]);     \n           }\n         }\n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 9",
        "definition" : "Widgets %s be owned by only one parent widget",
        "summary" : "Only one owner",
        "target_resource_desc" : "Widgets with required parent roles",
        "purpose" : [
          "ARIA roles, properties and states describes the features of interactive widgets to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
          "Parent widget roles with aria-owns must accurately describe the parent relationships, a child widget can only have one parent widget"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Update widgets with aria-owns to make sure it only references a child widget once",
           "FAIL_P": "Update %N_F out of %N_T widgets with aria-owns to make sure they reference a child widget only once",
           "HIDDEN_S": "The widget with @aria-owns@ that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H widgets with @aria-owns@ that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No widgets using aria-owns on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ child widget is referenced only by @%2@ parent widget with aria-owns",
           "ELEMENT_FAIL_1": "Update references of @%1@ parent widgets with aria-owns to reference @%2@ child widget only once",
           "ELEMENT_HIDDEN_1": "Widgets owned by more than one parent widget was not tested becasue the %1 parent widget with aria-owns is hidden from assistive technologies and not visible on screen"    
        }
      },
      {
        "rule_id" : "WIDGET_10",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-04",
        "target_resources" : ["[role='slider']","[role='progress']","[role='scrollbar']","[role='spinbutton']"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : ["aria-valuemin","aria-valuenow","aria-valuemax"],
        "validate" : "function (dom_cache, rule_result) {\n\n     function getNotNumbersString() {\n     \n       var str = '';\n       \n       if (isNaN(min)) str += 'aria-valuemin';\n       \n       if (isNaN(max)) {\n         if (str.length > 0) str += ', ';\n         str += 'aria-valuemax';\n       }  \n       \n       if (isNaN(value)) {\n         if (str.length > 0) str += ', ';\n         str += 'aria-valuenow';\n       }  \n\n       return str;\n     }\n\n     function getNumberCount() {\n     \n       var count = 0;\n       \n       if (!isNaN(min)) count++;\n       if (!isNaN(max)) count++;\n       if (!isNaN(value)) count++;\n\n       return count;\n     }\n\n     function hasMaxMin() {\n     \n       var count = 0;\n       \n       if (!isNaN(min)) count++;\n       if (!isNaN(max)) count++;\n \n       return count === 2;\n     }\n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var widget_elements     = dom_cache.controls_cache.widget_elements;\n     var widget_elements_len = widget_elements.length;\n     \n     if (widget_elements && widget_elements) {\n     \n       for (var i = 0; i < widget_elements_len; i++) {\n         var we = widget_elements[i];\n         var de = we.dom_element;\n         var style = de.computed_style;\n\n         if (de.has_range) {\n             \n           if (style.is_visible_to_at === VISIBILITY.VISIBLE) {\n           \n             var valuetext = de.node.getAttribute('aria-valuetext');\n             var min       = parseInt(de.node.getAttribute('aria-valuemin'), 10);\n             var max       = parseInt(de.node.getAttribute('aria-valuemax'), 10);\n             var value     = parseInt(de.node.getAttribute('aria-valuenow'), 10);\n             var number_count = getNumberCount();\n             var has_max_min  = hasMaxMin();\n\n             if (typeof valuetext === 'string' && (valuetext.length > 0)) { \n               rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_1', [we, valuetext]);     \n             }  \n             else {\n               if (number_count === 3 || (de.role === 'progressbar' && has_max_min)) {\n                 if (min < max) {\n                   if ((min <= value) && (value <= max)) rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_2', [we, value, min, max]);     \n                   else if (de.role === 'progressbar' && has_max_min)  rule_result.addResult(TEST_RESULT.PASS, we, 'ELEMENT_PASS_3', [min, max]);\n                   else rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_1', [value, min, max]);\n                 }\n                 else {\n                   rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_2', [min, max]);\n                 }\n               }\n               else {\n               \n                  if (de.role === 'progressbar' && !has_max_min) {\n                    rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_3', [value, min, max]);\n                  }\n                  else { \n                    var not_numbers_string = getNotNumbersString();\n\n                   if (number_count === 1) rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_4', [not_numbers_string]);\n                   else rule_result.addResult(TEST_RESULT.FAIL, we, 'ELEMENT_FAIL_5', [not_numbers_string]);\n                 }  \n               }\n             }    \n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, we, 'ELEMENT_HIDDEN_1', [we.toString()]);     \n           }\n         }\n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 10",
        "definition" : "Range widget %s have value between minimum and maximum values",
        "summary" : "Value in range",
        "target_resource_desc" : "Range widgets ",
        "purpose" : [
          "ARIA roles, properties and states describes the features of interactive widgets to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
          "Use the @aria-valuenow@, @aria-valuemin@ and @aria-valuemax@ are accurately defined"
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Update @range@ widget attributes of the range widget so the @aria-valuenow@ attribute is in the range defined by @aria-valuemin@ and @aria-valuemax@ attributes",
           "FAIL_P": "Update @range@ widget attributes of the %N_F out of %N_T range widgets so the @aria-valuenow@ attribute of each widget is in the range defined by @aria-valuemin@ and @aria-valuemax@ attributes",
           "HIDDEN_S": "The @range@ widget that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H @range@ widgets that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No @range@ widgets on the page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ widget is using @aria-valuetext@ attribute which overrides the @aria-valuenow@ attribute for describing the value of the range",
           "ELEMENT_PASS_2": "@%1@ widget value of %2 is in the range %3 and %4",
           "ELEMENT_PASS_3": "@%1@ widget has the range %3 and %4, and by not including the @aria-valuenow@ attribute the value of the progress-bar is considered indeterminate",
           "ELEMENT_FAIL_1": "Update the numeric values of @aria-valuenow@ (%1), @aria-valuemin@ (%2) and @aria-valuemax@ (%3) so the @aria-valuenow@ value is in range",
           "ELEMENT_FAIL_2": "Update the numeric values of @aria-valuemin@ (%1) and @aria-valuemax@ (%2) so the @aria-valuemin@ value is less than the @aria-valuemax@ value",
           "ELEMENT_FAIL_3": "For progress bar update the numeric values or add @aria-valuemin@ (%2) and @aria-valuemax@ (%3) attributes and when state of progress is known use the @aria-valuenow@ attribute value to communicate the current state of progress",
           "ELEMENT_FAIL_4": "Update or create @%1@ attribute to be a numeric value",
           "ELEMENT_FAIL_5": "Update or create @%1@ attributes to be a numeric values",
           "ELEMENT_HIDDEN_1": "Widget range values were not tested becasue the %1 range widget is hidden from assistive technologies"    
        }
      },
      {
        "rule_id" : "WIDGET_11",
        "scope" : 1,
        "wcag_primary" : "4.1.2",
        "wcag_related" : ["1.3.1","3.3.2"],
        "last_updated" : "2012-12-04",
        "target_resources" : ["[onmousedown]","[onmouseup]","[onmousemove]"],
        "rule_category" : 512,
        "language_dependency" : "",
        "cache_dependency" : "controls_cache",
        "resource_properties" : [],
        "validate" : "function (dom_cache, rule_result) {\n\n     function getEventString() {\n     \n       var str = '';\n     \n       for (var i = 0; i < events_prop_list.length; i++) {\n         var prop = events_prop_list[i];\n         \n         if (str.length) str += ', ' + prop.label;\n         else str += prop.label;\n       }\n       \n       return str;\n     \n     }\n\n     function hasUIEvents(dom_element) {\n     \n        var list = [];\n     \n        var has_events = dom_element.hasMouseEvents(list);\n        has_events = has_events || dom_element.hasClickEvents(list);\n        has_events = has_events || dom_element.hasDragEvents(list);\n        has_events = has_events || dom_element.hasKeyboardEvents(list);\n        \n        events_prop_list = list;\n\n//        OpenAjax.a11y.logger.debug( dom_element.toString() + '  Number of Events: ' + list.length);\n\n        return has_events;\n     }\n\n     var VISIBILITY  = OpenAjax.a11y.VISIBILITY;   \n     var TEST_RESULT = OpenAjax.a11y.TEST_RESULT;\n      \n     var dom_elements_with_events     = dom_cache.controls_cache.elements_with_events;\n     var dom_elements_with_events_len = dom_elements_with_events.length;\n     \n     if (dom_elements_with_events_len) {\n     \n       for (var i = 0; i < dom_elements_with_events_len; i++) {\n         var de = dom_elements_with_events[i];\n         \n         var style = de.computed_style;\n         var events = de.events;\n\n         var events_prop_list = [];         \n\n         if (hasUIEvents(de)) {\n         \n           var events_str = getEventString();\n             \n           if (style.is_visible_to_at === VISIBILITY.VISIBLE) {\n           \n             if (de.is_widget) { \n               rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_1', [de.role, events_str], events_prop_list);     \n             }  \n             else {\n               if (de.is_interactive) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_2', [de.tag_name, events_str], events_prop_list);\n               else if (de.containsInteractiveElements()) rule_result.addResult(TEST_RESULT.PASS, de, 'ELEMENT_PASS_3', [de.tag_name, events_str], events_prop_list);\n               else rule_result.addResult(TEST_RESULT.FAIL, de, 'ELEMENT_FAIL_1', [de.tag_name, events_str], events_prop_list);\n             }  \n           }\n           else {\n             rule_result.addResult(TEST_RESULT.HIDDEN, de, 'ELEMENT_HIDDEN_1', [de.tag_name]);     \n           }\n         }\n       } // end loop\n     } \n   }",
        "nls_rule_id" : "Widget Rule 11",
        "definition" : "Elements with keyboard, mouse and/or drag events %s have widget roles or interactive elements (i.e. form controls or links)",
        "summary" : "Keyboard/Mouse/drag events %s have roles",
        "target_resource_desc" : "Elements with mouse events",
        "purpose" : [
          "ARIA roles, properties and states describes the features of interactive widgets to users of assistive technologies, especially screen reader users"
        ],
        "techniques" : [
           "Use the @role@ attribute to describe the type of widget associated with the mouse events",
          "Use ARIA properties and states attributes to describe features of each widget "
        ],
        "manual_checks" : [
        ],
        "informational_links" : [
          { "type"  : 9,
            "title" : "Accessible Rich Internet Applications (WAI-ARIA) 1.0 Specification: Widget Roles",
            "url"   : "http://www.w3.org/TR/wai-aria/roles#widget_roles"
          },
          { "type"  : 11,
            "title" : "G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes",
            "url"   : "http://www.w3.org/TR/2012/NOTE-WCAG20-TECHS-20120103/G108"
          },
          { "type"  : 2,
            "title" : "OAA Web Accessibility ARIA Examples",
            "url"   : "http://oaa-accessibility.org/examples/"
          }
        ],
        "rule_result_messages" : {
           "FAIL_S": "Add ARIA widget role to the element with events or child elements that accurately describe the user options and actions available to the user",
           "FAIL_P": "Add ARIA widget roles to the %N_F out of %N_T elements with events or their child elements that accurately describe the user options and actions available",
           "HIDDEN_S": "The @element@ with event handler that is hidden and was not evaluated.",
           "HIDDEN_P": "%N_H @element@ with event handlers that are hidden were not evaluated.",
           "NOT_APPLICABLE": "No elements with keyboard, mouse or drag events found on this page"    
        },
        "node_result_messages" : {
           "ELEMENT_PASS_1": "@%1@ widget has the following keyboard, mouse or drag event(s): %2",
           "ELEMENT_PASS_2": "@%1@ element has the following keyboard, mouse or drag event(s): %2",
           "ELEMENT_PASS_3": "@%1@ element with the following keyboard, mouse or drag event(s): %2 ; has descendant elements with widget roles or interactive elements",
           "ELEMENT_FAIL_1": "Add widget role(s) to the element and/or its descendants that accurately describe the user options and actions of the @%1@ element with the following keyboard, mouse or drag events: %2",
           "ELEMENT_HIDDEN_1": "Roles for interactive elements was not tested because the %1 element is hidden from assistive technologies with following keyboard, mouse or drag events: %2"    
        }
      }
    ]
,
  "rulesets" :     [
    {
      "ruleset_id"    : "FAE_11",
      "version"       : "0.9 Beta",
      "last_updated"  : "2013-11-13",
      "title"         : "FAE 1.1 Approximate Ruleset",
      "author_name"   : "OpenAjax Accessibility Working Group",
      "author_url"    : "http://www.openajax.org/member/wiki/Accessibility",
      "description"   : "The FAE 1.1 ruleset is designed to approximate the accessibility testing found in the FAE 1.1 accessibility evaluation tool.",
      "rule_mappings" : {
        "CONTROL_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HTML_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HTML_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TITLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_2" : {
                    "required"    : true,
                    "enabled" : true
                  }
      }
    },
    {
      "ruleset_id"    : "ARIA_TEST",
      "version"       : "0.9 Beta",
      "last_updated"  : "2013-11-13",
      "title"         : "TEST Ruleset",
      "author_name"   : "OpenAjax Accessibility Working Group",
      "author_url"    : "http://www.openajax.org/member/wiki/Accessibility",
      "description"   : "Test ruleset used for the test suite to make sure all rules are tested.",
      "rule_mappings" : {
        "AUDIO_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "AUDIO_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "AUDIO_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "COLOR_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_11" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_12" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_13" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HTML_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HTML_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_4_EN" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANGUAGE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANGUAGE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LINK_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LINK_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LINK_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LINK_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TITLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TITLE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_11" : {
                    "required"    : true,
                    "enabled" : true
                  }
      }
    },
    {
      "ruleset_id"    : "ARIA_TRANS",
      "version"       : "0.9 beta",
      "last_updated"  : "2013-11-13",
      "title"         : "WCAG 2.0 A and AA: ARIA Transitional",
      "author_name"   : "OpenAjax Accessibility Working Group",
      "author_url"    : "http://www.openajax.org/member/wiki/Accessibility",
      "description"   : "The ARIA transitional ruleset is based on current WCAG 2.0 sufficient techniques, when relavent techniques are available.  Recommendations are based on web accessibility and usability best practices using the features of the HTML and ARIA specifications.",
      "rule_mappings" : {
        "AUDIO_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "AUDIO_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "AUDIO_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "COLOR_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_11" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_12" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_13" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_1" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HEADING_2" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HEADING_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_7" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HTML_1" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HTML_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_4_EN" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "IMAGE_5" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "IMAGE_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_1" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LANDMARK_2" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LANDMARK_3" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LANDMARK_4" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LANDMARK_5" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LANDMARK_6" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LANDMARK_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANGUAGE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANGUAGE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_2" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LAYOUT_3" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LINK_1" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LINK_2" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LINK_3" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LINK_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_2" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "NAVIGATION_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_3" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "TABLE_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_6" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "TITLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TITLE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_11" : {
                    "required"    : true,
                    "enabled" : true
                  }
      }
    },
    {
      "ruleset_id"    : "ARIA_STRICT",
      "version"       : "0.9 Beta",
      "last_updated"  : "2013-11-13",
      "title"         : "WCAG 2.0 A and AA: ARIA Strict",
      "author_name"   : "OpenAjax Accessibility Working Group",
      "author_url"    : "http://www.openajax.org/member/wiki/Accessibility",
      "description"   : "ARIA strict ruleset is based on best practice design patterns to improve accessibility and usability with the features available in HTML and ARIA specifications to meet WCAG 2.0 success criteria.",
      "rule_mappings" : {
        "AUDIO_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "AUDIO_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "AUDIO_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "COLOR_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_11" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_12" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "CONTROL_13" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "FOCUS_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_1" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HEADING_2" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HEADING_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "HEADING_7" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HTML_1" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "HTML_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "IMAGE_4_EN" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "IMAGE_5" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "IMAGE_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "KEYBOARD_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANDMARK_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANGUAGE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LANGUAGE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LAYOUT_2" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LAYOUT_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LINK_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LINK_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "LINK_3" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "LINK_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "NAVIGATION_3" : {
                    "required"    : false,
                    "enabled" : true
                  },
        "TABLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TABLE_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "TITLE_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "VIDEO_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_1" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_2" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_3" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_4" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_5" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_6" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_7" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_8" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_9" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_10" : {
                    "required"    : true,
                    "enabled" : true
                  },
        "WIDGET_11" : {
                    "required"    : true,
                    "enabled" : true
                  }
      }
    }    ]

}
